<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2020+1</title>
    <url>/post/b6976a.html</url>
    <content><![CDATA[<h2 id="2020的结束"><a href="#2020的结束" class="headerlink" title="2020的结束"></a><font color="#495969">2020的结束</font></h2><blockquote>
<p>这些东西，有时候你说宿命，我也不得不信。</p>
</blockquote>
<p>当你回忆的时候，试想一下，你带着耳机，保温杯里刚沏了茶，茶叶丢进去拧紧瓶盖，留在外面一根棉线。过了一会，你用手一捋，发现茶水顺着棉线爬了出来，你开始怀疑，是不是瓶盖没有拧紧。怎么会呢，回忆这东西就是这样，无论你如何想法设法把它关在一个空间内，它还是渗透，渗透，趁你不注意偷偷溜出来。当你想用手去抚摸它的时候，忽然发现它都已经湿透，再过会就要往下滴了。<br>2020多吉利啊，我在两年前就想了，多好的年份，科技发展，高中毕业，一切都是向好的方向发展。但格局小的我当然不会意识到，世界变不变好不由得我，还有很多我不了解却在深刻影响世界的东西在发生。但，其实呢，我并不觉得这一年有多坏，但是鉴于大家都说2020不好，我也不能表现出来，我多喜爱这个年份。</p>
<h2 id="2021的开始"><a href="#2021的开始" class="headerlink" title="2021的开始"></a><font color="#495969">2021的开始</font></h2><blockquote>
<p>把发热的面颊<br>埋在柔软的积雪里一般<br>想那么恋爱一下看看</p>
</blockquote>
<p>2021|2021|2021|2021|2021|2021|2021|2021|2021|<br>多么高级的数字，又酷又遥远。我写这篇post的时候生成的时间是 <strong><font color="#495969">“2021-01-07 15:01:51”</font></strong> 太奇怪了吧，这种时间我居然正在过着，这根本不属于我啊，我仍然感觉2008听起来很熟悉，觉得2016很熟悉。再往后就无感起来了。是谁的问题呢？<br>李健在唱十点半的地铁，我觉得歌词写的不真实。有点矫情了吧，或者是别的原因。<br>我开始想起来那个镇，最好看的地方是一片菜地，四周精致的小灯很有味道，冰块，树，未知名的菜，掉下来的柚子。真的很好看吗，我也问我了。一般般啊，但就是喜欢，因为看起来太熟悉了，像我熟悉的地方。然后人之间的关系才缓和起来啊，生疏豁然消解了。<br><strong>熟悉是一种美再次得到了印证</strong><br>2021开头是各种情绪都到了极致的时候，开心，兴奋，焦虑，压力都是这样，就连现在的放松也是。少有的能坐直身子听歌和打字了。难得难得，也许2021就是这样？所有都开始有了起色吗？</p>
<h2 id="NOTE"><a href="#NOTE" class="headerlink" title="NOTE"></a><font color="#495969">NOTE</font></h2><blockquote>
<ul>
<li>村上新书出版了，译者不是我认识的。</li>
<li>有些事情你以为离你很远，直到你经历了，才觉得近在眼前而且不是你能承受的。</li>
<li>想了很久的血糯米奶茶，像喝粥一样。</li>
<li>一月去商店晚了两天就买不到萌芽了。</li>
<li>半胱氨酸和胱氨酸可以相互转化，甲硫氨酸可以转变为半胱氨酸，所以甲硫氨酸是必需氨基酸。</li>
<li>有时候最后一节课也没必要去上，去上是为了情怀，不去才是正道。</li>
<li>一小块山楂就能使一杯水变酸。</li>
</ul>
</blockquote>
<p><strong><center><font color="#8523912">祝新的一年快乐、健康、进步。</font><center></center></center></strong></p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>2021年的大瓜</title>
    <url>/post/35baf9b8.html</url>
    <content><![CDATA[<h2 id="🍉"><a href="#🍉" class="headerlink" title="🍉"></a>🍉</h2><p>不追星，但喜欢一种仪式感。体现在对薛之谦新歌的期待，尽管不好听；体现在关注的某个up更新；体现在他刚好符合我的某个理想中的状态，这算不算追星？不算吧，顶多是从生活里找乐子，也是一种临时逃避生活的借口。<br>当开始认真关注一些人，目标不限于室友，囊括偶像在内的所有人，都会开始发现，对方比你了解的复杂很多。接着我会对就近的采取策略，而且还卓有成效。至于远处诗和远方，偶像不是诗和远方，充其量是个载体，没了载体理想依然能存在。我回想起来高中搬个凳子在狭小的厕所里写日记，有段时间话题无不关于陆之昂立夏几人。说白了就是我把很大一部分纯粹放在电视剧里，放在其中某个人身上了，但绝不是演员身上。这种纯粹每个人或多或少都有一些，而且纯粹的载体是随着时间不断更迭不断推陈的。我发现年龄增长带来了纯粹的减少，但好在记忆还在，它独有的积累效果不言而喻，多年以前的两平米里的冷和感动至今历历在目。这些很珍贵。<br>这两天的爆料很雷人，但我没难过。我又发现一些小的道理：当一个人的能力越来越大，就越来越容易干坏事。想起来限制与自由的论述，恰好符合。身为普通人，幻想着腰缠万贯或者惨遭封禁都是遥不可及的事情，而当有一天你发现你已经腰缠万贯，这时候就要十分警惕，你是否要悬崖勒马，甚至调个头往回走几步了。<br>这是一点想法。</p>
<h2 id="✍"><a href="#✍" class="headerlink" title="✍"></a>✍</h2><p>考试结束一直都很想找个机会总结一下这一学年，但是没安下心，一直在补漏下的娱乐。很久没有一个人呆在一个地方了，这样的感觉和高考前两天颇相似，但是却有着截然不同的使命。<br>很多人都总结的很到位，我显然就暗淡很多，不要抱多大希望。<br>这一学年还是没什么可说的，我太没兴趣了，列个表格。</p>
<table>
<thead>
<tr>
<th>好</th>
<th>坏</th>
</tr>
</thead>
<tbody><tr>
<td>小有收益</td>
<td>四级没过</td>
</tr>
<tr>
<td>打入外卖</td>
<td>没报四级</td>
</tr>
<tr>
<td>理论力学成绩还行</td>
<td>工时没做</td>
</tr>
<tr>
<td>看了很多电影</td>
<td>没有参加比赛</td>
</tr>
<tr>
<td>开了新坑</td>
<td>崴脚</td>
</tr>
<tr>
<td>尝试了兼职</td>
<td>但没要我</td>
</tr>
<tr>
<td>书尽量读了三本</td>
<td>热工不行</td>
</tr>
<tr>
<td>…</td>
<td>…</td>
</tr>
</tbody></table>
<p>这样单纯的分析利弊好像又没什么意思啊，人单纯就是想看些主观的思考，但说实话我越来越懒了，厌倦思考。所以，如果，真的需要我说点什么的话，我觉得这是幸福的一学期，没有什么大富大贵，但至少无病无灾，在我看来已经极其幸运的了，至少在我活过的十几年里，算是第一梯队的一学期。<br>未来逐渐到来，过去逐渐远去。<br>希望假期能把挖的坑填上，提前祝大家新年快乐。</p>
<p>3.23修补了一下后台配置。</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo deploy——避免重复输入账户密码</title>
    <url>/post/f7b96544.html</url>
    <content><![CDATA[<h1 id="ssh配置"><a href="#ssh配置" class="headerlink" title="ssh配置"></a>ssh配置</h1><h2><a id="1SSH_13"></a>1.生成SSH密钥</h2> 
<pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">cd ~/.ssh
<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li></p></pre> 
<p>使用ssh -Keygen 生成密钥</p> 
<pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">ssh-keygen -t rsa -C "your_email@example.com"
<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li></p></pre> 
<p>后面的输入均使用默认值，点击<strong>enter回车</strong>跳过</p> 
<p>密钥生成成功</p> 
<pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">Your identification has been saved in /home/you/.ssh/id_rsa.
Your public key has been saved in /home/you/.ssh/id_rsa.pub.
The key fingerprint is:
…………………此处是密钥内容…………………… your_email@example.com
<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li></p></pre> 
<p>点击复制</p> 
<h2><a id="2GitHub_38"></a>2.设置GitHub仓库的密钥</h2> 
<p>点击SSh and GPG keys，后新建一个SSh key</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/f8c5d3ae311c550857f785e2cd599386.png" alt="image-20210103194924377"></p> 
<p>输入密钥的title，可自定义输入，下面的key的内容即为刚才生成的密钥内容，将其复制粘贴进去（可能会遇到问题，请继续往后看），后点击add ssh key即可创建成功</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/3b39fd4fdde832109ea9f30f2d85d834.png" alt="image-20210103195020682"></p> 
<h2><a id="3_48"></a>3.测试配置是否成功</h2> 
<pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">ssh -T git@GitHub.com
<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li></p></pre> 
<p>如果看到successfully，即为配置完成并且成功</p> 
<p><img src="https://img-blog.csdnimg.cn/img_convert/cae4224ec411aaff9598cae46dd7d1dd.png" alt="image-20210103195309236"></p> 
<h2><a id="4Git_60"></a>4.修改博客Git远程提交的地址</h2> 
<pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"># 修改 https 协议为 ssh 协议(仓库的ssh地址)
git remote set-url origin git@github.com:xxx/xxx.git
<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></p></pre> 
<h2><a id="5hexo_configyml_67"></a>5.修改hexo根目录下的_config.yml文件中的远程仓库设置</h2> 
<pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"># Deployment
## Docs: https://hexo.io/docs/one-command-deployment
deploy:
  type: git
  repository: git@github.com:looles/looles.github.io.git
  branch: master
<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></p></pre> 
<h2><a id="6_78"></a>6.部署推送到远程仓库</h2> 
<p>ub.com:looles/looles.github.io.git<br> branch: master</p> 
<pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">
#### 6.部署推送到远程仓库

<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li></p></pre>
                <div><div></div></div>
                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css" rel="stylesheet">
                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-80ad9b4f5b.css" rel="stylesheet">
        

<p>转载于: <a href="https://blog.csdn.net/qq_43729277/article/details/112150367?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control&dist_request_id=ad442711-b6a8-4c52-8eb8-433089bfe963&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control">2021-01-03-设解决使用hexo deploy推送代码到github仓库时重复输入账户密码</a></p>
<hr>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><blockquote>
<p>1、如果之前设置过ssh，但是部署的时候需要输入密码，可能是没有配置好，用<code>ssh -T <a href="mailto:git@GitHub.com">git@GitHub.com</a></code>检查的时候需要输入密码，则代表没有配置好。建议重头配置一次，提示是否要overwrite的时候y就行了。<br>2、另外粘贴密钥的时候可能会遇到问题 <em>“Key is invalid. You must supply a key in OpenSSH public key format github”</em>，请继续往后看。</p>
</blockquote>
<hr>
<h1 id="add-ssh-key报错"><a href="#add-ssh-key报错" class="headerlink" title="add ssh key报错"></a>add ssh key报错</h1><div id="article_content" class="article_content clearfix">
        <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css">
                <div id="content_views" class="markdown_views prism-atom-one-light">
                    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
                        <path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"/>
                    </svg>
                    <p>直接复制粘贴 .ssh的文件<strong>会破坏格式</strong><br> 需要打开 git bash<br> <img src="https://img-blog.csdnimg.cn/20200609194954856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYwNDI1Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 输入命令<code>clip &lt; ~/.ssh/id_rsa.pub</code><br> 回车后就复制到剪切板了，到github添加ssh keys的地方直接就能粘贴上<br> 如图：<br> <img src="https://img-blog.csdnimg.cn/20200609195404177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYwNDI1Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
                </div><div><div></div></div>
                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css" rel="stylesheet">
                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-80ad9b4f5b.css" rel="stylesheet">
        </div>

<p>转载于：<a href="https://blog.csdn.net/weixin_45604257/article/details/106649576">Key is invalid. You must supply a key in OpenSSH public key format github</a></p>
<hr>
<p>以上就完成了对hexo deploy的所有配置。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>deploy</tag>
      </tags>
  </entry>
  <entry>
    <title>three.js学习笔记</title>
    <url>/post/afab6017.html</url>
    <content><![CDATA[<h1 id="程序结构"><a href="#程序结构" class="headerlink" title="程序结构"></a>程序结构</h1><p><img src="/images/three/three%E7%BB%93%E6%9E%84.jpg" alt></p>
<h1 id="live-server的坑"><a href="#live-server的坑" class="headerlink" title="live-server的坑"></a>live-server的坑</h1><p>html引入本地three.js文件后404，因为我live-server启动的地方没有包含three.js-master。应该在根目录启动。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>three.js</tag>
      </tags>
  </entry>
  <entry>
    <title>技术贴</title>
    <url>/post/cf7f39c3.html</url>
    <content><![CDATA[<h2 id="这里收录一些小技巧"><a href="#这里收录一些小技巧" class="headerlink" title="这里收录一些小技巧"></a><font color="#495969">这里收录一些小技巧</font></h2><blockquote>
<ul>
<li>网页长截图可以F12——&gt;Ctrl Shift P——&gt;Capture full size screenshot</li>
<li>new post 的格式在root\scafflods里面修改</li>
<li>利用bat快速生成newpost,可以参考<br><code>hexo new post newpost&amp;&amp;code E:\blog\source\_posts\newpost.md&amp;&amp;rd E:\blog\source\_posts\newpost</code></li>
<li>在微软输入法设置里面可以添加自定义短语，例如我输入sj，自动弹出当前时间，具体格式见下面代码块。</li>
<li>win10 突然发现某些地方的图标字体变得很大，和分辨率不匹配，可能是因为开机时连接了hdmi线所致，可以拔掉hdmi线然后重启。</li>
<li>obs录屏如果显卡和节能都调过了，但是某一天突然有黑屏，可以去图形设置里面把obs删了，重新添加一下，因为某些原因可能导致文件路径出错。</li>
<li>转载csdn的博客：复制<code>&lt;div id=&quot;article_content&quot;&gt;...&lt;/div&gt;</code>里的html代码，粘贴到md文件里就行。</li>
<li>bilibili等视频网站自定义倍速播放：如在浏览器控制台输入<code>document.getElementsByTagName(&quot;video&quot;)[0].playbackRate = 3</code></li>
<li>gulp压缩参考：<a href="https://blog.csdn.net/GerZhouGengCheng/article/details/106074545">使用Gulp压缩Hexo博客静态资源</a>,imagemin可能比较慢，不报错的话建议耐心点。</li>
<li>放个订阅地址：<a href="https://l.dabai.pw/link/z2SMogEehRtWyNWq?sub=3&extend=1">地址</a></li>
</ul>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 输入法时间格式 --&gt;</span><br><span class="line">关键字需要用 %% 来包裹</span><br><span class="line">yyyy    4 位年</span><br><span class="line">MM	    2 位月</span><br><span class="line">dd	    2 位日</span><br><span class="line">HH  	2 位小时（24 小时制）</span><br><span class="line">mm  	2 位分钟数</span><br><span class="line">ss  	2 位秒数</span><br><span class="line">&lt;!-- 示例 --&gt;</span><br><span class="line"># 结果是这样的格式: 2020-02-07 12:36:52</span><br><span class="line">%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>生日快乐</title>
    <url>/post/42dbb1c3.html</url>
    <content><![CDATA[<p>生日快乐呢<br>是不是很快呢<br>2020年是不是很神奇的一年呢<br>奇奇怪怪的<br>你看发生了这么多奇怪的事<br>但是出不去了<br>嘎嘎嘎<br>看了那么多酒店有机会一定要去<br>小宝贝生日快乐呀<br>蛋糕可以不吃<br>酒店可以不住<br>旅行可以不去<br>但是要快乐<br>给你一些可爱的图：<br>吹个蜡烛吧<br>生日快乐！</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>域名解析与vercel配置</title>
    <url>/post/2244254b.html</url>
    <content><![CDATA[<div class="note primary">
            <p>这里记录一些有关域名配置的问题</p>
          </div>
<h1 id="域名解析（以阿里云为例）"><a href="#域名解析（以阿里云为例）" class="headerlink" title="域名解析（以阿里云为例）"></a>域名解析（以阿里云为例）</h1><p><img src="/post/2244254b.htm/%E8%A7%A3%E6%9E%90%E9%85%8D%E7%BD%AE.png" alt></p>
<h1 id="vercel-domain-配置"><a href="#vercel-domain-配置" class="headerlink" title="vercel domain 配置"></a>vercel domain 配置</h1><p><img src="/post/2244254b.htm/vercel%E9%85%8D%E7%BD%AE.png" alt><br><font color="#265489"> 另外直接利用gitpages的记得在主题<strong>source</strong>文件夹下添加<strong>CNAME</strong>文件，否则github每次都要重新配置domain。</font></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>domain</tag>
      </tags>
  </entry>
  <entry>
    <title>怎样才能有好的状态</title>
    <url>/post/86d480d6.html</url>
    <content><![CDATA[<h1 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h1><p>昨天更新了第一个<a href="https://www.bilibili.com/video/BV18h411f72x"><b>vlog</b></a>，从剪辑上来说还算凑合，达到七八十分的样子，所以就算做vlog的开端。这个开端想了很久了，以前也录了很多素材，但都在某天不知所以然地灰飞烟灭了。所以一直没有下手。这次反倒是借个机会，因为我的生活的单调性是毋庸置疑的，这点从辅导员找我谈话的问答中就可以看出来。这次拍的很随意，也是临时起意，我觉得vlog是一种认证生活质量的一种方式，或者说，他不单能够认证，还能升华。这种欢乐应该是每一个做vlog的人都能体会到的。我希望这是个良好的开始。<br><img src="https://pic.downk.cc/item/5fe5fabd3ffa7d37b311afc0.jpg" alt></p>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>今天是圣诞节，一般我不会过这样的节日，个中缘由大概有些清高，但最正确的原因还是过于懒惰。节日往往需要很多人的参与才会好玩，我却经常没有资本和习惯去加入。索性写写最近的作为。<br>前段时间刷了阿弥的视频，每次看他的视频就很积极，会不断的想象往他靠拢，我是指那种生活态度上。所以我会很喜欢看他的vlog。可我始终缺少面对镜头的勇气。看了很多，算下来，最大的感受是：自己的积累很鸡肋。陈铭提到了好奇心，说到了心坎上。我本身就是好奇心很大的人，从小就是，但是还有很多复杂的性格以及其它原因导致我没有去发挥出来。失望之余，我在反思，其实我接触的方面不少，但真正能够进入其中的少之又少，我半途而废，我浅尝辄止，我慵懒涣散。这多令人失望。我常常幻想自己能像那些up一样快乐生活（这是我最向往的工作目前为止，其实我还会想假如我从小生活的环境能让我的眼界更加开阔，我将会走一条很好的路，但开阔毕竟没有界限，所以又没有定数，只能归属于瞎想）。我还会幻想，有人给我送礼物，我不知道什么是姜饼人；不知道谁是皮神；文导和我聊起来，我只会回应我没刷鬼灭——总之，我的积累太浅薄了，一戳击破的浅薄。我只会堆叠在一大堆“然后”里，然后退场退场退场。我还经常觉得我就是看到朋友被打的时候去劝架的树先生，只有被人推开的命运，也就是：“你算什么东西。”生活真的会像等不到车却等到龙猫、找不到人却找到龙猫那样简单又奇妙吗？会是失恋了有人帮你撑腰吗？会是亲人被杀，有人能帮你讨回公道吗？会有Hachi在你临终前接球不让你走吗？会有一个女孩看你一眼就喜欢上你吗？会有一个好老师拯救一个学校吗？<br>统统不会。<br>生活没有龙猫也没有那么简单，狗很早就死，学校依旧像个魔鬼，女孩始终讨厌你。<br>况且呢，这甚至只是很少的一部分，这些都属于高级情绪。<br>而我只会真实地开心几秒钟，随后任何不如意的事会立马把我打下地狱。<br>生活啊，多可悲！</p>
<p>真实的希望在哪呢？<br>大光圈下虚化的酒店背景，人山人海雨衣里呼喊，拍立得咔嚓一下的声音，米11一步步预热，海口人见到东北的雪，有些人还在重蹈我的覆辙不知疲倦的写几千字的高级苦水。<br>这些都是希望。</p>
<p>最后说一点，vlog带来的效果比blog好。<br>再说一点吧，节日快乐。</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>意象&amp;组合</title>
    <url>/post/416212f.html</url>
    <content><![CDATA[<center>

<h1 id="记录一些意象"><a href="#记录一些意象" class="headerlink" title="记录一些意象"></a>记录一些意象</h1></center>

<h2 id="窗含西岭和风力发电扇叶"><a href="#窗含西岭和风力发电扇叶" class="headerlink" title="窗含西岭和风力发电扇叶"></a>窗含西岭和风力发电扇叶</h2><p>看了别人写在城市五楼看雪山的景，才想起来五年前也在五楼天天下课看山上的扇叶。至今还会记起来面部汹涌的物理老师口中扇叶的巨大。那时候成绩远远不是我该担心的问题。</p>
<h2 id="老酸奶和没有盖上的面霜"><a href="#老酸奶和没有盖上的面霜" class="headerlink" title="老酸奶和没有盖上的面霜"></a>老酸奶和没有盖上的面霜</h2><p>早上用的吧，晚上八点才看到面霜没盖，其实也没什么，只是当时正在嚼老酸奶，于是萌生出老酸奶涂脸上的想法。但是奶这东西珍贵的很，还是吃了为好。我哪有那么多钱喂脸。不过或许有君乐宝面霜，回头试试未尝不可。</p>
<h2 id="盆栽和狗"><a href="#盆栽和狗" class="headerlink" title="盆栽和狗"></a>盆栽和狗</h2><p>Leon的盆栽是他除了Mathilda最珍贵的东西吧，是他之前平面化性格的唯一突起。直到难以逃命的那刻他抱着盆栽乱窜，倒确实是像怀抱小狗，乖得很，不动，也乱动。</p>
<h2 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h2><p>很久没有去刻意找好片子看了，之前看完一部片子还会疑惑，这到底是不是一部好w片子啊，为什么众说纷纭。害，其实一部好片子，是个正常人都觉得好看的。真的能代入真的能让你心跳加速的，不由自主的，还会存疑吗？也考虑过写个影评的，我最近不怎么擅长写东西，现在只会：wnm，真好看！</p>
]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>literature</tag>
      </tags>
  </entry>
  <entry>
    <title>更新帖</title>
    <url>/post/2ee0f961.html</url>
    <content><![CDATA[<h2 id="这里记录网站更新内容"><a href="#这里记录网站更新内容" class="headerlink" title="这里记录网站更新内容"></a><font color="#495969">这里记录网站更新内容</font></h2><blockquote>
<p>想要及时收到网站更新的邮件提醒可在下方留言处留下你的邮箱。</p>
</blockquote>
<div class="tabs" id><ul class="nav-tabs"><li class="tab active"><a href="#-1">Butterfly主题更新内容</a></li><li class="tab"><a href="#-2">Next主题更新内容</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><table><tr><td bgcolor="#f1f5ec">

<ul>
<li><em>2021-01-20</em><br>更新文章界面两篇置顶；<br>开通<a href="https://blog.asea.fun/talk/">说说</a>界面；<br><a href="https://blog.asea.fun/talk/">说说</a>界面优化，增加说说评论功能（访客都可以评论）；<br>新增说说发布权限用户；<br>优化不同用户的头像问题；<br>优化navigationbar；</li>
<li><em>2021-02-09</em><br>更新post<a href="https://blog.asea.fun/post/16fab331.html">《网站收藏》</a>；<br>优化<a href="https://blog.asea.fun/post/16fab331.html">《网站收藏》</a>的界面；<br>优化文章排序和置顶问题（<a href="https://gsy00517.github.io/hexo20200207151318/">参考文章</a>）；<br>修改<a href="https://blog.asea.fun/">主页</a>post图文排版；</li>
<li><em>2021-02-16</em><br>发布post<a href="https://blog.asea.fun/post/6d79d7dd.html">《老地方》</a>；</li>
<li><em>2021-02-22</em><br>发布post<a href="https://blog.asea.fun/post/c337a479.html">《看垃圾》</a>；<br>更新post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li>
<li><em>2021-02-23</em><br>更新post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a>；<br>发布post<a href="https://blog.asea.fun/post/f7b96544.html">《hexo deploy——重复输入账户密码》</a>；<br>添加<a href="https://blog.asea.fun/fun/chi/">《吃什么》</a><a href="https://blog.asea.fun/fun/du/">《毒鸡汤》</a><a href="https://blog.asea.fun/fun/hua/">《画板》</a><a href="https://blog.asea.fun/fun/mi/">《随机密码》</a>四个界面(累趴了)；</li>
<li><em>2021-02-24</em><br><a href="https://next.asea.fun">新主题（Next）博客</a>重磅上线</li>
<li><em>2021-02-25</em><br>置顶post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a></li>
<li><em>2021-02-28</em><br>发布post<a href="https://blog.asea.fun/post/b6589fc3.html">《返校日记》</a><br>更新post<a href="https://blog.asea.fun/post/6d79d7dd.html">《老地方》</a>,优化排版；</li>
<li><em>2021-03-02</em><br>增加<a href="https://blog.asea.fun/fun/apesk/">《APESK-荣格理论测试》</a>界面。</li>
<li><em>2021-03-04</em><br>更新post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li>
<li><em>2021-03-07</em><br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a><br>启动gulp服务，优化加载速度</li>
<li><em>2021-03-13</em><br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a><br>修改本页样式</li>
<li><em>2021-03-16</em><br>调整主页布局，增加<strong>分类</strong>模块</li>
<li><em>2021-03-20</em><br>使用python增加博客更新邮件提醒功能<br>使用python增加自动修改本贴的更新时间功能<br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a></li>
<li><em>2021-03-27</em><br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a><br>发布post<a href="https://blog.asea.fun/post/71485f5b.html">《python项目练习》</a></li>
<li><em>2021-03-30</em><br>调整代码块为默认不展开<br>更新post<a href="https://blog.asea.fun/post/71485f5b.html">《python项目练习》</a></li></ul></td></tr></table>


</div><div class="tab-pane" id="-2"><table><tr><td bgcolor="#f6f5ec">

<ul>
<li><em>2021-01-20</em><br>更新文章界面两篇置顶；<br>开通<a href="https://next.asea.fun/talk/">说说</a>界面；<br><a href="https://next.asea.fun/talk/">说说</a>界面优化，增加说说评论功能（访客都可以评论）；<br>新增说说发布权限用户；<br>优化不同用户的头像问题；<br>优化navigationbar；</li>
<li><em>2021-02-09</em><br>更新post<a href="https://next.asea.fun/post/16fab331.html">《网站收藏》</a>；<br>优化<a href="https://next.asea.fun/post/16fab331.html">《网站收藏》</a>的界面；<br>优化文章排序和置顶问题（<a href="https://gsy00517.github.io/hexo20200207151318/">参考文章</a>）；<br>修改<a href="https://next.asea.fun/">主页</a>post图文排版；</li>
<li><em>2021-02-16</em><br>发布post<a href="https://next.asea.fun/post/6d79d7dd.html">《老地方》</a>；</li>
<li><em>2021-02-22</em><br>发布post<a href="https://next.asea.fun/post/c337a479.html">《看垃圾》</a>；<br>更新post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li>
<li><em>2021-02-23</em><br>更新post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a>；<br>发布post<a href="https://next.asea.fun/post/f7b96544.html">《hexo deploy——重复输入账户密码》</a>；<br>添加<a href="https://next.asea.fun/fun/chi/">《吃什么》</a><a href="https://next.asea.fun/fun/du/">《毒鸡汤》</a><a href="https://next.asea.fun/fun/hua/">《画板》</a><a href="https://next.asea.fun/fun/mi/">《随机密码》</a>四个界面(累趴了)；</li>
<li><em>2021-02-24</em><br><a href="https://next.asea.fun">新主题（Next）博客</a>重磅上线</li>
<li><em>2021-02-25</em><br>置顶post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a><br>网页底部增加运行时间、访客数、总字数<br>增加看板“猫”<br>关联其它链接<br>增加留言板块</li>
<li><em>2021-02-28</em><br>发布post<a href="https://next.asea.fun/post/b6589fc3.html">《返校日记》</a><br>更新post<a href="https://next.asea.fun/post/6d79d7dd.html">《老地方》</a>,优化排版；</li>
<li><em>2021-03-02</em><br>增加<a href="https://next.asea.fun/fun/apesk/">《APESK-荣格理论测试》</a>界面。</li>
<li><em>2021-03-04</em><br>更新post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li>
<li><em>2021-03-07</em><br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a><br>启动gulp服务，优化加载速度</li></ul></td></tr></table>
<li><em>2021-03-13</em><br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a><br>修改本页样式</li>
<li><em>2021-03-20</em><br>使用python增加博客更新邮件提醒功能<br>使用python增加博客更新邮件提醒功能<br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a></li>
<li><em>2021-03-27</em><br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a><br>发布post<a href="https://next.asea.fun/post/71485f5b.html">《python项目练习》</a></li>
<li><em>2021-03-30</em><br>调整代码块为默认不展开<br>更新post<a href="https://next.asea.fun/post/71485f5b.html">《python项目练习》</a>
</li>
</div></div></div>

]]></content>
      <categories>
        <category>本站</category>
      </categories>
      <tags>
        <tag>update</tag>
      </tags>
  </entry>
  <entry>
    <title>疼</title>
    <url>/post/5a8a6c8d.html</url>
    <content><![CDATA[<p>疼一怎么疼了这么久了还是不好，一直以为咬伤的很快就会好的。这么多天居然不见丝毫好转，现在喝水都成问题了，又饿又疼。晚上耐着性子做了米饭，炒了很难吃的菜，但是一粒也吃不成，一碰到就疼。二韩寒大概看的差不多了，剩下还有一些电影和书需要看，反正记录了好多事情待完成，不知道啥时候可以。看的时候会有很多感受，不记录下来就会消失。总体来说不记录相当于白看。三动物真可爱，一看动物就停不下来。以后一定要好好养动物。除了一只，还要养猫、狗、蛇。。算了。够了。想看猫狗大战，想看狗狗大战，想看猫猫大战。四陌生人很难交流。能说得上话的除了年纪遭遇相仿的，别的基本都讲不通逻辑。这个时代变化很快。也不知道什么时候该被淘汰，但现在还不必担心，因为我们是把淘汰者。一点小愿望希望日子赶紧有所好转；积累的事情赶紧做完；少看报纸多读书。</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇</title>
    <url>/post/5a8a6c8d.html</url>
    <content><![CDATA[<p>总算把主题和基本写作的操作摸索敲定了<br>暂且先这样<br>美化工作还有很多要做<br>先记录一下</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>看垃圾</title>
    <url>/post/c337a479.html</url>
    <content><![CDATA[<h1 id="看垃圾"><a href="#看垃圾" class="headerlink" title="看垃圾"></a>看垃圾</h1><p>徐店长店还开着的时候就给老药罐找了这个工作。<br>老药罐因为身体原因常年服药，趁不便走动，遂听徐店长安排在南丰镇东接了家商店。只用做些简单的售卖工作，来的人自己挑，完事把钱放进箱子里就行，要是遇到有人不付账按一下手里的按钮就行了，里面集成有现成的报警电话，所以闲适得很。况且这地方空气刺鼻，人烟稀少，仅有运垃圾的司机到这讨几瓶水喝，有时也顺带进个货——这店好似个服务区。老药罐这名字喊的人多了就被传开了，三人成虎，结果最后被人叫成了老妖怪，也巧，和这地方挺搭。商店再往东二里地是个垃圾站，镇里所有的垃圾都要拉到这里来处理。南丰镇近年来大兴养殖，垃圾只多不少。</p>
<p>那天空气燥热，正午的太阳高悬头顶，烈日下一辆辆垃圾车跑来跑去，和隔壁镇的一天两趟完全不同，南丰这地方简直是个工地。路边的商店里，不知谁用帘子隔了个小地方，里面放了个躺椅，一个身材羸弱皮包骨的老汉躺在上面有气无力地摇动扇子，这便是老妖怪了。郊外的野风不见踪影，今天热得出奇。老妖怪虽是身子不便运动，但是脑子却是清醒的很，即便到了午睡的时候，他也能时刻留意周边的变化，仿佛有双无形的眼睛注视着门外的一切，包括来往的车辆。<br>老妖怪眼皮动了动，他知道，有人来了，紧接着，另一只眼皮也动了，“还不只一个”，他想。<br>很快，只见一个身高不足一米的小孩哒哒哒地跑进来，却不见旁人的踪影——一人而已。脚步快得离谱，加之酷热使得声浪扭曲，老汉第一次听错了。<br>那小孩像是走进自己家一样，径直跑向冰柜，掀开上面的褥子，打开柜子，扒拉到柜子边上，抽出两根冰棍来，朝老汉方向晃了晃，老妖怪眯着的眼睛缓缓打开条缝隙又合上，不注意完全看不出来他动了眼皮子，是个死人——扇子也没摇了。小孩把五块钱扔进箱子里就跑了，动作熟练，谁能看出来他是个小孩呢。<br>远处垃圾车轰隆启动了，又开始奔驰在这条走了无数次的路上，车里副驾上的小孩正掏出冰棍塞到驾驶员的嘴里。</p>
<p>“我给你找了个地儿，你就去咱垃圾站当个门卫吧，有车来了开个门就行。”说话的人是乡长，躺在病床上的是刚做完手术的徐店长。老徐之前开了家修车店，十多年，人们叫习惯了。乡长看看旁边的孩子，“老徐，我只能帮你到这了。早知道你就应该好好当个店长，跑来做什么垃圾运输员。现在少了条腿委实找不来好差事，当个门卫挺好的。”乡长是个好人，不客套，帮徐店长另谋生路也不是他的责任，只看在当年一起打拼的情分上帮一把。“我知道。”老徐有点不好意思了，尽管腿上的痛还在，但就是不好意思了，他也没想到这个时候他会羞，乡长的救济他很难再说三道四了。<br>“吃个橘子？”老徐拆开乡长拿的果篮。<br>乡长头也没回走了。<br>此后小孩每次到外面玩腻了就跑回垃圾站门口的小房间里去，他亲爱的父亲在里面靠着墙，一条腿悬在床边看着进进出出的车辆，不停的按下手中的遥控。生活从方向盘变成了遥控器而已。</p>
<p>说起小孩他妈——因为孩子爸家暴、婚后出轨还拒不认账，几年前就已经离婚了，她跟了乡长，一直经营着一家宾馆，巧的是宾馆的地址正在垃圾站的对面。客户目标很明显了，正是来来往往的司机们，他也曾经住在这里过。小孩妈妈叫雪琴，宾馆是她在老徐之前的丈夫留给他的，没啥情分，这宾馆最后一定亏干净了，根本不盈利啊，来开垃圾车的都是些什么走投无路的人。雪琴自己的房间在二楼正中，从窗户可以看见垃圾站的正大门，老徐所在的小房子也尽收眼底。她每天在自己的房间里和乡长如胶似漆后就坐在床边歪着脖子看下面的垃圾站。她看不见老徐，从她听说老徐搬进去就再也没见过他，老徐从来没有站起来过，所以她天天等着，却连个剪影都等不到。她多想看见那个男人一瘸一拐的走出来，走到她宾馆的下面，然后她一口唾沫啐下去，“这就是你的报应！”</p>
<p>老妖怪眼皮动了一下，另一只眼皮也动了一下，他坐起来，看着小孩跑进来拿出来两根冰棍，朝他晃了晃，没有放钱，竟是直接跑出去了。他按下手里的按钮，看着小孩慢慢跑远，最后停在马路边上。那小孩拿着冰棒，眼睛直愣愣看着前面，一根含在嘴里，一根朝着来来往往的垃圾车扔去。</p>
]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>literature</tag>
      </tags>
  </entry>
  <entry>
    <title>旧时代</title>
    <url>/post/754b5343.html</url>
    <content><![CDATA[<h2 id="罗永浩"><a href="#罗永浩" class="headerlink" title="罗永浩"></a>罗永浩</h2><p>很长时间以来都只是只闻其名，细细研究一下才发现他的的确确是很多人的精神领袖，或者说精神鸦片也未尝不可。辍学打工，办培训机构，打假，做手机。面对了很多争议、嘲讽。你很难看见一个人十几年来都是这一个模样，不单单是外貌，那股精神气似乎从来都没有消减。但是这显然不太现实，面对理想主义的不如意，你好好观察一下，也能发现某些被磨平的棱角。但是不管怎样，他的高度自律、行动力、成熟的价值观体系、理性的做事规则都无比吸引人。</p>
<h2 id="韩寒"><a href="#韩寒" class="headerlink" title="韩寒"></a>韩寒</h2><p>不去深入了解，大多数略有耳闻的人都对韩寒有一些误解：叛逆、不听话、我行我素、大骂教育制度、暴躁。但其实完全不是，他尊重人和事、面对他人谦逊无比、虚心接受其它有价值的意见。他很善良，有爱，不管是从一言一行还是从他的小说里的字里行间，无论你能看得出多少痞气，你都不能想当然。那是媒体过分渲染的韩寒，他们把一个孩子想得太简单了。大人们习惯这样，把比自己年龄小的人想得简单。</p>
<h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>以前为了安慰自己一直都有一套理论：<br>人不可能长时间保持一种状态，无论你多么有自制力，还是免不了被改变，人就是一个阶段一个阶段的，哪有不忘初心。<br>现在又发现其实人可以长时间保持一种状态，不过所依赖的条件是：你必须不停的汲取知识，不是科学知识，而是经历。这种经历可以从过来的人身上看到，也可以从虚构的人和事上看到，简单说就是多读书。</p>
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>返校日记</title>
    <url>/post/b6589fc3.html</url>
    <content><![CDATA[<h1 id="大二下的返校有什么可说道的"><a href="#大二下的返校有什么可说道的" class="headerlink" title="大二下的返校有什么可说道的"></a>大二下的返校有什么可说道的</h1><h2 id="流水账一"><a href="#流水账一" class="headerlink" title="流水账一"></a>流水账一</h2><p>火车站安检的位置改了，改的挺合理，我觉得它本来就应该是这样子。在取票厅见到了很久不见的老同学，一见面其实没认出来，好家伙，那肯定认不出来，不过说了些话后感觉也还熟悉，可能是某些深处的记忆被拔出来了，整个相处还算不尴尬。我们五个人上四号车，结果却往相反的地方走，好在问了问工作人员，赶紧掉头走了很久很久才到。上车后我们坐在下铺攀谈了一会，主人过来了，于是我们便移步到道旁的位置上。没什么事干，我们决定打会牌，然而网络问题，磕磕绊绊进去之后，也就打了一把，还算有意思的结束。我坐在窗户旁边看周遭景致后撤，脑中并无任何想法。</p>
<h2 id="流水账二"><a href="#流水账二" class="headerlink" title="流水账二"></a>流水账二</h2><p>快到熄灯的时间，我收拾了东西爬上上铺，整个感觉奇妙的很，狭小的空间内时睡时醒，只记得做了很多噩梦，醒来的时候六点多，车上的广播开始有了动静。我翻动了一会下了床洗了脸，牙刷什么的在箱子里，也懒得去拿了。坐在窗户旁边看风景，但也没什么看到，雾气茫茫，不太能看清多远。同行的伙伴递过来面包、🍓，也没什么食欲，捏了个草莓吃了。</p>
<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px" src="https://img.imgdb.cn/item/603b65385f4313ce25b1d1e4.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">剩下的叶子放在了车窗旁拍了照，随即丢到了垃圾桶了，毕竟不太好看——放窗户上。</div>
</center>

<h2 id="流水账三"><a href="#流水账三" class="headerlink" title="流水账三"></a>流水账三</h2><p>上午没什么事，看了会手机没什么玩的，就站起来站着，车到站的时候咯噔了一下，差点跌倒，还好不至于出丑。后来实在无趣，上了床，开始睡觉了。大约十一点半，乘务员提醒快到站了。拿出浏览器查了查，12：05到，还早，打算再睡会，可也没啥兴致，便下了床。再次坐在窗边，旋即看到“上海站”几个打字向我跑来，原来早点了。那便收拾收拾下车吧。</p>
<h2 id="流水账四"><a href="#流水账四" class="headerlink" title="流水账四"></a>流水账四</h2><p>一路按照指示牌的方向，给看了健康码，一路来到三四号线的地方，跟我姐分道扬镳，开始了一个多小时的地铁之旅。一路无话，倒是宜山路转9号线，路途之远难以想象，太累了，几十级的台阶，去年帮某人抬了一路，今年换了个人，以后一定提醒带少行李。说起来三号线上看到个有意思的父亲和女儿，那父亲大概三十岁不到，短发、五官都分外精致，手里抱个“长宁美院”的袋子，女儿也六七岁的样子，一会坐下一会站起来。我顿时起了好感。说着她拉起来她爸爸指着墙上的广告说，这两个人怎么长的一样。那美院男子细心的讲解着什么镜像、什么Ps、什么广告，听起来极为有趣。<br>最后面没什么说的了，倒是等公交等不来，打的又堵车，磕磕绊绊算是回了学校，便也开始新的日子了。</p>
<h2 id="一些图片"><a href="#一些图片" class="headerlink" title="一些图片"></a>一些图片</h2><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px" src="https://img.imgdb.cn/item/603b67ee5f4313ce25b3b2e0.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">上海站慢慢靠近</div>
</center>

<hr>
<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px" src="https://img.imgdb.cn/item/603b67ee5f4313ce25b3b2e3.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">公交车站牌人山人海</div>
</center>

<hr>
<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px" src="https://img.imgdb.cn/item/603b67ee5f4313ce25b3b2e7.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">到宿舍后一碗泡面草草了事</div>
</center>

<hr>
<center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px" src="https://img.imgdb.cn/item/603b67ee5f4313ce25b3b2ea.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">上铺视角</div>
</center>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>老地方</title>
    <url>/post/6d79d7dd.html</url>
    <content><![CDATA[<h1 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h1><blockquote>
<p>前几天年前回了趟老家，要说也不是一直没回去过，但前几次都只是走马观花，单觉得那地方也不属于我了，没啥观察的必要了，加之来去匆忙，相较于这次回家大不一样了。认真打扫了院子，清理了巨量的落叶，扫干净后又像小时候的院子了。打扫的间隙也不断地发现了各种以前的老物件，可谓历史悠久，少则几年，多则十几年。</p>
</blockquote>
<hr>
<h1 id="爬行"><a href="#爬行" class="headerlink" title="爬行"></a>爬行</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b3f6d3ffa7d37b3a19fe7.jpg">
    <br>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b3f6d3ffa7d37b3a19fef.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">家里最大的一颗葡萄树，支架塌了之后枝蔓沿着院子里晾衣服的绳子爬了十几米远</div>
</center>

<h1 id="堵"><a href="#堵" class="headerlink" title="堵"></a>堵</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b3f803ffa7d37b3a1a898.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">院子里的水龙头，因为家里没人住了而且这个水龙头虽然穿得很厚但是每到冬天还是会冻坏所以直接停用了。</div>
</center>

<h1 id="倒地祝福"><a href="#倒地祝福" class="headerlink" title="倒地祝福"></a>倒地祝福</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b3f803ffa7d37b3a1a8a8.jpg">
    <br>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b3f6d3ffa7d37b3a19fe3.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">贴对联之前把去年的对联撕了下来，掉在地上落叶里的“万事如意”“合家欢乐”。</div>
</center>

<h1 id="冷暖"><a href="#冷暖" class="headerlink" title="冷暖"></a>冷暖</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b45aa3ffa7d37b3a4a3e7.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">用了很多年的煤火炉想起来之前在厨房烤火烧橘子的日子，很遥远，</div>
</center>

<h1 id="魔幻手机"><a href="#魔幻手机" class="headerlink" title="魔幻手机"></a>魔幻手机</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b45f33ffa7d37b3a4c8e8.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">记忆力我妈最早的一部手机可以用笔或者任何东西触控，很小的时候，在上面玩猫熊，看斗罗大陆，还有可以运行Java，可以语音指令，可以背单词听听力看电影。我也用它拍过很好玩的视频，总之它很值得尊敬，尽管我不知道它是啥牌子。</div>
</center>

<h1 id="尸体"><a href="#尸体" class="headerlink" title="尸体"></a>尸体</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b46da3ffa7d37b3a532af.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">床因为不睡了所以拿东西罩了起来，回来时发现上面躺了一只很大的蜂，不知道死前经历了什么，大概是出不去了吧。</div>
</center>

<h1 id="墨"><a href="#墨" class="headerlink" title="墨"></a>墨</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b47b13ffa7d37b3a59491.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">前年的春节在自己房间里拿笔写了些字，也尝试写了对联，但由于写的太烂又找别人写了。今天写的还算能看过去，也就将就着贴了。</div>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b48a83ffa7d37b3a612d3.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">这是今年写的丢人对联</div>
</center>

<h1 id="🐕🏠"><a href="#🐕🏠" class="headerlink" title="🐕🏠"></a>🐕🏠</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b48d93ffa7d37b3a62c91.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">悲痛是具象的，以后专门写它。</div>
</center>

<h1 id="艺术"><a href="#艺术" class="headerlink" title="艺术"></a>艺术</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b49353ffa7d37b3a65c59.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">高中和阮同桌天天没事画来画去，有几张觉得还挺有趣的就保留了下来，现在看来仍历历在目。</div>
</center>

<h1 id="星星"><a href="#星星" class="headerlink" title="星星"></a>星星</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b499b3ffa7d37b3a6907e.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">拍星星的时候忘记还在长曝光，乱晃的结果，还不错</div>
</center>   

<h1 id="蝴蝶"><a href="#蝴蝶" class="headerlink" title="蝴蝶"></a>蝴蝶</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b4b263ffa7d37b3a74cee.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">（网站主题就是Butterfly的）在老家落叶堆里见到的，没想到冬天能在老家见到蝴蝶。另外觉得，光学变焦太重要了。</div>
</center>   

<h1 id="繁星"><a href="#繁星" class="headerlink" title="繁星"></a>繁星</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b4bab3ffa7d37b3a78c2f.png">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">老家的星星确实挺好看的，拍出来效果更绝，挑了一张好看的放这。放大调亮屏幕能看见更多星星。</div>
</center>   

<h1 id="榆木疙瘩"><a href="#榆木疙瘩" class="headerlink" title="榆木疙瘩"></a>榆木疙瘩</h1><center>
    <img style="border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b4bfa3ffa7d37b3a7afae.jpg">
    <br>
    <div style="color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;">我还记得这颗树，是我家后院的一颗很大很大的榆树。记不清几年级学了榆钱才知道这东西叫榆树，榆钱还能吃，但我记得没啥甜味。后来学到读诗读到“道傍榆荚仍似钱，摘来沽酒君肯否。”，颇有意思。树上那个缝是当时拿锯子锯的时候锯不断，就换了好几个地方，不得不说这东西真硬。</div>
</center>   
]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>更新帖</title>
    <url>/post/2ee0f961.html</url>
    <content><![CDATA[<h2 id="这里记录网站更新内容"><a href="#这里记录网站更新内容" class="headerlink" title="这里记录网站更新内容"></a><font color="#495969">这里记录网站更新内容</font></h2><blockquote>
<p>想要及时收到网站更新的邮件提醒可在下方留言处留下你的邮箱。</p>
</blockquote>
<div class="tabs" id><ul class="nav-tabs"><li class="tab active"><a href="#-1">Butterfly主题更新内容</a></li><li class="tab"><a href="#-2">Next主题更新内容</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><table><tr><td bgcolor="#f1f5ec">

<ul>
<li><em>2021-01-20</em><br>更新文章界面两篇置顶；<br>开通<a href="https://blog.asea.fun/talk/">说说</a>界面；<br><a href="https://blog.asea.fun/talk/">说说</a>界面优化，增加说说评论功能（访客都可以评论）；<br>新增说说发布权限用户；<br>优化不同用户的头像问题；<br>优化navigationbar；</li>
<li><em>2021-02-09</em><br>更新post<a href="https://blog.asea.fun/post/16fab331.html">《网站收藏》</a>；<br>优化<a href="https://blog.asea.fun/post/16fab331.html">《网站收藏》</a>的界面；<br>优化文章排序和置顶问题（<a href="https://gsy00517.github.io/hexo20200207151318/">参考文章</a>）；<br>修改<a href="https://blog.asea.fun/">主页</a>post图文排版；</li>
<li><em>2021-02-16</em><br>发布post<a href="https://blog.asea.fun/post/6d79d7dd.html">《老地方》</a>；</li>
<li><em>2021-02-22</em><br>发布post<a href="https://blog.asea.fun/post/c337a479.html">《看垃圾》</a>；<br>更新post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li>
<li><em>2021-02-23</em><br>更新post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a>；<br>发布post<a href="https://blog.asea.fun/post/f7b96544.html">《hexo deploy——重复输入账户密码》</a>；<br>添加<a href="https://blog.asea.fun/fun/chi/">《吃什么》</a><a href="https://blog.asea.fun/fun/du/">《毒鸡汤》</a><a href="https://blog.asea.fun/fun/hua/">《画板》</a><a href="https://blog.asea.fun/fun/mi/">《随机密码》</a>四个界面(累趴了)；</li>
<li><em>2021-02-24</em><br><a href="https://next.asea.fun">新主题（Next）博客</a>重磅上线</li>
<li><em>2021-02-25</em><br>置顶post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a></li>
<li><em>2021-02-28</em><br>发布post<a href="https://blog.asea.fun/post/b6589fc3.html">《返校日记》</a><br>更新post<a href="https://blog.asea.fun/post/6d79d7dd.html">《老地方》</a>,优化排版；</li>
<li><em>2021-03-02</em><br>增加<a href="https://blog.asea.fun/fun/apesk/">《APESK-荣格理论测试》</a>界面。</li>
<li><em>2021-03-04</em><br>更新post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li>
<li><em>2021-03-07</em><br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a><br>启动gulp服务，优化加载速度</li>
<li><em>2021-03-13</em><br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a><br>修改本页样式</li>
<li><em>2021-03-16</em><br>调整主页布局，增加<strong>分类</strong>模块</li>
<li><em>2021-03-20</em><br>使用python增加博客更新邮件提醒功能<br>使用python增加自动修改本贴的更新时间功能<br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a></li></ul></td></tr></table>


</div><div class="tab-pane" id="-2"><table><tr><td bgcolor="#f6f5ec">

<ul>
<li><em>2021-01-20</em><br>更新文章界面两篇置顶；<br>开通<a href="https://next.asea.fun/talk/">说说</a>界面；<br><a href="https://next.asea.fun/talk/">说说</a>界面优化，增加说说评论功能（访客都可以评论）；<br>新增说说发布权限用户；<br>优化不同用户的头像问题；<br>优化navigationbar；</li>
<li><em>2021-02-09</em><br>更新post<a href="https://next.asea.fun/post/16fab331.html">《网站收藏》</a>；<br>优化<a href="https://next.asea.fun/post/16fab331.html">《网站收藏》</a>的界面；<br>优化文章排序和置顶问题（<a href="https://gsy00517.github.io/hexo20200207151318/">参考文章</a>）；<br>修改<a href="https://next.asea.fun/">主页</a>post图文排版；</li>
<li><em>2021-02-16</em><br>发布post<a href="https://next.asea.fun/post/6d79d7dd.html">《老地方》</a>；</li>
<li><em>2021-02-22</em><br>发布post<a href="https://next.asea.fun/post/c337a479.html">《看垃圾》</a>；<br>更新post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li>
<li><em>2021-02-23</em><br>更新post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a>；<br>发布post<a href="https://next.asea.fun/post/f7b96544.html">《hexo deploy——重复输入账户密码》</a>；<br>添加<a href="https://next.asea.fun/fun/chi/">《吃什么》</a><a href="https://next.asea.fun/fun/du/">《毒鸡汤》</a><a href="https://next.asea.fun/fun/hua/">《画板》</a><a href="https://next.asea.fun/fun/mi/">《随机密码》</a>四个界面(累趴了)；</li>
<li><em>2021-02-24</em><br><a href="https://next.asea.fun">新主题（Next）博客</a>重磅上线</li>
<li><em>2021-02-25</em><br>置顶post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a><br>网页底部增加运行时间、访客数、总字数<br>增加看板“猫”<br>关联其它链接<br>增加留言板块</li>
<li><em>2021-02-28</em><br>发布post<a href="https://next.asea.fun/post/b6589fc3.html">《返校日记》</a><br>更新post<a href="https://next.asea.fun/post/6d79d7dd.html">《老地方》</a>,优化排版；</li>
<li><em>2021-03-02</em><br>增加<a href="https://next.asea.fun/fun/apesk/">《APESK-荣格理论测试》</a>界面。</li>
<li><em>2021-03-04</em><br>更新post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li>
<li><em>2021-03-07</em><br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a><br>启动gulp服务，优化加载速度</li></ul></td></tr></table>
<li><em>2021-03-13</em><br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a><br>修改本页样式</li>
<li><em>2021-03-20</em><br>使用python增加博客更新邮件提醒功能<br>使用python增加博客更新邮件提醒功能<br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a>
</li>
</div></div></div>

]]></content>
      <categories>
        <category>本站</category>
      </categories>
      <tags>
        <tag>update</tag>
      </tags>
  </entry>
  <entry>
    <title>部署技巧</title>
    <url>/post/c4266d98.html</url>
    <content><![CDATA[<h1 id="hexo-clean-amp-amp-hexo-generate-amp-amp-hexo-deploy-三命令统一"><a href="#hexo-clean-amp-amp-hexo-generate-amp-amp-hexo-deploy-三命令统一" class="headerlink" title="hexo clean&amp;&amp;hexo generate&amp;&amp;hexo deploy 三命令统一"></a>hexo clean&amp;&amp;hexo generate&amp;&amp;hexo deploy 三命令统一</h1><p>可在根目录下建立bat文件，写入“hexo clean&amp;&amp;hexo generate&amp;&amp;hexo deploy”或简洁点“hexo cl&amp;hexo g&amp;hexo d（注意：如果装了豆瓣插件则必须用hexo deploy）”。<br>以后部署只用在命令行敲入你bat的文件名即可执行。</p>
<h1 id="关于deploy每次都要输入账号密码的问题"><a href="#关于deploy每次都要输入账号密码的问题" class="headerlink" title="关于deploy每次都要输入账号密码的问题"></a>关于deploy每次都要输入账号密码的问题</h1><p>博主已经尝试了SSH，但还是需要输入密码（账号可以不用输入）。</p>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>修改_config.yml，将部署方式从https方式修改为ssh方式。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https:&#x2F;&#x2F;github.com&#x2F;XXXXXX&#x2F;XXXXXX.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>修改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:XXXXXX&#x2F;XXXXXX.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<h2 id="教程已更新，可去更新贴查看其它操作。"><a href="#教程已更新，可去更新贴查看其它操作。" class="headerlink" title="教程已更新，可去更新贴查看其它操作。"></a>教程已更新，可去更新贴查看其它操作。</h2>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>deploy</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>重生</title>
    <url>/post/454cee63.html</url>
    <content><![CDATA[<center>

<p>这次打算认真处理一下这个网站了<br>从查找问题到一步步排除修正<br>相当于又从头布局了一下网站<br>butterfly更新了所以还遇到很多问题<br>主要是太久没管过了<br>总而言之<br>这次打算简洁点</p>
</center>]]></content>
      <categories>
        <category>日常</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>python笔记</title>
    <url>/post/c00b24b1.html</url>
    <content><![CDATA[<h1 id="开发环境IDLE"><a href="#开发环境IDLE" class="headerlink" title="开发环境IDLE"></a>开发环境IDLE</h1><p><code>exit() quit()</code><br>shift + 右键打开命令行<br><code>ctrl + o</code><br><code>ctrl + n</code> #交互界面下<br><code>ctrl + q</code><br><code>alt + 3/4</code> 注释与解除 注释：##<br><code>f5</code> run<br>pypi.org 库网址</p>
<hr>
<h1 id="pip-命令"><a href="#pip-命令" class="headerlink" title="pip 命令"></a>pip 命令</h1><p><code>pip list</code><br><code>pip install package1 package2</code><br><code>pip install --upgrade package</code><br><code>pip uninstall package</code></p>
<hr>
<h1 id="模块导入"><a href="#模块导入" class="headerlink" title="模块导入"></a>模块导入</h1><ul>
<li><strong>三种导入方式:</strong><ul>
<li>导入整个模块 <code>import模块名as模块的别名（自定义）</code></li>
<li>明确导入模块中的特定对象 <code>from模块名import对象名as别名</code></li>
<li>导入特定模块中的所有对象 <code>from 模块名 import *</code> (不建议)</li>
</ul>
</li>
</ul>
<hr>
<h1 id="变量及数据类型"><a href="#变量及数据类型" class="headerlink" title="变量及数据类型"></a>变量及数据类型</h1><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><ol>
<li><p>变量名必须以字母或下划线开头，不能以数字开头。·但下划线开头的变量在Python中有特殊含义。</p>
</li>
<li><p>变量名中不能有空格或标点符号。(括号、引号、逗号、斜线、反斜线、冒号、句号、问号等）。”</p>
</li>
<li><p>不能使用关键字作为变量名。关键字( keyword，也称为保留字，Python3版本中共有33个)。</p>
</li>
<li><p>不建议使用系统内置的模块名、类型名或函数名以及已导入的模块名及其成员名作为变量名，这会改变其类型和含义，甚至会导致4 其他代码无法正常执行。</p>
</li>
<li><p>变量名对英文字母的大小写敏感绶即要区分大小写。例如:a与A是不同的变量。</p>
</li>
<li><p>Python3版本可以使用中文。</p>
</li>
<li><p>变量的值是可以变化的，类型也随之发生改变。比如:<code>a = 3 ; a = &quot;3&quot;</code><br>小结:Python采用大、小写字母，数字，下划线，汉字等字符及其组合进行命名，长度没有限制，但是<em>首字符不能是数字</em> ，不能出现空格与标点符号，大小写敏感，不能与关键字相同。(不建议使用中文等非英语语言字符)。</p>
</li>
</ol>
<h3 id="查看已有关键字"><a href="#查看已有关键字" class="headerlink" title="查看已有关键字"></a>查看已有关键字</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import keyword</span><br><span class="line">keyword.kwlist</span><br><span class="line">[&#39;False&#39;, &#39;None&#39;, &#39;True&#39;, &#39;and&#39;, &#39;as&#39;, &#39;assert&#39;, &#39;async&#39;, &#39;await&#39;, &#39;break&#39;, &#39;class&#39;, &#39;continue&#39;, &#39;def&#39;, &#39;del&#39;, &#39;elif&#39;, &#39;else&#39;, &#39;except&#39;, &#39;finally&#39;, &#39;for&#39;, &#39;from&#39;, &#39;global&#39;, &#39;if&#39;, &#39;import&#39;, &#39;in&#39;, &#39;is&#39;, &#39;lambda&#39;, &#39;nonlocal&#39;, &#39;not&#39;, &#39;or&#39;, &#39;pass&#39;, &#39;raise&#39;, &#39;return&#39;, &#39;try&#39;, &#39;while&#39;, &#39;with&#39;, &#39;yield&#39;]</span><br></pre></td></tr></table></figure>
<h3 id="查看已有内置对象名"><a href="#查看已有内置对象名" class="headerlink" title="查看已有内置对象名"></a>查看已有内置对象名</h3><p><code>dir(__builtins__)</code></p>
<h2 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h2><h3 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h3><p>10 2 8 16进制转换：<code>int() bin() oct() hex()</code>，其中0b 0o 0x 代表2 8 16进制。<br><code>int(&#39;111&#39;,6)</code></p>
<h3 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h3><p><code>float(&quot;3.5&quot;)</code> = 3.5</p>
<h3 id="复数"><a href="#复数" class="headerlink" title="复数"></a>复数</h3><p><code>complex(3,5)</code> = (3+5j)<br><code>complex(&#39;3+5j&#39;)</code> = (3+5j)</p>
<h3 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h3><p><code>abs()</code><br><code>divmond()</code><br><code>pow()</code><br><code>round()</code></p>
<p><img src="/images/python/%E5%87%BD%E6%95%B0.jpg" alt></p>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><p><code>+ - * / // % **</code></p>
<p>字符串相加即为拼接，集合相减为差集，字符串*3即为重复3次</p>
<p><strong>优先级</strong></p>
<ol>
<li><code>**</code></li>
<li><code>* / % //</code></li>
<li><code>+ -</code></li>
</ol>
<h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p><code>== != &gt; &lt; &gt;= &lt;=</code><br>返回值为boolean</p>
<h3 id="赋值运算符（加强赋值操作符）"><a href="#赋值运算符（加强赋值操作符）" class="headerlink" title="赋值运算符（加强赋值操作符）"></a>赋值运算符（加强赋值操作符）</h3><p><code>= += -= *= /= //= %= **=</code><br>中间不能出现空格<br><code>b *= 3+2</code>  先算=右侧</p>
<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p><code>and or not</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x and y</span><br><span class="line">x or y</span><br><span class="line">not x</span><br></pre></td></tr></table></figure>
<p>比较运算符优先于逻辑运算符</p>
<h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p><img src="/images/python/%E4%BC%98%E5%85%88%E7%BA%A7.jpg" alt></p>
<h3 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h3><p>in |  not in<br>返回boolean</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 in (1,2)</span><br><span class="line">true</span><br></pre></td></tr></table></figure>
<h3 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h3><p>is |    is not<br><code>x is y</code>等价于<code>id(x) == id(y)</code></p>
<h3 id="集合运算符"><a href="#集合运算符" class="headerlink" title="集合运算符"></a>集合运算符</h3><table>
<thead>
<tr>
<th>&amp;</th>
<th>|</th>
<th>-</th>
<th>^</th>
</tr>
</thead>
<tbody><tr>
<td>交集</td>
<td>并集</td>
<td>差集</td>
<td>对称差集</td>
</tr>
</tbody></table>
<p>对称差集即为<code>(a | b) - (a &amp; b)</code></p>
<hr>
<h1 id="组合数据"><a href="#组合数据" class="headerlink" title="组合数据"></a>组合数据</h1><p><img src="/images/python/%E7%BB%84%E5%90%88%E6%95%B0%E6%8D%AE.jpg" alt></p>
<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>str():将其他序列转化为字符串，会把集合完全转化为字符串<br>比如<br>a = str(set1)<br>a[0]<br>‘(‘<br>把字典转化成str的时候好像冒号后面会多个空格</p>
<h3 id="字符串的创建"><a href="#字符串的创建" class="headerlink" title="字符串的创建"></a>字符串的创建</h3><ol>
<li>交互式<code>a</code>与<code>print(a)</code>的区别是少个<code>‘’</code></li>
<li>多行字符串内敲入回车会换行，可以加<code>\</code>防止换行。<code>\n</code>表示换行。</li>
<li>多行字符串用<code>&#39;&#39;&#39;三单&#39;&#39;&#39;</code>或者<code>&quot;&quot;&quot;三双&quot;&quot;&quot;</code>具体可参考：<a href="https://blog.csdn.net/woainishifu/article/details/76105667">《Python中单引号，双引号，3个单引号及3个双引号的区别》</a></li>
<li>反斜杠<code>\</code>的用处<ol>
<li>续行符</li>
<li>转义符： <code>\n</code>表示换行符</li>
</ol>
</li>
<li><code>str = &quot;&quot;&quot;他说：&quot;你好。&quot; &quot;&quot;&quot;</code> 后面四个<code>&quot;</code>必须分成1+3</li>
</ol>
<h3 id="字符串的索引与切片"><a href="#字符串的索引与切片" class="headerlink" title="字符串的索引与切片"></a>字符串的索引与切片</h3><ol>
<li><strong>索引</strong><code>index</code></li>
<li><strong>切片</strong><code>slice</code>，适用于字符串、列表、元组 <ul>
<li><strong>格式</strong>： <code>字符串名[开始索引:结束索引:方向与步长]</code></li>
<li><strong>注意</strong>:<ul>
<li>结束索引不包括在内，即左闭右开；步长默认为一。</li>
<li>从头开始：<code>str[:3:2]</code></li>
<li>到末尾结束： <code>str[2::3]</code></li>
</ul>
</li>
</ul>
</li>
<li><strong>由字符到索引</strong><br><code>str.index(&#39;A&#39;)</code>查询的是首次出现的index</li>
</ol>
<h3 id="字符串的运算符"><a href="#字符串的运算符" class="headerlink" title="字符串的运算符"></a>字符串的运算符</h3><table>
<thead>
<tr>
<th>+: 拼接</th>
<th>*： 重复</th>
<th>成员运算符：in/not in</th>
<th>比较运算符：&gt; &lt; &gt;=…</th>
</tr>
</thead>
</table>
<blockquote>
<p>字符串的比较标准：ASCII码，Unicode编码值</p>
</blockquote>
<ul>
<li>升序 A—Z—a—z</li>
<li>数字从小到大</li>
<li>若混合排序： 数字 &lt; 大写字母&lt;小写字母</li>
<li>多个字符串比较时，从首位开始逐步比较。</li>
<li><code>chr()</code> 返回Unicode编码值对应的字符<br><code>ord()</code> 返回编码值，如<code>ord(&#39;1&#39;)</code></li>
</ul>
<h3 id="字符串格式化（format-）"><a href="#字符串格式化（format-）" class="headerlink" title="字符串格式化（format()）"></a>字符串格式化（format()）</h3><p><code>&#39;你好，我是&#123;&#125;，是&#123;&#125;的爸爸。&#39;.format(&#39;Linda&#39;,&#39;Mia&#39;)</code><br><code>&#39;你好，我是&#123;1&#125;，是&#123;0&#125;的爸爸。&#39;.format(&#39;Linda&#39;,&#39;Mia&#39;)</code></p>
<blockquote>
<p><code>&#123;&#125;</code>里面可以填写index，用来匹配format()里的参数，从0开始。<br><code>&#39;你好，我是&#123;&#125;，&#123;&#123;是&#123;&#125;的爸爸。&#125;&#125;&#39;.format(&#39;Linda&#39;,&#39;Mia&#39;)</code><br>当想输出<code>&#123;&#125;</code>的时候，需要写成<code>&#123;&#123;&#125;&#125;</code>，此处{}用来转义。</p>
</blockquote>
<p><del>此处有待补充</del></p>
<h3 id="字符串函数汇总"><a href="#字符串函数汇总" class="headerlink" title="字符串函数汇总"></a>字符串函数汇总</h3><ol>
<li>参考：<a href="https://blog.csdn.net/weixin_43158056/article/details/92798114">字符串常用方法汇总</a></li>
<li><code>eval()</code>去掉最外侧的引号并以Python语句输出</li>
<li>一些图片</li>
</ol>
<p><img src="/images/python/%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0.jfif" alt><br><img src="/images/python/char.jfif" alt><br><img src="/images/python/char2.jfif" alt><br><img src="/images/python/char3.jfif" alt></p>
<h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><table>
<thead>
<tr>
<th>(元组)</th>
<th>[列表]</th>
<th>{字典}</th>
<th>{集合}</th>
</tr>
</thead>
<tbody><tr>
<td>不可更改</td>
<td>可更改</td>
<td>可更改</td>
<td>可更改，元素不可重复</td>
</tr>
</tbody></table>
<ol start="0">
<li>元组是不能修改的，只能再生成新的元组<br><code>tuple = ()</code></li>
<li>两个类型不一样<br><code>tuple = (1)</code><br><code>tuple = (1,)</code></li>
<li>取值<br><code>tuple[1]</code><br><code>tuple[2:5]</code></li>
<li>拼接<br><code>tuple[1:3]+ tuple[3:5]</code><br>注意单个元组如：<code>tuple[2]</code>不是元组，是不能用来和元组拼接的。</li>
<li>方法<br><code>len()</code><br><code>max()</code><br><code>min()</code><br><code>tuple(seq)</code><br><code>.count()</code><br><code>.index()</code> 查第一次出现的数据的索引</li>
<li>比较<br>元组内部的元素一般为同一种，如果不统一的话在进行某些操作的时候会报错。</li>
<li>遍历<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- for --&gt;</span><br><span class="line">for i in range(len(tuple)):</span><br><span class="line">    print(i)</span><br><span class="line">for i in tuple:</span><br><span class="line">    print(tuple[i])</span><br><span class="line">&lt;!-- while --&gt;</span><br><span class="line">i &#x3D; 0</span><br><span class="line">while i&lt;len(tuple):</span><br><span class="line">    print(tuple[i])&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2></li>
<li>创建列表<ol>
<li>普通创建<br><code>list = [&#39;&#39;,&#39;&#39;,&#39;&#39;...]</code><br><code>list = [1,2,3...]</code> </li>
<li>由字符串创建<br><code>list1 = list(&#39;abcde&#39;)</code></li>
</ol>
</li>
<li>方法<ol>
<li>增加<br>.insert(索引,数据) 指定位置插入<br>.append(数据) 末尾追加数据<br>.extend(列表2) 拼接列表，即为list1 + list2 </li>
<li>删除<br>del list[索引] 删除指定元素<br>.remove(数据) 删除第一次出现的数据<br>.pop() 删除末尾的数据<br>.pop(索引) 删除指定数据<br>.clear() 清空 </li>
<li>修改<br>list[索引] = 数据</li>
<li>查询<br>list[索引]<br>.index(数据) 第一次出现的索引<br>len() 长度<br>.count(数据) 统计次数</li>
<li>排序<br><img src="/images/python/sort.png" alt></li>
<li>相加相乘<br><code>list1 + list2</code> 拼接<br><code>list2 = list1 * 3</code> 复制三次</li>
<li>复制</li>
</ol>
 <strong>【有待补充】</strong></li>
</ol>
<h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p><code>del()</code><br><code>pop</code><br><code>if &#39;&#39; in d:</code><br><code>for key in d.keys():</code><br><code>for value in d.values():</code><br><code>.clear</code></p>
<p><code>list(dic) = list(dic.keys())</code> 只有keys<br><code>list(dic.values())</code><br><code>list(dic.items())</code><br><code>tuple</code> 一样<br><code>for x in dic:</code><br>    <code>print(x)</code> #输出只有keys<br><code>for x in dic.items():</code> #输出键值对</p>
<blockquote>
<p>while不能直接遍历字典 需要转化为tuple/列表，这样才有索引，才能通过索引遍历。</p>
</blockquote>
<h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><blockquote>
<p>集合中间只能包含不可变的数据：如数字、字符串、元组。（唯一性）</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set1 &#x3D; &#123;1,2,3,4&#125;</span><br><span class="line">set2 &#x3D; &#123;1,2,1,2&#125; #自动去重</span><br><span class="line">set3 &#x3D; &#123;[3,4],1,2&#125; #报错</span><br><span class="line">&lt;!-- 空集合 空字典 空元组的创建 --&gt;</span><br><span class="line">元组名 &#x3D; ()</span><br><span class="line">字典名 &#x3D; &#123;&#125;</span><br><span class="line">集合名 &#x3D; set()</span><br></pre></td></tr></table></figure>
<blockquote>
<p>字符串转化为集合会拆分字母，且自动去重，无序。字典转化为集合只会呈现keys。</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; set(range(1,9))</span><br><span class="line">&#123;1, 2, 3, 4, 5, 6, 7, 8&#125; </span><br><span class="line">&lt;!-- 声明列表 --&gt;</span><br><span class="line">s &#x3D; set(&#39;python&#39;)</span><br><span class="line">s &#x3D; frozenset(&#39;python&#39;)</span><br><span class="line">&lt;!-- 方法 --&gt;</span><br><span class="line">.add(&#39;0&#39;)</span><br><span class="line">.update([update])</span><br><span class="line">.remove()</span><br><span class="line">.clear</span><br><span class="line">if 2 in s:</span><br><span class="line">for e in s:</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>表示</th>
<th>含义</th>
<th>方法</th>
</tr>
</thead>
<tbody><tr>
<td>s = s1 | s2</td>
<td>并集</td>
<td>s1.union(s2)</td>
</tr>
<tr>
<td>s = s1 &amp; s2</td>
<td>交集</td>
<td>s1.intersection(s2)</td>
</tr>
<tr>
<td>s = s1 - s2</td>
<td>差集</td>
<td>s1.difference(s2)</td>
</tr>
<tr>
<td>s = s1 ^ s2</td>
<td>两集合中不重复的元素</td>
<td>s1.symmetric_difference(s2)</td>
</tr>
</tbody></table>
<p>参考1：<a href="https://blog.csdn.net/weixin_44489823/article/details/100533920">python 集合比较（交集、并集，差集）</a><br>参考2：<a href="https://www.runoob.com/python3/python3-set.html#setmethod">集合方法参考</a></p>
<hr>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="杂碎知识点"><a href="#杂碎知识点" class="headerlink" title="杂碎知识点"></a>杂碎知识点</h2><p>return多个返回值：<br><code>return sum,product</code><br>返回值默认显示为元组<code>(1,2)</code><br>还可以按需求为其它的形式如：<br>列表：<code>return[sum,product]</code></p>
<h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><p><code>def fun1(x):</code><br><code>help(fun1)</code><br><code>dir(fun1)</code><br><code>fun1.</code></p>
<h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><table>
<thead>
<tr>
<th>L</th>
<th>E</th>
<th>G</th>
<th>B</th>
</tr>
</thead>
<tbody><tr>
<td>局部</td>
<td>闭包外</td>
<td>全局</td>
<td>内建</td>
</tr>
</tbody></table>
<p>函数内部声明<code>global a</code><br><code>if elif else try except for while</code>不会引入新的作用域，其中定义的变量外部也可以访问。 </p>
<h2 id="基本函数"><a href="#基本函数" class="headerlink" title="基本函数"></a>基本函数</h2><p>斐波那契数列的递归函数<br><code>input() | age = input(&#39;your age:&#39;)</code><br><code>raw_input()</code>只存在于python2，不管输入什么的都是字符串<br><code>print()</code><br><code>int()</code><br><code>print(value1,value2,value3...,step = &#39;\t&#39;,end = &#39;\n&#39;, file = &#39;sys.stdout&#39;)</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i in range(1,5)</span><br><span class="line">    print(i,end&#x3D;&#39;&#39;) #输出不换行</span><br></pre></td></tr></table></figure>
<p>写入文件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">with open (&#39;test.txt&#39;,&#39;w&#39;) as file01:</span><br><span class="line">    print(&#39;hello&#39;,file &#x3D; file01)</span><br><span class="line">with open (&#39;test02.txt&#39;,&#39;w&#39;) as file02:</span><br><span class="line">    file02.write(&#39;hello&#39;)</span><br></pre></td></tr></table></figure>
<h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><p>工厂函数：<code>list()</code> <code>tuple()</code> <code>dict()</code> <code>set()</code> <code>int()</code> <code>str()</code></p>
<h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h2><p><img src="/images/python/%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0.jfif" alt></p>
<hr>
<h1 id="模拟笔记"><a href="#模拟笔记" class="headerlink" title="模拟笔记"></a>模拟笔记</h1><h2 id="杂碎知识点记忆"><a href="#杂碎知识点记忆" class="headerlink" title="杂碎知识点记忆"></a>杂碎知识点记忆</h2><p><code>eval(&#39;代码&#39;)</code> 执行其中的代码，并返回值<br><code>str.split()</code> 分割，返回列表，默认以空格分割<br><code>&#123;:-&gt;25,&#125;.format()</code> 格式化输出，注意-&gt;一起使用<br>python3.x <code>input()</code> 返回值是str，如需格式化输出等，可用<code>int()</code>、<code>eval()</code>转换为整数 ，<code>eval()</code>就是<strong>去掉引号</strong><br>&lt;填充&gt;&lt;对齐/&lt;宽度&gt;&lt;,&gt;&lt;.精度&gt;&lt;类型&gt;等六个字段，<br><code>for i in range()</code> i从0开始<br><code>b = 1,2,3</code><br><code>type(b) = tuple</code><br><code>type(eval（&#39;1,2,3&#39;)) = tuple</code><br><code>jieba.lcut()</code> 返回值是<strong>列表</strong><br><code>list.reverse()</code>  会改变原来的列表，而且<strong>没有返回值</strong><br>参考1：<a href="https://blog.csdn.net/mingyuli/article/details/81604795">print(s[::-1])</a><br>参考2<a href="cnblogs.com/wc-chan/p/8080765.html">同时给多个变量赋值</a><br><code>a, b = 0, 1</code><br><code>random</code> 之能生成0.0-1.1之间的数，<code>randint</code>可以指定（1，2）经过实测，是[1,2]</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifxxx:</span><br><span class="line">elif xxx:</span><br><span class="line">elif xxx:</span><br><span class="line">else:</span><br></pre></td></tr></table></figure>
<p><code>print(&quot;&#123;:+^11&#125;&quot;.format(chr(n-1)+chr(n)+chr(n+1)))</code>字符串直接相加就行<br>输入多个数  <code>a,b,c = eval(input())</code><br><code>try except</code><br><code>int(a) == a</code><br><code>turtle.seth</code><br><code>turtle.left</code><br><code>str.split</code>不改变原来值<br><a href="https://www.cnblogs.com/huigebj/p/11433896.html">python3排序 sorted(key=lambda)</a><br>常用的用字典统计个数<br><code>d[i] = d.get[i]+1</code><br>如果是<code>readlines</code>读写进来的列表，其中的元素含有<code>\n</code>字符，算作一个字符，素以向字典添加的时候需要去掉，即为<code>d[i][:-1] = d.get[i][:-1]+1</code><br><code>if len(name.split()) == 1:</code> 记录一行有两个名字的有效票数问题<br>判断数据是否在字典里，不管是key还是value都可以用<code>if data in d:</code><br>print输出多个数据的时候，可以用format格式化输出 <code>print(&#39;&#123;&#125;&#123;&#125;&#123;&#125;&#39;.format(a,b,c))</code><br>文件内容的遍历：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file &#x3D; open(&#39;xxx.txt&#39;,&#39;rb&#39;)</span><br><span class="line">for line in file:</span><br><span class="line">    print(line)</span><br></pre></td></tr></table></figure>
<h2 id="盲点"><a href="#盲点" class="headerlink" title="盲点"></a>盲点</h2><ul>
<li><input disabled type="checkbox"> 位运算符</li>
<li><input disabled type="checkbox"> 优先级 </li>
<li><input disabled type="checkbox"> 可变长参数</li>
<li><input disabled type="checkbox"> 格式化输出</li>
<li><input checked disabled type="checkbox"> 序列的方法</li>
<li><input checked disabled type="checkbox"> 用字典统计数目</li>
<li><input disabled type="checkbox"> 字符串中的数字怎么比较</li>
<li><input disabled type="checkbox"> format参数</li>
<li><input disabled type="checkbox"> 字符串的一些函数</li>
</ul>
<hr>
<h1 id="软件技术基础"><a href="#软件技术基础" class="headerlink" title="软件技术基础"></a>软件技术基础</h1><p>软件 = 程序+ 文档 = 数据结构+算法+文档</p>
<h1 id="选择题笔记"><a href="#选择题笔记" class="headerlink" title="选择题笔记"></a>选择题笔记</h1><blockquote>
<p>x*<em>y的作用是计算x的y次幂。<br>x//y的作用是计算x与y的整数商，即不大于x与y之商的最大整数。<br>x%y的作用是计算x与y之商的余数。<br>表达式中的运算符中，\</em>*的运算级最高，所以先计算4**2，即3*4**2//8%7=3*16//8%7=48//8%7=6%7=6。<br>C语言是静态编译语言，Python语言是脚本语言    静态语言和脚本语言，静态语言采用编译方式执行，脚本语言采用解释方式执行。<br>Python语言中的浮点数类型必须带有小数部分，小数部分可以是0。<br>一般代码不需要缩进，顶行编写且不留空白。当表示分支、循环、函数、类等程序含义时，在if、while、for、def、class等保留字所在完整语句后通过英文冒号结尾并在之后进行缩进，表明后续代码与紧邻无缩进语句的所属关系。<br>代码编写中，缩进可以用Tab键实现，也可以用多个空格（一般是4个空格）实现，但两者不混用。不会增加编程难度。<br>Python采用大写字母、小写字母、数字、下划线和汉字等字符及其组合进行命名，但首字符不能是数字。<br>Python保留字是大小写敏感的，True是保留字，true不是。<br>sum不是保留字，可以被当做变量使用。finally是保留字。<br>id()函数是Python内置函数之一，作用是获取对象的内存地址，返回对象的内存地址（是一个正整数）。<br>Python语言的三个重要特点：<br>（1）通用性：Python语言可以用于几乎任何与程序设计相关应用的开发，不仅适合训练编程思维，更适合诸如数据分析、机器学习、人工智能、Web开发等具体的技术区域。<br>（2）语法简洁。<br>（3）生态高产：Python解释器提供了几百个内置类和函数库，此外，世界各地程序员通过开源社区贡献了十几万个第三方函数库。<br>除此之外，还有一些具体特点：<br>（1）平台无关。<br>（2）强制可读。<br>（3）支持中文。<br>count    </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import keyword</span><br><span class="line">&gt;&gt;&gt; keyword.kwlist</span><br><span class="line">[&#39;False&#39;, &#39;None&#39;, &#39;True&#39;, &#39;and&#39;, &#39;as&#39;, &#39;assert&#39;, &#39;break&#39;, &#39;class&#39;, &#39;continue&#39;, &#39;def&#39;, &#39;del&#39;, &#39;elif&#39;, &#39;else&#39;, &#39;except&#39;, &#39;finally&#39;, &#39;for&#39;, &#39;from&#39;, &#39;global&#39;, &#39;if&#39;, &#39;import&#39;, &#39;in&#39;, &#39;is&#39;, &#39;lambda&#39;, &#39;nonlocal&#39;, &#39;not&#39;, &#39;or&#39;, &#39;pass&#39;, &#39;raise&#39;, &#39;return&#39;, &#39;try&#39;, &#39;while&#39;, &#39;with&#39;, &#39;yield&#39;]</span><br></pre></td></tr></table></figure>
<blockquote>
<p>type(type(‘45’))输出为&lt;class ‘type’&gt;。<br>以下保留字不用于循环逻辑的是<code>try</code><br><code>s[0:4]</code>表示截取字符串正向第1个字符1到正向第5个字符5（不包括5）之间的字符，即’1234’。<br>乘除和取模取余同级先计算<code>5%6*2//8=5*2//8=10//8=1</code>，再计算<code>3+1=4</code>。<br>**是数值运算操作符。<br>&amp;是按位与运算符，&amp;=则是对应的二元操作符。<br>^是按位异或运算符。<br>保留字大小写敏感，False是保留字，false不是保留字。<br>if不用于异常处理逻辑，用于分支结构。<code>try</code> <code>else</code> <code>finally</code>都用于异常处理<br>python 不是网络编程语言<br>Python中出现SyntaxError一般表示语法错误，如未在<code>if , elif , else , for , while , class ,def</code> 声明末尾添加”:”，导致该语句无法解释执行。<br>int()函数用于将一个字符串或数字转换为整型，字符串’100/3’中有”/“，该文本不能转化成数值，参数无效，会报ValueError的错误。<br>random.random()表示取随机数，数值的类型是float型，<br>uniform(a,b)：生成一个[a,b]之间的随机小数，3.993002365820678超出了范围。<br>判断字符串内是否有子字符串，可以用<code>if xx in str:</code>或<code>if str.coune(&#39;xx&#39;) &gt;0:</code><br><code>ls.append(line.strip(&#39;\n&#39;).split(&#39;,&#39;))</code></p>
</blockquote>
<p><strong>👇👇👇这是练习的一道题，卡在一个点出不来了记录一下，简而言之就是👇👇👇</strong></p>
<ol>
<li>建议把f.read()保存到一个变量里，然后f.close()。</li>
<li>List.sort会改变原来的列表，而且没有返回值！！！！😭<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import jieba</span><br><span class="line">d &#x3D; &#123;&#125;</span><br><span class="line">def print_most_word (path,year):</span><br><span class="line">    f &#x3D; open(path,&#39;r&#39;)</span><br><span class="line">    txt &#x3D; f.read()</span><br><span class="line">    f.close()</span><br><span class="line">    wordList &#x3D; jieba.lcut(txt)</span><br><span class="line">    for word in wordList:</span><br><span class="line">        if len(word) &gt;1:</span><br><span class="line">            d[word] &#x3D; d.get(word,0)+1</span><br><span class="line">    dls&#x3D; list(d.items())</span><br><span class="line">    dls.sort(key &#x3D; lambda x:x[1],reverse &#x3D; True)</span><br><span class="line">    print(str(year)+&#39;:&#39;,end&#x3D;&#39;&#39;)</span><br><span class="line">    for i in range(10):</span><br><span class="line">        if i &#x3D;&#x3D;:</span><br><span class="line">            print(&#39;&#123;&#125;:&#123;&#125;&#39;.format(dls[i][0],dls[i][1]))</span><br><span class="line">            continue</span><br><span class="line">        print(&#39;&#123;&#125;:&#123;&#125;,&#39;.format(dls[i][0],dls[i][1]),end&#x3D;&#39;&#39;)</span><br><span class="line">print_most_word(&#39;data2018.txt&#39;,2018)</span><br><span class="line">print_most_word(&#39;data2019.txt&#39;,2019)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
打开<code>txt</code>的时候看一下编码格式如果是utf-8那么打开的时候要注意是：<code>f = open(&#39;data.txt&#39;,&#39;r&#39;,encoding=&#39;utf-8&#39;)</code><br>注意如果一不小心把<code>r</code>写成了<code>w</code>，文件就会清空了！！</li>
</ol>
<h1 id="模拟考试知识点总结"><a href="#模拟考试知识点总结" class="headerlink" title="模拟考试知识点总结"></a>模拟考试知识点总结</h1><p>遍历字符串：<br><code>for i in string1:</code><br><code>for i in len(string1):</code><br>统计字符串的某个字符的个数：<br><code>sting.count(&#39;xxx&#39;)</code><br>格式化输出的进制以及大小写<br>字符串索引是[index]<br><a href="https://blog.csdn.net/laochu250/article/details/67649210">《python list转换字符串报错TypeError: sequence item 0: expected str instance, int found》</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 提取示例 --&gt;</span><br><span class="line">while True:</span><br><span class="line">    s &#x3D; input(&quot;请输入不带数字的文本:&quot;)</span><br><span class="line">    a &#x3D; 0</span><br><span class="line">    for i in range(10):</span><br><span class="line">        if str(i)  in s:</span><br><span class="line">            a &#x3D;1</span><br><span class="line">            break</span><br><span class="line">    if a &#x3D;&#x3D; 0:</span><br><span class="line">        break</span><br><span class="line">print(len(s))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><code>turtle.seth()</code>是设置<code>turtle</code>的角度，<code>turtle.left()</code>是改变角度</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">f &#x3D; open(&#39;论语-网络版.txt&#39;,&#39;r&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">txt &#x3D; f.readlines()</span><br><span class="line">f.close()</span><br><span class="line">f &#x3D; open(&#39;原文.txt&#39;,&#39;w&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">ls&#x3D;[]</span><br><span class="line">can_write &#x3D; False</span><br><span class="line">for line in txt:</span><br><span class="line">    if &#39;【原文】&#39; in line:</span><br><span class="line">        can_write &#x3D; True</span><br><span class="line">        continue</span><br><span class="line">    if &#39;【&#39; in line and &#39;【原文】&#39; not in line:</span><br><span class="line">        can_write &#x3D; False</span><br><span class="line">    if can_write:</span><br><span class="line">        if line !&#x3D; &#39;\n&#39;:</span><br><span class="line">            for i in range(20):</span><br><span class="line">                remove_str &#x3D; &#39;(&#39;+str(i)+&#39;)&#39;</span><br><span class="line">                line &#x3D; line.replace(remove_str,&#39;&#39;)</span><br><span class="line">            f.write(line)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>
<p>字典里面的东西写进去：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for key in d:</span><br><span class="line">    ls.append(&quot;&#123;&#125;:&#123;&#125;&quot;.format(key, d[key]))</span><br><span class="line">fo.write(&quot;,&quot;.join(ls))</span><br><span class="line">del d[&#39; &#39;] #删除字典中的元素</span><br><span class="line">del d[&#39;\n&#39;]</span><br></pre></td></tr></table></figure>
<p>字符串的截取：string[:2]<br>表示第0和第1.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &#x3D; input() #当输入值可能有小数时可以用eval</span><br><span class="line">if d[0] &#x3D;&#x3D; &#39;C&#39;: #一定要注意是&#x3D;&#x3D;不是&#x3D;</span><br><span class="line">    d &#x3D; float(d[1:])*1.8+32 </span><br><span class="line">    print(&#39;F&#123;:.2f&#125;&#39;.format(d)) #格式化输出的语法要记牢啊</span><br><span class="line">else:</span><br><span class="line">    d &#x3D; (float(d[1:])-32)&#x2F;1.8</span><br><span class="line">    print(&#39;C&#123;:.2f&#125;&#39;.format(d))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s &#x3D; input()</span><br><span class="line">if s[:3] &#x3D;&#x3D; &#39;RMB&#39;: #字符串截取的是左闭右开！！！</span><br><span class="line">    s &#x3D; eval(s[3:])&#x2F;6.78</span><br><span class="line">    print(&#39;USD&#123;:.2f&#125;&#39;.format(s))</span><br><span class="line">else: #不要写两个if啊，要写else</span><br><span class="line">    s &#x3D; eval(s[3:])*6.78</span><br><span class="line">    print(&#39;RMB&#123;:.2f&#125;&#39;.format(s))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n&#x3D;float(input()) # float(xxx)其中的xxx必需全是数字，可以是小数</span><br><span class="line">print(pow(n,0),pow(n,1),pow(n,2),pow(n,3),pow(n,4),pow(n,5)) # pow是内置函数，可以用**代替</span><br></pre></td></tr></table></figure>
<p>all(x)：组合类型变量x中所有元素都为真时返回True，否则返回False；若x为空，返回True。<br>any(x)：组合类型变量x中任一元素都为真时返回True，否则返回False；若x为空，返回True。<br>y中第一个元素为一个空格，第二个元素为空，即null，所以第一个元素为真，第二个元素为假，all(y)输出False，any(y)输出True。<br>如果一个函数需要以多种形式来接收实参，定义时一般把位置参数放在最前面，然后是默认参数，接下来是一个星号的可变长度参数，最后是两个星号的可变长度参数。<br>例：def foo(x,<em>args,*</em>kwargs):<br>Python为源文件指定的默认字符编码是<strong>__</strong>。（UTF-8）<br>round(x,d)：对x四舍五入，保留d位小数，无参数d则返回四舍五入的整数值。<br>当文件以文本方式打开时，读写按照字符串方式；当文件以二进制方式打开时，读写按照字节流方式。<br>创建写模式x，文件不存在则创建，存在则返回异常FileExistsError。<br>打开并关闭文件的操作，需要文件的路径名，由于”&quot;是字符串中的转义符，所以表示路径时，使用”\“或”/“代替”&quot;。</p>
<h1 id="第三方库"><a href="#第三方库" class="headerlink" title="第三方库"></a>第三方库</h1><p>网络爬虫方向<br>requests<br><strong>scrapy</strong><br>pyspider<br>数据分析方向<br><strong>numpy<br>pandas<br>scipy</strong><br>文本处理方向<br><strong>pdfminer</strong><br>python-docx<br><strong>beautifuisoup4</strong><br>数据可视化方向<br>matplotlib<br><strong>seaborn</strong><br><strong>mayavi</strong><br>用户图形界面方向<br>    <strong>PyQt5</strong><br>wxPython<br>PyGTK<br>机器学习方向<br>scikit -learn<br><strong>TebsorFlow</strong><br>mxnet<br>web开发方向<br><strong>Diango<br>Pyramid<br>flask</strong><br>游戏开发方向<br><strong>Pygame</strong><br>Panda3D<br>cocos2d</p>
<h1 id="考完总结"><a href="#考完总结" class="headerlink" title="考完总结"></a>考完总结</h1><p>其实吧，不用看那么多视频，就那个模拟考软件，把题库完完整整刷完搞懂就行了，考试完全没问题（我不会告诉你都是原题的）。</p>
<h1 id="额外服务"><a href="#额外服务" class="headerlink" title="额外服务"></a>额外服务</h1><h2 id="邮件服务"><a href="#邮件服务" class="headerlink" title="邮件服务"></a>邮件服务</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 邮件服务 --&gt;</span><br><span class="line"># coding: UTF-8</span><br><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">mailserver &#x3D; &quot;smtp.163.com&quot;  #邮箱服务器地址</span><br><span class="line">username_send &#x3D; &#39;******@163.com&#39;  #邮箱用户名</span><br><span class="line">password &#x3D; &#39;******&#39;   #邮箱密码：需要使用授权码</span><br><span class="line">username_recv &#x3D; &#39;****@qq.com&#39;  #收件人，多个收件人用逗号隔开</span><br><span class="line">mail &#x3D; MIMEText(&#39;xxx&#39;)</span><br><span class="line">mail[&#39;Subject&#39;] &#x3D; &#39;xxx&#39;</span><br><span class="line">mail[&#39;From&#39;] &#x3D; username_send  #发件人</span><br><span class="line">mail[&#39;To&#39;] &#x3D; username_recv  #收件人；[]里的三个是固定写法，别问为什么，我只是代码的搬运工</span><br><span class="line">smtp &#x3D; smtplib.SMTP(mailserver,port&#x3D;25) # 连接邮箱服务器，smtp的端口号是25</span><br><span class="line"># smtp&#x3D;smtplib.SMTP_SSL(&#39;smtp.qq.com&#39;,port&#x3D;465) #QQ邮箱的服务器和端口号</span><br><span class="line">smtp.login(username_send,password)  #登录邮箱</span><br><span class="line">smtp.sendmail(username_send,username_recv,mail.as_string())# 参数分别是发送者，接收者，第三个是把上面的发送邮件的内容变成字符串</span><br><span class="line">smtp.quit() # 发送完毕后退出smtp</span><br><span class="line">print (&#39;success&#39;)</span><br></pre></td></tr></table></figure>
<h2 id="自动更新更新时间"><a href="#自动更新更新时间" class="headerlink" title="自动更新更新时间"></a>自动更新更新时间</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 自动更新更新时间 --&gt;</span><br><span class="line">import re</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">def change_time(path):</span><br><span class="line">        fileList &#x3D; os.listdir(path)</span><br><span class="line">        for file in fileList:</span><br><span class="line">            allpath &#x3D; path+file</span><br><span class="line">            f &#x3D; open(allpath,&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;)</span><br><span class="line">            txt &#x3D; f.read() #读取内容</span><br><span class="line">            f.close()</span><br><span class="line">            now &#x3D; int(time.time())</span><br><span class="line">            old_update &#x3D; re.findall(r&quot;(updated: \d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;\s\d&#123;1,2&#125;:\d&#123;1,2&#125;:\d&#123;1,2&#125;)&quot;,txt) # 正则匹配要修改的字符串</span><br><span class="line">            new_update &#x3D; time.strftime(&#39;updated: %Y-%m-%d %H:%M:%S&#39;,time.localtime(int(os.path.getmtime(allpath)))) # 获取文件的最后修改时间并赋值</span><br><span class="line">            try:</span><br><span class="line">                txt &#x3D; txt.replace(old_update[0],new_update) # 替换</span><br><span class="line">            except:</span><br><span class="line">                print(&#39;&#123;&#125;有误&#39;.format(file)) # 排查错误</span><br><span class="line">                continue</span><br><span class="line">            else:</span><br><span class="line">                if now - int(os.path.getmtime(allpath)) &lt; 86400: # 只修改当天创建或修改的文章</span><br><span class="line">                    fi &#x3D; open(allpath,&#39;w&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">                    fi.write(txt) # 写入</span><br><span class="line">                    fi.close() # 关闭</span><br><span class="line">change_time(&#39;E:&#x2F;blog&#x2F;source&#x2F;_posts&#x2F;&#39;) #执行代码</span><br><span class="line"></span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>note</tag>
      </tags>
  </entry>
  <entry>
    <title>python项目练习</title>
    <url>/post/71485f5b.html</url>
    <content><![CDATA[<h1 id="记录一下python常用的源码"><a href="#记录一下python常用的源码" class="headerlink" title="记录一下python常用的源码"></a>记录一下python常用的源码</h1><h2 id="邮件服务"><a href="#邮件服务" class="headerlink" title="邮件服务"></a>邮件服务</h2><blockquote>
<p>用来每次部署博客以后给订阅的人自动发邮件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 邮件服务 --&gt;</span><br><span class="line"># coding: UTF-8</span><br><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">mailserver &#x3D; &quot;smtp.163.com&quot;  #邮箱服务器地址</span><br><span class="line">username_send &#x3D; &#39;******@163.com,xxx@qq.com&#39;  #邮箱用户名</span><br><span class="line">password &#x3D; &#39;******&#39;   #邮箱密码：需要使用授权码</span><br><span class="line">username_recv &#x3D; &#39;****@qq.com&#39;  #收件人，多个收件人用逗号隔开</span><br><span class="line">mail &#x3D; MIMEText(&#39;xxx&#39;)</span><br><span class="line">mail[&#39;Subject&#39;] &#x3D; &#39;xxx&#39;</span><br><span class="line">mail[&#39;From&#39;] &#x3D; username_send  #发件人</span><br><span class="line">mail[&#39;To&#39;] &#x3D; username_recv  #收件人；[]里的三个是固定写法，别问为什么，我只是代码的搬运工</span><br><span class="line">smtp &#x3D; smtplib.SMTP(mailserver,port&#x3D;25) # 连接邮箱服务器，smtp的端口号是25</span><br><span class="line"># smtp&#x3D;smtplib.SMTP_SSL(&#39;smtp.qq.com&#39;,port&#x3D;465) #QQ邮箱的服务器和端口号</span><br><span class="line">smtp.login(username_send,password)  #登录邮箱</span><br><span class="line">smtp.sendmail(username_send,username_recv,mail.as_string())# 参数分别是发送者，接收者，第三个是把上面的发送邮件的内容变成字符串</span><br><span class="line">smtp.quit() # 发送完毕后退出smtp</span><br><span class="line">print (&#39;success&#39;)</span><br></pre></td></tr></table></figure>
<h2 id="自动更新更新时间"><a href="#自动更新更新时间" class="headerlink" title="自动更新更新时间"></a>自动更新更新时间</h2><blockquote>
<p>每次部署的时候自动将post的<code>update:</code>后面的时间改成文件的修改时间</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 自动更新更新时间 --&gt;</span><br><span class="line">import re</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">def change_time(path):</span><br><span class="line">        fileList &#x3D; os.listdir(path)</span><br><span class="line">        for file in fileList:</span><br><span class="line">            allpath &#x3D; path+file</span><br><span class="line">            f &#x3D; open(allpath,&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;)</span><br><span class="line">            txt &#x3D; f.read() #读取内容</span><br><span class="line">            f.close()</span><br><span class="line">            now &#x3D; int(time.time())</span><br><span class="line">            old_update &#x3D; re.findall(r&quot;(updated: \d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;\s\d&#123;1,2&#125;:\d&#123;1,2&#125;:\d&#123;1,2&#125;)&quot;,txt) # 正则匹配要修改的字符串</span><br><span class="line">            new_update &#x3D; time.strftime(&#39;updated: %Y-%m-%d %H:%M:%S&#39;,time.localtime(int(os.path.getmtime(allpath)))) # 获取文件的最后修改时间并赋值</span><br><span class="line">            try:</span><br><span class="line">                txt &#x3D; txt.replace(old_update[0],new_update) # 替换</span><br><span class="line">            except:</span><br><span class="line">                print(&#39;&#123;&#125;有误&#39;.format(file)) # 排查错误</span><br><span class="line">                continue</span><br><span class="line">            else:</span><br><span class="line">                if now - int(os.path.getmtime(allpath)) &lt; 86400: # 只修改当天创建或修改的文章</span><br><span class="line">                    fi &#x3D; open(allpath,&#39;w&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">                    fi.write(txt) # 写入</span><br><span class="line">                    fi.close() # 关闭</span><br><span class="line">change_time(&#39;E:&#x2F;blog&#x2F;source&#x2F;_posts&#x2F;&#39;) #执行代码&#x3D;</span><br></pre></td></tr></table></figure>
<h2 id="自己写了一个文件名字批处理的软件"><a href="#自己写了一个文件名字批处理的软件" class="headerlink" title="自己写了一个文件名字批处理的软件"></a>自己写了一个文件名字批处理的软件</h2><blockquote>
<p>网上找的都怪怪的，用起来不舒服，就自己写了一个，自由度更高，使用的是tkinter。<br>未来打算更新的几个功能</p>
<ol>
<li>增加前缀后缀 </li>
<li>修改字符的半匹配</li>
<li>支持正则替换</li>
<li>支持修改范围（例如：前十个）<br>等后续有空再写<br>另外附上：<a href="https://aseaee.lanzous.com/ibrq8nbq00f">&gt;&gt;1.1.0版本下载地址&lt;&lt;</a></li>
</ol>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import tkinter as tk</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">from tkinter import scrolledtext</span><br><span class="line"></span><br><span class="line">class MY_GUI():</span><br><span class="line">    #窗口初始化</span><br><span class="line">    def __init__(self,window_name):</span><br><span class="line">        self.window &#x3D; window_name</span><br><span class="line">        self.is_all_change &#x3D; 0</span><br><span class="line">        self.is_all_change &#x3D; tk.IntVar()</span><br><span class="line">        self.can_change &#x3D; 0</span><br><span class="line">        # 设置窗口</span><br><span class="line">    #窗口设置</span><br><span class="line">    def set_window(self):</span><br><span class="line">        self.window.title(&#39;文件名称批量修改器_v1.1.0 QQ:569389750&#39;)</span><br><span class="line">        self.window.geometry(&#39;800x600+500+100&#39;)</span><br><span class="line">        self.window.maxsize(800,600)</span><br><span class="line">        self.window.minsize(800,600)</span><br><span class="line">        self.window.attributes(&#39;-alpha&#39;,1) # 1为不虚化</span><br><span class="line">        self.address_label &#x3D; tk.Label(self.window,text&#x3D;&#39;原文件夹的地址&#39;,bg&#x3D;&#39;#336666&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10))</span><br><span class="line">        self.to_be_changed_label &#x3D; tk.Label(self.window,text&#x3D;&#39;被替换的字符串&#39;,bg&#x3D;&#39;#669999&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10))</span><br><span class="line">        self.to_change_label &#x3D; tk.Label(self.window,text&#x3D;&#39;来替换的字符串&#39;,bg&#x3D;&#39;#CCCC99&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10))</span><br><span class="line">        self.original_fileList_label &#x3D; tk.Label(self.window,text&#x3D;&#39;原始文件目录&#39;,bg&#x3D;&#39;#669999&#39;)</span><br><span class="line">        self.latest_fileList_label &#x3D; tk.Label(self.window,text&#x3D;&#39;修改后文件目录&#39;,bg&#x3D;&#39;#669999&#39;)</span><br><span class="line">        self.log_data_label &#x3D; tk.Label(self.window,text&#x3D;&#39;工  作  日  志&#39;,bg&#x3D;&#39;#ccc&#39;)</span><br><span class="line">        self.address_Entry &#x3D; tk.Entry(self.window) # 文件夹地址收集框</span><br><span class="line">        self.to_be_changed_Entry &#x3D; tk.Entry(self.window) # 要被改变的字符串</span><br><span class="line">        self.to_change_Entry &#x3D; tk.Entry(self.window) # 要改变成的字符串</span><br><span class="line"></span><br><span class="line">        self.change_button &#x3D; tk.Button(self.window,text &#x3D; &#39;修改&#39;,bg&#x3D;&#39;#CCCCCC&#39;,command&#x3D;self.callChange)</span><br><span class="line"></span><br><span class="line">        self.original_fileList_text &#x3D; tk.Text(self.window) # 原始文件目录</span><br><span class="line">        self.latest_fileList_text &#x3D; tk.Text(self.window) # 修改后的文件目录</span><br><span class="line">        self.log_data_text &#x3D; scrolledtext.ScrolledText(self.window,font&#x3D;(&#39;microsoft yahei&#39;, 10)) # 工作日志</span><br><span class="line">        self.is_all_change_button &#x3D; tk.Checkbutton(self.window,text &#x3D; &quot;是否遍历整个文件夹(默认为否)&quot;,variable&#x3D;self.is_all_change,onvalue&#x3D;1,offvalue&#x3D;0)</span><br><span class="line">        self.look_files_button &#x3D; tk.Button(self.window,text&#x3D;&#39;查看当前目录&#39;,command&#x3D;self.look_files)</span><br><span class="line">        self.clear_button &#x3D; tk.Button(self.window,text&#x3D;&#39;重置&#39;,command&#x3D;self.clearAll)</span><br><span class="line">        self.clearLog_button &#x3D; tk.Button(self.window,text&#x3D;&#39;清除工作日志&#39;,command&#x3D;self.clearLog)</span><br><span class="line">        # 滚动条</span><br><span class="line">        self.original_fileList_text_scroll &#x3D; tk.Scrollbar()</span><br><span class="line">        self.latest_fileList_text_scroll &#x3D; tk.Scrollbar()</span><br><span class="line">        # 放到窗口的右侧, 填充Y竖直方向       </span><br><span class="line">        # 两个控件关联</span><br><span class="line">        self.original_fileList_text_scroll.config(command&#x3D;self.original_fileList_text.yview)</span><br><span class="line">        self.original_fileList_text.config(yscrollcommand&#x3D;self.original_fileList_text_scroll.set)</span><br><span class="line">        self.latest_fileList_text_scroll.config(command&#x3D;self.latest_fileList_text.yview)</span><br><span class="line">        self.latest_fileList_text.config(yscrollcommand&#x3D;self.latest_fileList_text_scroll.set)</span><br><span class="line">        #布局</span><br><span class="line">        label_x &#x3D; 10</span><br><span class="line">        extry_x &#x3D; 140</span><br><span class="line">        fileList_text_x &#x3D; 380</span><br><span class="line">        log_text_width &#x3D; 360-label_x</span><br><span class="line">        self.address_label.place(x&#x3D;label_x,y&#x3D;0,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.to_be_changed_label.place(x&#x3D;label_x,y&#x3D;30,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.to_change_label.place(x&#x3D;label_x,y&#x3D;60,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.address_Entry.place(x&#x3D;extry_x,y&#x3D;0,width&#x3D;220,height&#x3D;30)</span><br><span class="line">        self.to_be_changed_Entry.place(x&#x3D;extry_x,y&#x3D;30,width&#x3D;220,height&#x3D;30)</span><br><span class="line">        self.to_change_Entry.place(x&#x3D;extry_x,y&#x3D;60,width&#x3D;220,height&#x3D;30)</span><br><span class="line">        self.change_button.place(x&#x3D;2*(log_text_width)&#x2F;3+label_x,y&#x3D;120,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.is_all_change_button.place(x&#x3D;100,y&#x3D;90,width&#x3D;280,height&#x3D;30)</span><br><span class="line">        self.log_data_text.place(x&#x3D;label_x,y&#x3D;175,width&#x3D;log_text_width+18,height&#x3D;430-25)</span><br><span class="line">        self.original_fileList_label.place(x&#x3D;fileList_text_x,y&#x3D;0,width&#x3D;100,height&#x3D;30)</span><br><span class="line">        self.original_fileList_text.place(x&#x3D;fileList_text_x,y&#x3D;30,width&#x3D;400,height&#x3D;250)</span><br><span class="line">        self.latest_fileList_label.place(x&#x3D;fileList_text_x,y&#x3D;300,width&#x3D;100,height&#x3D;30)</span><br><span class="line">        self.latest_fileList_text.place(x&#x3D;fileList_text_x,y&#x3D;330,width&#x3D;400,height&#x3D;250)</span><br><span class="line">        self.look_files_button.place(x&#x3D;label_x,y&#x3D;90,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.clear_button.place(x&#x3D;label_x,y&#x3D;120,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.original_fileList_text_scroll.place(x&#x3D;780,y&#x3D;0,width&#x3D;15,height&#x3D;300)</span><br><span class="line">        self.latest_fileList_text_scroll.place(x&#x3D;780,y&#x3D;330,width&#x3D;15,height&#x3D;300)</span><br><span class="line">        self.clearLog_button.place(x&#x3D;log_text_width&#x2F;3+label_x,y&#x3D;120,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.log_data_label.place(x&#x3D;label_x,y&#x3D;150,width&#x3D;log_text_width,height&#x3D;25)</span><br><span class="line">    #清除工作日志</span><br><span class="line">    def clearLog(self):</span><br><span class="line">        self.log_data_text.delete(1.0,tk.END)</span><br><span class="line">        current_time &#x3D; str(self.get_current_time())</span><br><span class="line">        self.log_data_text.insert(1.0, current_time+&#39; &#39;+&#39;WARNING:已清除\n&#39;)</span><br><span class="line">        # self.log_data_text.mark_set(&#39;insert&#39;, tk.END)</span><br><span class="line">    #遍历文件夹返回生成器</span><br><span class="line">    def findAllFile(self,path): # 获取文件夹下所有文件</span><br><span class="line">        for root, ds, fs in os.walk(path):</span><br><span class="line">            for f in fs:</span><br><span class="line">                fullname &#x3D; [os.path.join(root, f),os.path.join(root),os.path.join(f)]</span><br><span class="line">                yield fullname</span><br><span class="line">    #重置</span><br><span class="line">    def clearAll(self):</span><br><span class="line">        current_time &#x3D; str(self.get_current_time())</span><br><span class="line">        self.address_Entry.delete(0,tk.END)</span><br><span class="line">        self.to_be_changed_Entry.delete(0,tk.END)</span><br><span class="line">        self.to_change_Entry.delete(0,tk.END,)</span><br><span class="line">        self.log_data_text.delete(1.0,tk.END)</span><br><span class="line">        self.log_data_text.insert(1.0,current_time+&#39; &#39;+&#39;WARNING:已重置\n&#39;)</span><br><span class="line">        self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">        self.latest_fileList_text.delete(1.0,tk.END)</span><br><span class="line">    #获取当前时间</span><br><span class="line">    def get_current_time(self):</span><br><span class="line">        current_time &#x3D; time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time()))</span><br><span class="line">        return current_time</span><br><span class="line">    #判断是否输入文件夹地址</span><br><span class="line">    def callChange(self):</span><br><span class="line">        if self.address_Entry.get() !&#x3D; &#39;&#39;:</span><br><span class="line">            self.change_name()</span><br><span class="line">    #查看当前文件夹目录</span><br><span class="line">    def look_files(self):</span><br><span class="line">        self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">        address_str &#x3D; self.address_Entry.get()</span><br><span class="line">        if self.is_all_change.get():</span><br><span class="line">            fileList &#x3D; self.findAllFile(address_str)</span><br><span class="line">            for filelist in fileList:</span><br><span class="line">                self.original_fileList_text.insert(tk.END,filelist[0]+&#39;\n&#39;)</span><br><span class="line">        else:</span><br><span class="line">            fileList &#x3D; os.listdir(address_str)</span><br><span class="line">            for fileName in fileList:</span><br><span class="line">                self.original_fileList_text.insert(tk.END,fileName+&#39;\n&#39;)</span><br><span class="line">    #主函数</span><br><span class="line">    def change_name(self):</span><br><span class="line">        address_str &#x3D; self.address_Entry.get()</span><br><span class="line">        if self.is_all_change.get():#判断是否遍历</span><br><span class="line">            current_time &#x3D; self.get_current_time()</span><br><span class="line">            try:</span><br><span class="line">                fileList &#x3D; self.findAllFile(address_str)</span><br><span class="line">            except:</span><br><span class="line">                self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:请确认路径存在\n&#39;)</span><br><span class="line">            self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            self.latest_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            to_be_changed_str &#x3D; self.to_be_changed_Entry.get()</span><br><span class="line">            to_change_str &#x3D; self.to_change_Entry.get()</span><br><span class="line">            num &#x3D; 0</span><br><span class="line">            for filelist in (fileList):</span><br><span class="line">                fileName &#x3D; filelist[0]#绝对路径</span><br><span class="line">                fileRoot &#x3D; filelist[1]+&#39;\\&#39;</span><br><span class="line">                fileShortName &#x3D; filelist[2]</span><br><span class="line">                self.original_fileList_text.insert(tk.END,fileName+&#39;\n&#39;)</span><br><span class="line">                try:</span><br><span class="line">                    os.rename(fileName, fileRoot + fileShortName.replace(to_be_changed_str,to_change_str)) # 3. 文件重新命名 规则根据需求自己定</span><br><span class="line">                    if fileShortName !&#x3D; fileShortName.replace(to_be_changed_str,to_change_str):</span><br><span class="line">                        num +&#x3D; 1</span><br><span class="line">                        self.log_data_text.insert(tk.END, &#39;已将\n&#39;+fileName+&#39;\n&#39;+&#39;修改为\n&#39;+fileRoot + fileShortName.replace(to_be_changed_str,to_change_str)+&#39;\n&#39;+&#39;-&#39;*20+&#39;\n&#39;)</span><br><span class="line">                except:</span><br><span class="line">                    self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:无法同时存在两个相同名字的文件\n   &#39;)</span><br><span class="line">            self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;共修改&#39;+str(num)+&#39;个文件&#39;+&#39;\n&#39;+&#39;&#123;:■^26&#125;&#39;.format(&#39;本次修改结束&#39;)+&#39;\n&#39;)</span><br><span class="line">            self.log_data_text.see(tk.END) # 自动将光标移到末尾</span><br><span class="line">            fileList &#x3D; self.findAllFile(address_str)</span><br><span class="line">            for filelist in fileList:</span><br><span class="line">                self.latest_fileList_text.insert(tk.END,filelist[0]+&#39;\n&#39;)</span><br><span class="line">        else:</span><br><span class="line">            current_time &#x3D; self.get_current_time()</span><br><span class="line">            try:</span><br><span class="line">                fileList &#x3D; os.listdir(address_str)</span><br><span class="line">            except:</span><br><span class="line">                self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:请确认路径存在\n&#39;)</span><br><span class="line">            # os.chdir(address_str)  # 将当前工作目录修改为待修改文件夹的位置</span><br><span class="line">            self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            self.latest_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            to_be_changed_str &#x3D; self.to_be_changed_Entry.get()</span><br><span class="line">            to_change_str &#x3D; self.to_change_Entry.get()</span><br><span class="line">            num &#x3D; 0</span><br><span class="line">            for fileName in fileList:</span><br><span class="line">                self.original_fileList_text.insert(tk.END,fileName+&#39;\n&#39;)</span><br><span class="line">                try:</span><br><span class="line">                    os.rename(address_str+&#39;\\&#39;+fileName, address_str+&#39;\\&#39;+fileName.replace(to_be_changed_str,to_change_str)) # 3. 文件重新命名 规则根据需求自己定</span><br><span class="line">                    if fileName !&#x3D; fileName.replace(to_be_changed_str,to_change_str):</span><br><span class="line">                        num +&#x3D; 1</span><br><span class="line">                        self.log_data_text.insert(tk.END, &#39;已将\n&#39;+fileName+&#39;\n&#39;+&#39;修改为\n&#39;+fileName.replace(to_be_changed_str,to_change_str)+&#39;\n&#39;+&#39;-&#39;*20+&#39;\n&#39;)</span><br><span class="line">                except:</span><br><span class="line">                    self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:无法同时存在两个相同名字的文件\n&#39;)</span><br><span class="line">            fileList &#x3D; os.listdir(address_str)</span><br><span class="line">            self.latest_fileList_text.insert(tk.END,&#39;\n&#39;.join(fileList))</span><br><span class="line">            self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;共修改&#39;+str(num)+&#39;个文件&#39;+&#39;\n&#39;+&#39;&#123;:■^26&#125;&#39;.format(&#39;本次修改结束&#39;)+&#39;\n&#39;)</span><br><span class="line">            # sys.stdin.flush()  # 刷新</span><br><span class="line"></span><br><span class="line">def gui_start():</span><br><span class="line">    window &#x3D; tk.Tk()</span><br><span class="line">    MY_PORTAL &#x3D; MY_GUI(window)</span><br><span class="line">    MY_PORTAL.set_window()</span><br><span class="line">    window.mainloop()</span><br><span class="line"></span><br><span class="line">gui_start()#启动</span><br></pre></td></tr></table></figure>
<h2 id="pyinstaller反编译代码《pyinstxtractor-py》"><a href="#pyinstaller反编译代码《pyinstxtractor-py》" class="headerlink" title="pyinstaller反编译代码《pyinstxtractor.py》"></a>pyinstaller反编译代码《pyinstxtractor.py》</h2><blockquote>
<p>具体使用可以自行百度<strong>pyinstxtractor.py</strong></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">PyInstaller Extractor v1.9 (Supports pyinstaller 3.3, 3.2, 3.1, 3.0, 2.1, 2.0)</span><br><span class="line">Author : Extreme Coders</span><br><span class="line">E-mail : extremecoders(at)hotmail(dot)com</span><br><span class="line">Web    : https:&#x2F;&#x2F;0xec.blogspot.com</span><br><span class="line">Date   : 29-November-2017</span><br><span class="line">Url    : https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;pyinstallerextractor&#x2F;</span><br><span class="line"></span><br><span class="line">For any suggestions, leave a comment on</span><br><span class="line">https:&#x2F;&#x2F;forum.tuts4you.com&#x2F;topic&#x2F;34455-pyinstaller-extractor&#x2F;</span><br><span class="line"></span><br><span class="line">This script extracts a pyinstaller generated executable file.</span><br><span class="line">Pyinstaller installation is not needed. The script has it all.</span><br><span class="line"></span><br><span class="line">For best results, it is recommended to run this script in the</span><br><span class="line">same version of python as was used to create the executable.</span><br><span class="line">This is just to prevent unmarshalling errors(if any) while</span><br><span class="line">extracting the PYZ archive.</span><br><span class="line"></span><br><span class="line">Usage : Just copy this script to the directory where your exe resides</span><br><span class="line">        and run the script with the exe file name as a parameter</span><br><span class="line"></span><br><span class="line">C:\path\to\exe\&gt;python pyinstxtractor.py &lt;filename&gt;</span><br><span class="line">$ &#x2F;path&#x2F;to&#x2F;exe&#x2F;python pyinstxtractor.py &lt;filename&gt;</span><br><span class="line"></span><br><span class="line">Licensed under GNU General Public License (GPL) v3.</span><br><span class="line">You are free to modify this source.</span><br><span class="line"></span><br><span class="line">CHANGELOG</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">Version 1.1 (Jan 28, 2014)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- First Release</span><br><span class="line">- Supports only pyinstaller 2.0</span><br><span class="line"></span><br><span class="line">Version 1.2 (Sept 12, 2015)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 2.1 and 3.0 dev</span><br><span class="line">- Cleaned up code</span><br><span class="line">- Script is now more verbose</span><br><span class="line">- Executable extracted within a dedicated sub-directory</span><br><span class="line"></span><br><span class="line">(Support for pyinstaller 3.0 dev is experimental)</span><br><span class="line"></span><br><span class="line">Version 1.3 (Dec 12, 2015)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.0 final</span><br><span class="line">- Script is compatible with both python 2.x &amp; 3.x (Thanks to Moritz Kroll @ Avira Operations GmbH &amp; Co. KG)</span><br><span class="line"></span><br><span class="line">Version 1.4 (Jan 19, 2016)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Fixed a bug when writing pyc files &gt;&#x3D; version 3.3 (Thanks to Daniello Alto: https:&#x2F;&#x2F;github.com&#x2F;Djamana)</span><br><span class="line"></span><br><span class="line">Version 1.5 (March 1, 2016)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.1 (Thanks to Berwyn Hoyt for reporting)</span><br><span class="line"></span><br><span class="line">Version 1.6 (Sept 5, 2016)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.2</span><br><span class="line">- Extractor will use a random name while extracting unnamed files.</span><br><span class="line">- For encrypted pyz archives it will dump the contents as is. Previously, the tool would fail.</span><br><span class="line"></span><br><span class="line">Version 1.7 (March 13, 2017)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Made the script compatible with python 2.6 (Thanks to Ross for reporting)</span><br><span class="line"></span><br><span class="line">Version 1.8 (April 28, 2017)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Support for sub-directories in .pyz files (Thanks to Moritz Kroll @ Avira Operations GmbH &amp; Co. KG)</span><br><span class="line"></span><br><span class="line">Version 1.9 (November 29, 2017)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.3</span><br><span class="line">- Display the scripts which are run at entry (Thanks to Michael Gillespie @ malwarehunterteam for the feature request)</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">from __future__ import print_function</span><br><span class="line">import os</span><br><span class="line">import struct</span><br><span class="line">import marshal</span><br><span class="line">import zlib</span><br><span class="line">import sys</span><br><span class="line">import imp</span><br><span class="line">import types</span><br><span class="line">from uuid import uuid4 as uniquename</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class CTOCEntry:</span><br><span class="line">    def __init__(self, position, cmprsdDataSize, uncmprsdDataSize, cmprsFlag, typeCmprsData, name):</span><br><span class="line">        self.position &#x3D; position</span><br><span class="line">        self.cmprsdDataSize &#x3D; cmprsdDataSize</span><br><span class="line">        self.uncmprsdDataSize &#x3D; uncmprsdDataSize</span><br><span class="line">        self.cmprsFlag &#x3D; cmprsFlag</span><br><span class="line">        self.typeCmprsData &#x3D; typeCmprsData</span><br><span class="line">        self.name &#x3D; name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class PyInstArchive:</span><br><span class="line">    PYINST20_COOKIE_SIZE &#x3D; 24           # For pyinstaller 2.0</span><br><span class="line">    PYINST21_COOKIE_SIZE &#x3D; 24 + 64      # For pyinstaller 2.1+</span><br><span class="line">    MAGIC &#x3D; b&#39;MEI\014\013\012\013\016&#39;  # Magic number which identifies pyinstaller</span><br><span class="line"></span><br><span class="line">    def __init__(self, path):</span><br><span class="line">        self.filePath &#x3D; path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def open(self):</span><br><span class="line">        try:</span><br><span class="line">            self.fPtr &#x3D; open(self.filePath, &#39;rb&#39;)</span><br><span class="line">            self.fileSize &#x3D; os.stat(self.filePath).st_size</span><br><span class="line">        except:</span><br><span class="line">            print(&#39;[*] Error: Could not open &#123;0&#125;&#39;.format(self.filePath))</span><br><span class="line">            return False</span><br><span class="line">        return True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def close(self):</span><br><span class="line">        try:</span><br><span class="line">            self.fPtr.close()</span><br><span class="line">        except:</span><br><span class="line">            pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def checkFile(self):</span><br><span class="line">        print(&#39;[*] Processing &#123;0&#125;&#39;.format(self.filePath))</span><br><span class="line">        # Check if it is a 2.0 archive</span><br><span class="line">        self.fPtr.seek(self.fileSize - self.PYINST20_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line">        magicFromFile &#x3D; self.fPtr.read(len(self.MAGIC))</span><br><span class="line"></span><br><span class="line">        if magicFromFile &#x3D;&#x3D; self.MAGIC:</span><br><span class="line">            self.pyinstVer &#x3D; 20     # pyinstaller 2.0</span><br><span class="line">            print(&#39;[*] Pyinstaller version: 2.0&#39;)</span><br><span class="line">            return True</span><br><span class="line"></span><br><span class="line">        # Check for pyinstaller 2.1+ before bailing out</span><br><span class="line">        self.fPtr.seek(self.fileSize - self.PYINST21_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line">        magicFromFile &#x3D; self.fPtr.read(len(self.MAGIC))</span><br><span class="line"></span><br><span class="line">        if magicFromFile &#x3D;&#x3D; self.MAGIC:</span><br><span class="line">            print(&#39;[*] Pyinstaller version: 2.1+&#39;)</span><br><span class="line">            self.pyinstVer &#x3D; 21     # pyinstaller 2.1+</span><br><span class="line">            return True</span><br><span class="line"></span><br><span class="line">        print(&#39;[*] Error : Unsupported pyinstaller version or not a pyinstaller archive&#39;)</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def getCArchiveInfo(self):</span><br><span class="line">        try:</span><br><span class="line">            if self.pyinstVer &#x3D;&#x3D; 20:</span><br><span class="line">                self.fPtr.seek(self.fileSize - self.PYINST20_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">                # Read CArchive cookie</span><br><span class="line">                (magic, lengthofPackage, toc, tocLen, self.pyver) &#x3D; \</span><br><span class="line">                struct.unpack(&#39;!8siiii&#39;, self.fPtr.read(self.PYINST20_COOKIE_SIZE))</span><br><span class="line"></span><br><span class="line">            elif self.pyinstVer &#x3D;&#x3D; 21:</span><br><span class="line">                self.fPtr.seek(self.fileSize - self.PYINST21_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">                # Read CArchive cookie</span><br><span class="line">                (magic, lengthofPackage, toc, tocLen, self.pyver, pylibname) &#x3D; \</span><br><span class="line">                struct.unpack(&#39;!8siiii64s&#39;, self.fPtr.read(self.PYINST21_COOKIE_SIZE))</span><br><span class="line"></span><br><span class="line">        except:</span><br><span class="line">            print(&#39;[*] Error : The file is not a pyinstaller archive&#39;)</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">        print(&#39;[*] Python version: &#123;0&#125;&#39;.format(self.pyver))</span><br><span class="line"></span><br><span class="line">        # Overlay is the data appended at the end of the PE</span><br><span class="line">        self.overlaySize &#x3D; lengthofPackage</span><br><span class="line">        self.overlayPos &#x3D; self.fileSize - self.overlaySize</span><br><span class="line">        self.tableOfContentsPos &#x3D; self.overlayPos + toc</span><br><span class="line">        self.tableOfContentsSize &#x3D; tocLen</span><br><span class="line"></span><br><span class="line">        print(&#39;[*] Length of package: &#123;0&#125; bytes&#39;.format(self.overlaySize))</span><br><span class="line">        return True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def parseTOC(self):</span><br><span class="line">        # Go to the table of contents</span><br><span class="line">        self.fPtr.seek(self.tableOfContentsPos, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">        self.tocList &#x3D; []</span><br><span class="line">        parsedLen &#x3D; 0</span><br><span class="line"></span><br><span class="line">        # Parse table of contents</span><br><span class="line">        while parsedLen &lt; self.tableOfContentsSize:</span><br><span class="line">            (entrySize, ) &#x3D; struct.unpack(&#39;!i&#39;, self.fPtr.read(4))</span><br><span class="line">            nameLen &#x3D; struct.calcsize(&#39;!iiiiBc&#39;)</span><br><span class="line"></span><br><span class="line">            (entryPos, cmprsdDataSize, uncmprsdDataSize, cmprsFlag, typeCmprsData, name) &#x3D; \</span><br><span class="line">            struct.unpack( \</span><br><span class="line">                &#39;!iiiBc&#123;0&#125;s&#39;.format(entrySize - nameLen), \</span><br><span class="line">                self.fPtr.read(entrySize - 4))</span><br><span class="line"></span><br><span class="line">            name &#x3D; name.decode(&#39;utf-8&#39;).rstrip(&#39;\0&#39;)</span><br><span class="line">            if len(name) &#x3D;&#x3D; 0:</span><br><span class="line">                name &#x3D; str(uniquename())</span><br><span class="line">                print(&#39;[!] Warning: Found an unamed file in CArchive. Using random name &#123;0&#125;&#39;.format(name))</span><br><span class="line"></span><br><span class="line">            self.tocList.append( \</span><br><span class="line">                                CTOCEntry(                      \</span><br><span class="line">                                    self.overlayPos + entryPos, \</span><br><span class="line">                                    cmprsdDataSize,             \</span><br><span class="line">                                    uncmprsdDataSize,           \</span><br><span class="line">                                    cmprsFlag,                  \</span><br><span class="line">                                    typeCmprsData,              \</span><br><span class="line">                                    name                        \</span><br><span class="line">                                ))</span><br><span class="line"></span><br><span class="line">            parsedLen +&#x3D; entrySize</span><br><span class="line">        print(&#39;[*] Found &#123;0&#125; files in CArchive&#39;.format(len(self.tocList)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def extractFiles(self):</span><br><span class="line">        print(&#39;[*] Beginning extraction...please standby&#39;)</span><br><span class="line">        extractionDir &#x3D; os.path.join(os.getcwd(), os.path.basename(self.filePath) + &#39;_extracted&#39;)</span><br><span class="line"></span><br><span class="line">        if not os.path.exists(extractionDir):</span><br><span class="line">            os.mkdir(extractionDir)</span><br><span class="line"></span><br><span class="line">        os.chdir(extractionDir)</span><br><span class="line"></span><br><span class="line">        for entry in self.tocList:</span><br><span class="line">            basePath &#x3D; os.path.dirname(entry.name)</span><br><span class="line">            if basePath !&#x3D; &#39;&#39;:</span><br><span class="line">                # Check if path exists, create if not</span><br><span class="line">                if not os.path.exists(basePath):</span><br><span class="line">                    os.makedirs(basePath)</span><br><span class="line"></span><br><span class="line">            self.fPtr.seek(entry.position, os.SEEK_SET)</span><br><span class="line">            data &#x3D; self.fPtr.read(entry.cmprsdDataSize)</span><br><span class="line"></span><br><span class="line">            if entry.cmprsFlag &#x3D;&#x3D; 1:</span><br><span class="line">                data &#x3D; zlib.decompress(data)</span><br><span class="line">                # Malware may tamper with the uncompressed size</span><br><span class="line">                # Comment out the assertion in such a case</span><br><span class="line">                assert len(data) &#x3D;&#x3D; entry.uncmprsdDataSize # Sanity Check</span><br><span class="line"></span><br><span class="line">            with open(entry.name, &#39;wb&#39;) as f:</span><br><span class="line">                f.write(data)</span><br><span class="line"></span><br><span class="line">            if entry.typeCmprsData &#x3D;&#x3D; b&#39;s&#39;:</span><br><span class="line">            	print(&#39;[+] Possible entry point: &#123;0&#125;&#39;.format(entry.name))</span><br><span class="line"></span><br><span class="line">            elif entry.typeCmprsData &#x3D;&#x3D; b&#39;z&#39; or entry.typeCmprsData &#x3D;&#x3D; b&#39;Z&#39;:</span><br><span class="line">                self._extractPyz(entry.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def _extractPyz(self, name):</span><br><span class="line">        dirName &#x3D;  name + &#39;_extracted&#39;</span><br><span class="line">        # Create a directory for the contents of the pyz</span><br><span class="line">        if not os.path.exists(dirName):</span><br><span class="line">            os.mkdir(dirName)</span><br><span class="line"></span><br><span class="line">        with open(name, &#39;rb&#39;) as f:</span><br><span class="line">            pyzMagic &#x3D; f.read(4)</span><br><span class="line">            assert pyzMagic &#x3D;&#x3D; b&#39;PYZ\0&#39; # Sanity Check</span><br><span class="line"></span><br><span class="line">            pycHeader &#x3D; f.read(4) # Python magic value</span><br><span class="line"></span><br><span class="line">            if imp.get_magic() !&#x3D; pycHeader:</span><br><span class="line">                print(&#39;[!] Warning: The script is running in a different python version than the one used to build the executable&#39;)</span><br><span class="line">                print(&#39;    Run this script in Python&#123;0&#125; to prevent extraction errors(if any) during unmarshalling&#39;.format(self.pyver))</span><br><span class="line"></span><br><span class="line">            (tocPosition, ) &#x3D; struct.unpack(&#39;!i&#39;, f.read(4))</span><br><span class="line">            f.seek(tocPosition, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">            try:</span><br><span class="line">                toc &#x3D; marshal.load(f)</span><br><span class="line">            except:</span><br><span class="line">                print(&#39;[!] Unmarshalling FAILED. Cannot extract &#123;0&#125;. Extracting remaining files.&#39;.format(name))</span><br><span class="line">                return</span><br><span class="line"></span><br><span class="line">            print(&#39;[*] Found &#123;0&#125; files in PYZ archive&#39;.format(len(toc)))</span><br><span class="line"></span><br><span class="line">            # From pyinstaller 3.1+ toc is a list of tuples</span><br><span class="line">            if type(toc) &#x3D;&#x3D; list:</span><br><span class="line">                toc &#x3D; dict(toc)</span><br><span class="line"></span><br><span class="line">            for key in toc.keys():</span><br><span class="line">                (ispkg, pos, length) &#x3D; toc[key]</span><br><span class="line">                f.seek(pos, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">                fileName &#x3D; key</span><br><span class="line">                try:</span><br><span class="line">                    # for Python &gt; 3.3 some keys are bytes object some are str object</span><br><span class="line">                    fileName &#x3D; key.decode(&#39;utf-8&#39;)</span><br><span class="line">                except:</span><br><span class="line">                    pass</span><br><span class="line"></span><br><span class="line">                # Make sure destination directory exists, ensuring we keep inside dirName</span><br><span class="line">                destName &#x3D; os.path.join(dirName, fileName.replace(&quot;..&quot;, &quot;__&quot;))</span><br><span class="line">                destDirName &#x3D; os.path.dirname(destName)</span><br><span class="line">                if not os.path.exists(destDirName):</span><br><span class="line">                    os.makedirs(destDirName)</span><br><span class="line"></span><br><span class="line">                try:</span><br><span class="line">                    data &#x3D; f.read(length)</span><br><span class="line">                    data &#x3D; zlib.decompress(data)</span><br><span class="line">                except:</span><br><span class="line">                    print(&#39;[!] Error: Failed to decompress &#123;0&#125;, probably encrypted. Extracting as is.&#39;.format(fileName))</span><br><span class="line">                    open(destName + &#39;.pyc.encrypted&#39;, &#39;wb&#39;).write(data)</span><br><span class="line">                    continue</span><br><span class="line"></span><br><span class="line">                with open(destName + &#39;.pyc&#39;, &#39;wb&#39;) as pycFile:</span><br><span class="line">                    pycFile.write(pycHeader)      # Write pyc magic</span><br><span class="line">                    pycFile.write(b&#39;\0&#39; * 4)      # Write timestamp</span><br><span class="line">                    if self.pyver &gt;&#x3D; 33:</span><br><span class="line">                        pycFile.write(b&#39;\0&#39; * 4)  # Size parameter added in Python 3.3</span><br><span class="line">                    pycFile.write(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    if len(sys.argv) &lt; 2:</span><br><span class="line">        print(&#39;[*] Usage: pyinstxtractor.py &lt;filename&gt;&#39;)</span><br><span class="line"></span><br><span class="line">    else:</span><br><span class="line">        arch &#x3D; PyInstArchive(sys.argv[1])</span><br><span class="line">        if arch.open():</span><br><span class="line">            if arch.checkFile():</span><br><span class="line">                if arch.getCArchiveInfo():</span><br><span class="line">                    arch.parseTOC()</span><br><span class="line">                    arch.extractFiles()</span><br><span class="line">                    arch.close()</span><br><span class="line">                    print(&#39;[*] Successfully extracted pyinstaller archive: &#123;0&#125;&#39;.format(sys.argv[1]))</span><br><span class="line">                    print(&#39;&#39;)</span><br><span class="line">                    print(&#39;You can now use a python decompiler on the pyc files within the extracted directory&#39;)</span><br><span class="line">                    return</span><br><span class="line"></span><br><span class="line">            arch.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python项目练习</title>
    <url>/post/71485f5b.html</url>
    <content><![CDATA[<h1 id="记录一下python常用的源码"><a href="#记录一下python常用的源码" class="headerlink" title="记录一下python常用的源码"></a>记录一下python常用的源码</h1><h2 id="邮件服务"><a href="#邮件服务" class="headerlink" title="邮件服务"></a>邮件服务</h2><blockquote>
<p>用来每次部署博客以后给订阅的人自动发邮件</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 邮件服务 --&gt;</span><br><span class="line"># coding: UTF-8</span><br><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">mailserver &#x3D; &quot;smtp.163.com&quot;  #邮箱服务器地址</span><br><span class="line">username_send &#x3D; &#39;******@163.com,xxx@qq.com&#39;  #邮箱用户名</span><br><span class="line">password &#x3D; &#39;******&#39;   #邮箱密码：需要使用授权码</span><br><span class="line">username_recv &#x3D; &#39;****@qq.com&#39;  #收件人，多个收件人用逗号隔开</span><br><span class="line">mail &#x3D; MIMEText(&#39;xxx&#39;)</span><br><span class="line">mail[&#39;Subject&#39;] &#x3D; &#39;xxx&#39;</span><br><span class="line">mail[&#39;From&#39;] &#x3D; username_send  #发件人</span><br><span class="line">mail[&#39;To&#39;] &#x3D; username_recv  #收件人；[]里的三个是固定写法，别问为什么，我只是代码的搬运工</span><br><span class="line">smtp &#x3D; smtplib.SMTP(mailserver,port&#x3D;25) # 连接邮箱服务器，smtp的端口号是25</span><br><span class="line"># smtp&#x3D;smtplib.SMTP_SSL(&#39;smtp.qq.com&#39;,port&#x3D;465) #QQ邮箱的服务器和端口号</span><br><span class="line">smtp.login(username_send,password)  #登录邮箱</span><br><span class="line">smtp.sendmail(username_send,username_recv,mail.as_string())# 参数分别是发送者，接收者，第三个是把上面的发送邮件的内容变成字符串</span><br><span class="line">smtp.quit() # 发送完毕后退出smtp</span><br><span class="line">print (&#39;success&#39;)</span><br></pre></td></tr></table></figure>
<h2 id="自动更新更新时间"><a href="#自动更新更新时间" class="headerlink" title="自动更新更新时间"></a>自动更新更新时间</h2><blockquote>
<p>每次部署的时候自动将post的<code>update:</code>后面的时间改成文件的修改时间</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 自动更新更新时间和文件名 --&gt;</span><br><span class="line">import re</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">def change_time(path):</span><br><span class="line">        fileList &#x3D; os.listdir(path)</span><br><span class="line">        fb &#x3D; open(&#39;更新内容.txt&#39;,&#39;w&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">        hello &#x3D; &#39;博客更新&#39;</span><br><span class="line">        fb.write(&#39;&#123;:⭐^10&#125;\n&#39;.format(hello))</span><br><span class="line">        for file in fileList:</span><br><span class="line">            allpath &#x3D; path+file</span><br><span class="line">            f &#x3D; open(allpath,&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;)</span><br><span class="line">            txt &#x3D; f.read() #读取内容</span><br><span class="line">            f.close()</span><br><span class="line">            now &#x3D; int(time.time())</span><br><span class="line">            # 匹配，加入\n是为了防止匹配到文章内部代码。</span><br><span class="line">            old_update &#x3D; re.findall(r&quot;(updated: \d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;\s\d&#123;1,2&#125;:\d&#123;1,2&#125;:\d&#123;1,2&#125;\n)&quot;,txt) # 正则匹配要修改的字符串</span><br><span class="line">            file_title &#x3D; re.findall(r&#39;title: (.*?)\n&#39;,txt)</span><br><span class="line">            if old_update &#x3D;&#x3D; []:</span><br><span class="line">                    old_update &#x3D; [&#39;updated:\n&#39;]</span><br><span class="line">            new_update &#x3D; time.strftime(&#39;updated: %Y-%m-%d %H:%M:%S\n&#39;,time.localtime(int(os.path.getmtime(allpath)))) # 获取文件的最后修改时间并赋值</span><br><span class="line">            </span><br><span class="line">            try:</span><br><span class="line">                txt &#x3D; txt.replace(old_update[0],new_update) # 替换</span><br><span class="line">            except:</span><br><span class="line">                print(&#39;&#123;&#125;有误&#39;.format(file))</span><br><span class="line">                continue</span><br><span class="line">            else:</span><br><span class="line">                if now - int(os.path.getmtime(allpath)) &lt; 43200:</span><br><span class="line">                    fi &#x3D; open(allpath,&#39;w&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">                    fi.write(txt) # 写入</span><br><span class="line">                    fi.close() # 关闭</span><br><span class="line">                    os.rename(allpath,path+file_title[0]+os.path.splitext(allpath)[1])</span><br><span class="line">                    update_name &#x3D; &#39;《&#39;+file_title[0]+&#39;》&#39;</span><br><span class="line">                    fb.write(&#39;------------&#123;&#125;\n&#39;.format(update_name))</span><br><span class="line">        fb.write(&#39;\n访问地址：https:&#x2F;&#x2F;blog.asea.fun&#39;)</span><br><span class="line">        fb.close()</span><br><span class="line">change_time(&#39;E:&#x2F;blog&#x2F;source&#x2F;_posts&#x2F;&#39;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="自己写了一个文件名字批处理的软件"><a href="#自己写了一个文件名字批处理的软件" class="headerlink" title="自己写了一个文件名字批处理的软件"></a>自己写了一个文件名字批处理的软件</h2><blockquote>
<p>网上找的都怪怪的，用起来不舒服，就自己写了一个，自由度更高，使用的是tkinter。<br>未来打算更新的几个功能</p>
<ol>
<li>增加前缀后缀 </li>
<li>修改字符的半匹配</li>
<li>支持正则替换</li>
<li>支持修改范围（例如：前十个）<br>等后续有空再写<br>另外附上：<a href="https://aseaee.lanzous.com/ibrq8nbq00f">&gt;&gt;1.1.0版本下载地址&lt;&lt;</a></li>
</ol>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import tkinter as tk</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">from tkinter import scrolledtext</span><br><span class="line">import webbrowser</span><br><span class="line">import tkinter.messagebox</span><br><span class="line"></span><br><span class="line">class MY_GUI():</span><br><span class="line">    #窗口初始化</span><br><span class="line">    def __init__(self,window_name):</span><br><span class="line">        self.window &#x3D; window_name</span><br><span class="line">        self.is_all_change &#x3D; 0</span><br><span class="line">        self.is_all_change &#x3D; tk.IntVar()</span><br><span class="line">        self.can_change &#x3D; 0</span><br><span class="line">        self.theme_CN&#x3D;self.mode_CN&#x3D;&#39;默认&#39;</span><br><span class="line">        # 设置窗口</span><br><span class="line">    #窗口设置</span><br><span class="line">    def set_window(self):</span><br><span class="line">        self.window.title(&#39;文件名称批量修改器_v1.2.0&#39;)</span><br><span class="line">        self.window.geometry(&#39;800x600+500+100&#39;)</span><br><span class="line">        self.window.maxsize(800,600)</span><br><span class="line">        self.window.minsize(800,600)</span><br><span class="line">        self.window.attributes(&#39;-alpha&#39;,1) # 1为不虚化</span><br><span class="line">        # self.to_be_changed_label_name&#x3D;tk.StringVar()</span><br><span class="line">        self.to_change_label_name&#x3D;tk.StringVar()</span><br><span class="line">        self.change_button_name&#x3D;tk.StringVar()</span><br><span class="line">        # 标签</span><br><span class="line">        self.address_label &#x3D; tk.Label(self.window,text&#x3D;&#39;原文件夹的地址&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10),relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.state_label &#x3D; tk.Label(self.window,font&#x3D;(&#39;microsoft yahei&#39;, 9),anchor&#x3D;&#39;w&#39;,relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.to_be_changed_label &#x3D; tk.Label(self.window,text&#x3D;&#39;&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10),relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.to_change_label &#x3D; tk.Label(self.window,text &#x3D; &#39;&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10),relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.change_button &#x3D; tk.Button(self.window,text &#x3D; &#39;&#39;,bg&#x3D;&#39;#CCCCCC&#39;,command&#x3D;self.callChange)</span><br><span class="line">        self.original_fileList_label &#x3D; tk.Label(self.window,text&#x3D;&#39;原始文件目录&#39;,relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.latest_fileList_label &#x3D; tk.Label(self.window,text&#x3D;&#39;修改后文件目录&#39;,relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.log_data_label &#x3D; tk.Label(self.window,text&#x3D;&#39;工  作  日  志&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10,&#39;bold&#39;))</span><br><span class="line">        # 单行输入框</span><br><span class="line">        self.address_Entry &#x3D; tk.Entry(self.window) # 文件夹地址收集框</span><br><span class="line">        self.to_be_changed_Entry &#x3D; tk.Entry(self.window) # 要被改变的字符串</span><br><span class="line">        self.to_change_Entry &#x3D; tk.Entry(self.window) # 要改变成的字符串</span><br><span class="line">        # 按钮</span><br><span class="line">        self.is_all_change_button &#x3D; tk.Checkbutton(self.window,text &#x3D; &quot;是否遍历整个文件夹(默认为否)&quot;,variable&#x3D;self.is_all_change,onvalue&#x3D;1,offvalue&#x3D;0)</span><br><span class="line">        self.look_files_button &#x3D; tk.Button(self.window,text&#x3D;&#39;查看当前目录&#39;,command&#x3D;self.look_files)</span><br><span class="line">        self.clear_button &#x3D; tk.Button(self.window,text&#x3D;&#39;重置&#39;,command&#x3D;self.clearAll)</span><br><span class="line">        self.clearLog_button &#x3D; tk.Button(self.window,text&#x3D;&#39;清除工作日志&#39;,command&#x3D;self.clearLog)</span><br><span class="line">        # 多行文本框</span><br><span class="line">        self.original_fileList_text &#x3D; tk.Text(self.window) # 原始文件目录</span><br><span class="line">        self.latest_fileList_text &#x3D; tk.Text(self.window) # 修改后的文件目录</span><br><span class="line">        self.log_data_text &#x3D; scrolledtext.ScrolledText(self.window,font&#x3D;(&#39;microsoft yahei&#39;, 10),fg&#x3D;&#39;#fff&#39;,bg&#x3D;&#39;#455&#39;) # 工作日志</span><br><span class="line">        # 菜单栏</span><br><span class="line">        self.menubar &#x3D; tk.Menu(self.window)</span><br><span class="line">        self.func_menu &#x3D; tk.Menu(self.menubar, tearoff&#x3D;0)</span><br><span class="line">        self.menubar.add_cascade(label&#x3D;&#39;功能&#39;, menu&#x3D;self.func_menu)</span><br><span class="line">        self.func_menu.add_command(label&#x3D;&#39;查看当前目录&#39;,command&#x3D;self.look_files)</span><br><span class="line">        self.func_menu.add_command(label&#x3D;&#39;执行&#39;,command&#x3D;self.change_name)</span><br><span class="line">        self.func_menu.add_command(label&#x3D;&#39;退出&#39;,command&#x3D;self.window.quit)</span><br><span class="line">        self.func_menu.add_command(label&#x3D;&#39;重置&#39;,command&#x3D;self.clearAll)</span><br><span class="line">        self.change_mode_menu &#x3D; tk.Menu(self.menubar,tearoff&#x3D;0)</span><br><span class="line">        self.menubar.add_cascade(label&#x3D;&#39;模式&#39;,menu&#x3D;self.change_mode_menu)</span><br><span class="line">        self.change_mode_menu.add_command(label&#x3D;&#39;替换模式&#39;,command&#x3D; lambda: self.change_mode(&#39;replace_mode&#39;))</span><br><span class="line">        self.change_mode_menu.add_command(label&#x3D;&#39;加缀模式&#39;,command&#x3D;lambda: self.change_mode(&#39;clues_mode&#39;))</span><br><span class="line">        self.more_menu &#x3D; tk.Menu(self.menubar,tearoff&#x3D;0)</span><br><span class="line">        self.color_menu &#x3D; tk.Menu(self.menubar,tearoff&#x3D;0)</span><br><span class="line">        self.menubar.add_cascade(label&#x3D;&#39;主题&#39;,menu &#x3D; self.color_menu)</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;默认&#39;,command&#x3D;lambda: self.change_color(&#39;默认&#39;,&#39;#eee&#39;,&#39;#eee&#39;,&#39;#eee&#39;,&#39;#000&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;灰蓝&#39;,command&#x3D;lambda: self.change_color(&#39;灰蓝&#39;,&#39;#758a99&#39;,&#39;#50616d&#39;,&#39;#41555d&#39;,&#39;#eee&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;苍水&#39;,command&#x3D;lambda: self.change_color(&#39;苍水&#39;,&#39;#75878a&#39;,&#39;#88ada6&#39;,&#39;#808080&#39;,&#39;#eee&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;茶白&#39;,command&#x3D;lambda: self.change_color(&#39;茶白&#39;,&#39;#f3f9f1&#39;,&#39;#e0eee8&#39;,&#39;#fffbf0&#39;,&#39;#000&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;豆青&#39;,command&#x3D;lambda: self.change_color(&#39;豆青&#39;,&#39;#bce672&#39;,&#39;#96ce54&#39;,&#39;#0eb83a&#39;,&#39;#000&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;黛紫&#39;,command&#x3D;lambda: self.change_color(&#39;豆青&#39;,&#39;#815463&#39;,&#39;#8c4356&#39;,&#39;#8c4356&#39;,&#39;#fff&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;深黑&#39;,command&#x3D;lambda: self.change_color(&#39;深黑&#39;,&#39;#000&#39;,&#39;#000&#39;,&#39;#000&#39;,&#39;#fff&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;砺茶&#39;,command&#x3D;lambda: self.change_color(&#39;砺茶&#39;,&#39;#9f6f55&#39;,&#39;#8c6450&#39;,&#39;#a16d5d&#39;,&#39;#fff&#39;))</span><br><span class="line">        self.menubar.add_cascade(label&#x3D;&#39;更多&#39;, menu&#x3D;self.more_menu)</span><br><span class="line">        self.more_menu.add_command(label&#x3D;&#39;bug反馈&#39;,command&#x3D;self.bug_return)</span><br><span class="line">        self.more_menu.add_command(label&#x3D;&#39;赞赏&#39;,command&#x3D;self.reward)</span><br><span class="line">        self.menubar.add_command(label&#x3D;&#39;关于&#39;,command&#x3D;self.about_window)</span><br><span class="line">        self.menubar.add_command(label&#x3D;&#39;更新&#39;,command&#x3D;self.update_link)</span><br><span class="line">        # 菜单栏的关联</span><br><span class="line">        self.window.config(menu&#x3D;self.menubar)</span><br><span class="line">        # 滚动条</span><br><span class="line">        self.original_fileList_text_scroll &#x3D; tk.Scrollbar()</span><br><span class="line">        self.latest_fileList_text_scroll &#x3D; tk.Scrollbar()</span><br><span class="line">        # 放到窗口的右侧, 填充Y竖直方向       </span><br><span class="line">        # 两个控件关联</span><br><span class="line">        self.original_fileList_text_scroll.config(command&#x3D;self.original_fileList_text.yview)</span><br><span class="line">        self.original_fileList_text.config(yscrollcommand&#x3D;self.original_fileList_text_scroll.set)</span><br><span class="line">        self.latest_fileList_text_scroll.config(command&#x3D;self.latest_fileList_text.yview)</span><br><span class="line">        self.latest_fileList_text.config(yscrollcommand&#x3D;self.latest_fileList_text_scroll.set)</span><br><span class="line">        self.change_mode(&#39;replace_mode&#39;)# 初始化标签名字</span><br><span class="line">        #布局</span><br><span class="line">        label_x &#x3D; 10</span><br><span class="line">        extry_x &#x3D; 140</span><br><span class="line">        fileList_text_x &#x3D; 380</span><br><span class="line">        log_text_width &#x3D; 360-label_x</span><br><span class="line">        self.address_label.place(x&#x3D;label_x,y&#x3D;0,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.to_be_changed_label.place(x&#x3D;label_x,y&#x3D;30,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.to_change_label.place(x&#x3D;label_x,y&#x3D;60,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.address_Entry.place(x&#x3D;extry_x,y&#x3D;0,width&#x3D;220,height&#x3D;30)</span><br><span class="line">        self.to_be_changed_Entry.place(x&#x3D;extry_x,y&#x3D;30,width&#x3D;220,height&#x3D;30)</span><br><span class="line">        self.to_change_Entry.place(x&#x3D;extry_x,y&#x3D;60,width&#x3D;220,height&#x3D;30)</span><br><span class="line">        self.change_button.place(x&#x3D;2*(log_text_width)&#x2F;3+label_x,y&#x3D;120,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.is_all_change_button.place(x&#x3D;100,y&#x3D;90,width&#x3D;280,height&#x3D;30)</span><br><span class="line">        self.log_data_text.place(x&#x3D;label_x,y&#x3D;175,width&#x3D;log_text_width+18,height&#x3D;430-25)</span><br><span class="line">        self.original_fileList_label.place(x&#x3D;fileList_text_x,y&#x3D;0,width&#x3D;100,height&#x3D;30)</span><br><span class="line">        self.original_fileList_text.place(x&#x3D;fileList_text_x,y&#x3D;30,width&#x3D;400,height&#x3D;250)</span><br><span class="line">        self.latest_fileList_label.place(x&#x3D;fileList_text_x,y&#x3D;300,width&#x3D;100,height&#x3D;30)</span><br><span class="line">        self.latest_fileList_text.place(x&#x3D;fileList_text_x,y&#x3D;330,width&#x3D;400,height&#x3D;250)</span><br><span class="line">        self.look_files_button.place(x&#x3D;label_x,y&#x3D;90,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.clear_button.place(x&#x3D;label_x,y&#x3D;120,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.original_fileList_text_scroll.place(x&#x3D;780,y&#x3D;0,width&#x3D;15,height&#x3D;300)</span><br><span class="line">        self.latest_fileList_text_scroll.place(x&#x3D;780,y&#x3D;330,width&#x3D;15,height&#x3D;300)</span><br><span class="line">        self.clearLog_button.place(x&#x3D;log_text_width&#x2F;3+label_x,y&#x3D;120,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.log_data_label.place(x&#x3D;label_x,y&#x3D;150,width&#x3D;log_text_width,height&#x3D;25)</span><br><span class="line">        self.state_label.place(x&#x3D;label_x,y&#x3D;580,width&#x3D;log_text_width,height&#x3D;20)</span><br><span class="line">    def change_color(self,theme_CN,color1,color2,color3,fontcolor):</span><br><span class="line">        self.address_label.config(bg&#x3D;color1,fg&#x3D;fontcolor)</span><br><span class="line">        self.to_be_changed_label.config(bg&#x3D;color2,fg&#x3D;fontcolor)</span><br><span class="line">        self.to_change_label.config(bg&#x3D;color3,fg&#x3D;fontcolor)</span><br><span class="line">        self.original_fileList_label.config(bg &#x3D; color1,fg&#x3D;fontcolor)</span><br><span class="line">        self.latest_fileList_label.config(bg&#x3D;color1,fg&#x3D;fontcolor)</span><br><span class="line">        self.log_data_label.config(bg&#x3D;color2,fg&#x3D;fontcolor)</span><br><span class="line">        self.theme_CN&#x3D;theme_CN</span><br><span class="line">        self.state_label.config(text&#x3D;&#39;当前模式：&#39;+self.mode_CN+&#39;       当前主题：&#39;+self.theme_CN)</span><br><span class="line">    def change_mode(self,mode):</span><br><span class="line">        if mode &#x3D;&#x3D; &#39;replace_mode&#39;:</span><br><span class="line">            self.mode&#x3D;&#39;replace_mode&#39;</span><br><span class="line">            self.to_be_changed_label.config(text &#x3D; &#39;被替换的字符串&#39;)</span><br><span class="line">            self.to_change_label.config(text &#x3D; &#39;来替换的字符串&#39;)</span><br><span class="line">            self.change_button.config(text &#x3D; &#39;替换&#39;)</span><br><span class="line">            self.mode_CN&#x3D;&#39;替换模式&#39;</span><br><span class="line">        else:</span><br><span class="line">            self.mode&#x3D;&#39;clues_mode&#39;</span><br><span class="line">            self.to_be_changed_label.config(text&#x3D;&#39;要添加的前缀&#39;)</span><br><span class="line">            self.to_change_label.config(text &#x3D; &#39;要添加的后缀&#39;)</span><br><span class="line">            self.change_button.config(text &#x3D; &#39;添加&#39;)</span><br><span class="line">            self.mode_CN&#x3D;&#39;加缀模式&#39;</span><br><span class="line">        self.state_label.config(text&#x3D;&#39;当前模式：&#39;+self.mode_CN+&#39;        当前主题：&#39;+self.theme_CN)</span><br><span class="line">    def update_link(self):</span><br><span class="line">        webbrowser.open(&#39;http:&#x2F;&#x2F;asea.ys168.com&#x2F;&#39;,new&#x3D;0)</span><br><span class="line">    def reward(self):</span><br><span class="line">        webbrowser.open(&quot;https:&#x2F;&#x2F;img.imgdb.cn&#x2F;item&#x2F;605ff1f08322e6675cb51721.jpg&quot;, new&#x3D;0)</span><br><span class="line">    def about_window(self):</span><br><span class="line">        tk.messagebox.askyesno(&#39;关于&#39;,&#39;本软件为我闲暇之余开发的小应用，目的是解决一下自己常遇到的批量替换文件名的问题，由于我还是个新手，软件可能还有bug，你可以点击菜单栏的更多——bug反馈来进行反馈，希望本工具能够帮助到你。&#39;)</span><br><span class="line">    def bug_return(self):</span><br><span class="line">        webbrowser.open(&quot;tencent:&#x2F;&#x2F;message&#x2F;?uin&#x3D;569389750&amp;Site&#x3D;admin5.com&amp;Menu&#x3D;yes&quot;, new&#x3D;0)</span><br><span class="line">    #清除工作日志</span><br><span class="line">    def clearLog(self):</span><br><span class="line">        self.log_data_text.delete(1.0,tk.END)</span><br><span class="line">        current_time &#x3D; str(self.get_current_time())</span><br><span class="line">        self.log_data_text.insert(1.0, current_time+&#39; &#39;+&#39;WARNING:已清除\n&#39;)</span><br><span class="line">        # self.log_data_text.mark_set(&#39;insert&#39;, tk.END)</span><br><span class="line">    #遍历文件夹返回生成器</span><br><span class="line">    def findAllFile(self,path): # 获取文件夹下所有文件</span><br><span class="line">        for root, ds, fs in os.walk(path):</span><br><span class="line">            for f in fs:</span><br><span class="line">                fullname &#x3D; [os.path.join(root, f),os.path.join(root),os.path.join(f)]</span><br><span class="line">                yield fullname</span><br><span class="line">    #重置</span><br><span class="line">    def clearAll(self):</span><br><span class="line">        current_time &#x3D; str(self.get_current_time())</span><br><span class="line">        # self.address_Entry.delete(0,tk.END)</span><br><span class="line">        # self.to_be_changed_Entry.delete(0,tk.END)</span><br><span class="line">        # self.to_change_Entry.delete(0,tk.END,)</span><br><span class="line">        # self.log_data_text.delete(1.0,tk.END)</span><br><span class="line">        self.set_window()</span><br><span class="line">        self.log_data_text.insert(1.0,current_time+&#39; &#39;+&#39;WARNING:已重置\n&#39;)</span><br><span class="line">        # self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">        # self.latest_fileList_text.delete(1.0,tk.END)</span><br><span class="line">    #获取当前时间</span><br><span class="line">    def get_current_time(self):</span><br><span class="line">        current_time &#x3D; time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time()))</span><br><span class="line">        return current_time</span><br><span class="line">    #判断是否输入文件夹地址</span><br><span class="line">    def callChange(self):</span><br><span class="line">        if self.address_Entry.get() !&#x3D; &#39;&#39;:</span><br><span class="line">            self.change_name()</span><br><span class="line">    #查看当前文件夹目录</span><br><span class="line">    def look_files(self):</span><br><span class="line">        self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">        address_str &#x3D; self.address_Entry.get()</span><br><span class="line">        try:</span><br><span class="line">            if self.is_all_change.get():</span><br><span class="line">                fileList &#x3D; self.findAllFile(address_str)</span><br><span class="line">                for filelist in fileList:</span><br><span class="line">                    self.original_fileList_text.insert(tk.END,filelist[2]+&#39;\n&#39;)</span><br><span class="line">            else:</span><br><span class="line">                fileList &#x3D; os.listdir(address_str)</span><br><span class="line">                for fileName in fileList:</span><br><span class="line">                    self.original_fileList_text.insert(tk.END,fileName+&#39;\n&#39;)</span><br><span class="line">        except:</span><br><span class="line">            current_time &#x3D; self.get_current_time()</span><br><span class="line">            self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:请确认路径存在\n&#39;)</span><br><span class="line"></span><br><span class="line">    #主函数</span><br><span class="line">    def change_name(self):</span><br><span class="line">        address_str &#x3D; self.address_Entry.get()</span><br><span class="line">        if self.is_all_change.get():#判断是否遍历</span><br><span class="line">            current_time &#x3D; self.get_current_time()</span><br><span class="line">            try:</span><br><span class="line">                fileList &#x3D; self.findAllFile(address_str)</span><br><span class="line">            except:</span><br><span class="line">                self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:请确认路径存在\n&#39;)</span><br><span class="line">            self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            self.latest_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            to_be_changed_str &#x3D; self.to_be_changed_Entry.get()</span><br><span class="line">            to_change_str &#x3D; self.to_change_Entry.get()</span><br><span class="line">            num &#x3D; 0</span><br><span class="line">            for filelist in (fileList):</span><br><span class="line">                fileName &#x3D; filelist[0]#绝对路径</span><br><span class="line">                fileRoot &#x3D; filelist[1]+&#39;\\&#39;</span><br><span class="line">                fileShortName &#x3D; filelist[2]</span><br><span class="line">                self.original_fileList_text.insert(tk.END,fileShortName+&#39;\n&#39;)</span><br><span class="line">                if self.mode &#x3D;&#x3D; &#39;replace_mode&#39;:</span><br><span class="line">                    try:</span><br><span class="line">                        os.rename(fileName, fileRoot + fileShortName.replace(to_be_changed_str,to_change_str)) # 文件重新命名</span><br><span class="line">                        if fileShortName !&#x3D; fileShortName.replace(to_be_changed_str,to_change_str):</span><br><span class="line">                            num +&#x3D; 1</span><br><span class="line">                            self.log_data_text.insert(tk.END, &#39;已将\n&#39;+fileShortName+&#39;\n&#39;+&#39;修改为\n&#39;+fileShortName.replace(to_be_changed_str,to_change_str)+&#39;\n&#39;+&#39;-&#39;*20+&#39;\n&#39;)</span><br><span class="line">                    except:</span><br><span class="line">                        self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:无法同时存在两个相同名字的文件\n&#39;)</span><br><span class="line">                else:</span><br><span class="line">                    try:</span><br><span class="line">                        os.rename(fileName, fileRoot + to_be_changed_str + os.path.splitext(fileShortName)[0] + to_change_str + os.path.splitext(fileShortName)[1]) </span><br><span class="line">                        num +&#x3D; 1</span><br><span class="line">                        self.log_data_text.insert(tk.END, &#39;已将\n&#39;+fileName+&#39;\n&#39;+&#39;修改为\n&#39;+fileRoot + fileShortName.replace(to_be_changed_str,to_change_str)+&#39;\n&#39;+&#39;-&#39;*20+&#39;\n&#39;)</span><br><span class="line">                    except:</span><br><span class="line">                        self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:添加错误，请点击菜单栏反馈bug\n&#39;)</span><br><span class="line">            self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;共修改&#39;+str(num)+&#39;个文件&#39;+&#39;\n&#39;+&#39;&#123;:■^26&#125;&#39;.format(&#39;本次修改结束&#39;)+&#39;\n&#39;)</span><br><span class="line">            fileList &#x3D; self.findAllFile(address_str)</span><br><span class="line">            for filelist in fileList:</span><br><span class="line">                self.latest_fileList_text.insert(tk.END,filelist[2]+&#39;\n&#39;)</span><br><span class="line">            self.log_data_text.see(tk.END) # 自动将光标移到末尾</span><br><span class="line">        else:</span><br><span class="line">            current_time &#x3D; self.get_current_time()</span><br><span class="line">            try:</span><br><span class="line">                fileList &#x3D; os.listdir(address_str)</span><br><span class="line">            except:</span><br><span class="line">                self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:请确认路径存在\n&#39;)</span><br><span class="line">            # os.chdir(address_str)  # 将当前工作目录修改为待修改文件夹的位置</span><br><span class="line">            self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            self.latest_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            to_be_changed_str &#x3D; self.to_be_changed_Entry.get()</span><br><span class="line">            to_change_str &#x3D; self.to_change_Entry.get()</span><br><span class="line">            num &#x3D; 0</span><br><span class="line">            for fileName in fileList:</span><br><span class="line">                self.original_fileList_text.insert(tk.END,fileName+&#39;\n&#39;)</span><br><span class="line">                if self.mode &#x3D;&#x3D; &#39;replace_mode&#39;:</span><br><span class="line">                    try:</span><br><span class="line">                        os.rename(address_str+&#39;\\&#39;+fileName, address_str+&#39;\\&#39;+fileName.replace(to_be_changed_str,to_change_str)) # 3. 文件重新命名 规则根据需求自己定</span><br><span class="line">                        if fileName !&#x3D; fileName.replace(to_be_changed_str,to_change_str):</span><br><span class="line">                            num +&#x3D; 1</span><br><span class="line">                            self.log_data_text.insert(tk.END, &#39;已将\n&#39;+fileName+&#39;\n&#39;+&#39;修改为\n&#39;+fileName.replace(to_be_changed_str,to_change_str)+&#39;\n&#39;+&#39;-&#39;*20+&#39;\n&#39;)</span><br><span class="line">                    except:</span><br><span class="line">                        self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:无法同时存在两个相同名字的文件\n&#39;)</span><br><span class="line">                else:</span><br><span class="line">                    try:</span><br><span class="line">                        os.rename(address_str+&#39;\\&#39;+fileName, address_str+&#39;\\&#39;+to_be_changed_str+os.path.splitext(fileName)[0]+to_change_str+os.path.splitext(fileName)[1]) # 3. 文件重新命名 规则根据需求自己定</span><br><span class="line">                        num +&#x3D; 1</span><br><span class="line">                        self.log_data_text.insert(tk.END, &#39;已将\n&#39;+fileName+&#39;\n&#39;+&#39;修改为\n&#39;+fileName.replace(to_be_changed_str,to_change_str)+&#39;\n&#39;+&#39;-&#39;*20+&#39;\n&#39;)</span><br><span class="line">                    except:</span><br><span class="line">                        self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:添加错误，请点击菜单栏反馈bug\n&#39;)</span><br><span class="line">            fileList &#x3D; os.listdir(address_str)</span><br><span class="line">            self.latest_fileList_text.insert(tk.END,&#39;\n&#39;.join(fileList))</span><br><span class="line">            self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;共修改&#39;+str(num)+&#39;个文件&#39;+&#39;\n&#39;+&#39;&#123;:■^26&#125;&#39;.format(&#39;本次修改结束&#39;)+&#39;\n&#39;)</span><br><span class="line">            self.log_data_text.see(tk.END)</span><br><span class="line"></span><br><span class="line">def gui_start():</span><br><span class="line">    window &#x3D; tk.Tk()</span><br><span class="line">    MY_PORTAL &#x3D; MY_GUI(window)</span><br><span class="line">    MY_PORTAL.set_window()</span><br><span class="line">    window.mainloop()</span><br><span class="line"></span><br><span class="line">gui_start()#启动</span><br></pre></td></tr></table></figure>
<h2 id="pyinstaller反编译代码《pyinstxtractor-py》"><a href="#pyinstaller反编译代码《pyinstxtractor-py》" class="headerlink" title="pyinstaller反编译代码《pyinstxtractor.py》"></a>pyinstaller反编译代码《pyinstxtractor.py》</h2><blockquote>
<p>具体使用可以自行百度<strong>pyinstxtractor.py</strong></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">PyInstaller Extractor v1.9 (Supports pyinstaller 3.3, 3.2, 3.1, 3.0, 2.1, 2.0)</span><br><span class="line">Author : Extreme Coders</span><br><span class="line">E-mail : extremecoders(at)hotmail(dot)com</span><br><span class="line">Web    : https:&#x2F;&#x2F;0xec.blogspot.com</span><br><span class="line">Date   : 29-November-2017</span><br><span class="line">Url    : https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;pyinstallerextractor&#x2F;</span><br><span class="line"></span><br><span class="line">For any suggestions, leave a comment on</span><br><span class="line">https:&#x2F;&#x2F;forum.tuts4you.com&#x2F;topic&#x2F;34455-pyinstaller-extractor&#x2F;</span><br><span class="line"></span><br><span class="line">This script extracts a pyinstaller generated executable file.</span><br><span class="line">Pyinstaller installation is not needed. The script has it all.</span><br><span class="line"></span><br><span class="line">For best results, it is recommended to run this script in the</span><br><span class="line">same version of python as was used to create the executable.</span><br><span class="line">This is just to prevent unmarshalling errors(if any) while</span><br><span class="line">extracting the PYZ archive.</span><br><span class="line"></span><br><span class="line">Usage : Just copy this script to the directory where your exe resides</span><br><span class="line">        and run the script with the exe file name as a parameter</span><br><span class="line"></span><br><span class="line">C:\path\to\exe\&gt;python pyinstxtractor.py &lt;filename&gt;</span><br><span class="line">$ &#x2F;path&#x2F;to&#x2F;exe&#x2F;python pyinstxtractor.py &lt;filename&gt;</span><br><span class="line"></span><br><span class="line">Licensed under GNU General Public License (GPL) v3.</span><br><span class="line">You are free to modify this source.</span><br><span class="line"></span><br><span class="line">CHANGELOG</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">Version 1.1 (Jan 28, 2014)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- First Release</span><br><span class="line">- Supports only pyinstaller 2.0</span><br><span class="line"></span><br><span class="line">Version 1.2 (Sept 12, 2015)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 2.1 and 3.0 dev</span><br><span class="line">- Cleaned up code</span><br><span class="line">- Script is now more verbose</span><br><span class="line">- Executable extracted within a dedicated sub-directory</span><br><span class="line"></span><br><span class="line">(Support for pyinstaller 3.0 dev is experimental)</span><br><span class="line"></span><br><span class="line">Version 1.3 (Dec 12, 2015)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.0 final</span><br><span class="line">- Script is compatible with both python 2.x &amp; 3.x (Thanks to Moritz Kroll @ Avira Operations GmbH &amp; Co. KG)</span><br><span class="line"></span><br><span class="line">Version 1.4 (Jan 19, 2016)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Fixed a bug when writing pyc files &gt;&#x3D; version 3.3 (Thanks to Daniello Alto: https:&#x2F;&#x2F;github.com&#x2F;Djamana)</span><br><span class="line"></span><br><span class="line">Version 1.5 (March 1, 2016)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.1 (Thanks to Berwyn Hoyt for reporting)</span><br><span class="line"></span><br><span class="line">Version 1.6 (Sept 5, 2016)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.2</span><br><span class="line">- Extractor will use a random name while extracting unnamed files.</span><br><span class="line">- For encrypted pyz archives it will dump the contents as is. Previously, the tool would fail.</span><br><span class="line"></span><br><span class="line">Version 1.7 (March 13, 2017)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Made the script compatible with python 2.6 (Thanks to Ross for reporting)</span><br><span class="line"></span><br><span class="line">Version 1.8 (April 28, 2017)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Support for sub-directories in .pyz files (Thanks to Moritz Kroll @ Avira Operations GmbH &amp; Co. KG)</span><br><span class="line"></span><br><span class="line">Version 1.9 (November 29, 2017)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.3</span><br><span class="line">- Display the scripts which are run at entry (Thanks to Michael Gillespie @ malwarehunterteam for the feature request)</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">from __future__ import print_function</span><br><span class="line">import os</span><br><span class="line">import struct</span><br><span class="line">import marshal</span><br><span class="line">import zlib</span><br><span class="line">import sys</span><br><span class="line">import imp</span><br><span class="line">import types</span><br><span class="line">from uuid import uuid4 as uniquename</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class CTOCEntry:</span><br><span class="line">    def __init__(self, position, cmprsdDataSize, uncmprsdDataSize, cmprsFlag, typeCmprsData, name):</span><br><span class="line">        self.position &#x3D; position</span><br><span class="line">        self.cmprsdDataSize &#x3D; cmprsdDataSize</span><br><span class="line">        self.uncmprsdDataSize &#x3D; uncmprsdDataSize</span><br><span class="line">        self.cmprsFlag &#x3D; cmprsFlag</span><br><span class="line">        self.typeCmprsData &#x3D; typeCmprsData</span><br><span class="line">        self.name &#x3D; name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class PyInstArchive:</span><br><span class="line">    PYINST20_COOKIE_SIZE &#x3D; 24           # For pyinstaller 2.0</span><br><span class="line">    PYINST21_COOKIE_SIZE &#x3D; 24 + 64      # For pyinstaller 2.1+</span><br><span class="line">    MAGIC &#x3D; b&#39;MEI\014\013\012\013\016&#39;  # Magic number which identifies pyinstaller</span><br><span class="line"></span><br><span class="line">    def __init__(self, path):</span><br><span class="line">        self.filePath &#x3D; path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def open(self):</span><br><span class="line">        try:</span><br><span class="line">            self.fPtr &#x3D; open(self.filePath, &#39;rb&#39;)</span><br><span class="line">            self.fileSize &#x3D; os.stat(self.filePath).st_size</span><br><span class="line">        except:</span><br><span class="line">            print(&#39;[*] Error: Could not open &#123;0&#125;&#39;.format(self.filePath))</span><br><span class="line">            return False</span><br><span class="line">        return True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def close(self):</span><br><span class="line">        try:</span><br><span class="line">            self.fPtr.close()</span><br><span class="line">        except:</span><br><span class="line">            pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def checkFile(self):</span><br><span class="line">        print(&#39;[*] Processing &#123;0&#125;&#39;.format(self.filePath))</span><br><span class="line">        # Check if it is a 2.0 archive</span><br><span class="line">        self.fPtr.seek(self.fileSize - self.PYINST20_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line">        magicFromFile &#x3D; self.fPtr.read(len(self.MAGIC))</span><br><span class="line"></span><br><span class="line">        if magicFromFile &#x3D;&#x3D; self.MAGIC:</span><br><span class="line">            self.pyinstVer &#x3D; 20     # pyinstaller 2.0</span><br><span class="line">            print(&#39;[*] Pyinstaller version: 2.0&#39;)</span><br><span class="line">            return True</span><br><span class="line"></span><br><span class="line">        # Check for pyinstaller 2.1+ before bailing out</span><br><span class="line">        self.fPtr.seek(self.fileSize - self.PYINST21_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line">        magicFromFile &#x3D; self.fPtr.read(len(self.MAGIC))</span><br><span class="line"></span><br><span class="line">        if magicFromFile &#x3D;&#x3D; self.MAGIC:</span><br><span class="line">            print(&#39;[*] Pyinstaller version: 2.1+&#39;)</span><br><span class="line">            self.pyinstVer &#x3D; 21     # pyinstaller 2.1+</span><br><span class="line">            return True</span><br><span class="line"></span><br><span class="line">        print(&#39;[*] Error : Unsupported pyinstaller version or not a pyinstaller archive&#39;)</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def getCArchiveInfo(self):</span><br><span class="line">        try:</span><br><span class="line">            if self.pyinstVer &#x3D;&#x3D; 20:</span><br><span class="line">                self.fPtr.seek(self.fileSize - self.PYINST20_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">                # Read CArchive cookie</span><br><span class="line">                (magic, lengthofPackage, toc, tocLen, self.pyver) &#x3D; \</span><br><span class="line">                struct.unpack(&#39;!8siiii&#39;, self.fPtr.read(self.PYINST20_COOKIE_SIZE))</span><br><span class="line"></span><br><span class="line">            elif self.pyinstVer &#x3D;&#x3D; 21:</span><br><span class="line">                self.fPtr.seek(self.fileSize - self.PYINST21_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">                # Read CArchive cookie</span><br><span class="line">                (magic, lengthofPackage, toc, tocLen, self.pyver, pylibname) &#x3D; \</span><br><span class="line">                struct.unpack(&#39;!8siiii64s&#39;, self.fPtr.read(self.PYINST21_COOKIE_SIZE))</span><br><span class="line"></span><br><span class="line">        except:</span><br><span class="line">            print(&#39;[*] Error : The file is not a pyinstaller archive&#39;)</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">        print(&#39;[*] Python version: &#123;0&#125;&#39;.format(self.pyver))</span><br><span class="line"></span><br><span class="line">        # Overlay is the data appended at the end of the PE</span><br><span class="line">        self.overlaySize &#x3D; lengthofPackage</span><br><span class="line">        self.overlayPos &#x3D; self.fileSize - self.overlaySize</span><br><span class="line">        self.tableOfContentsPos &#x3D; self.overlayPos + toc</span><br><span class="line">        self.tableOfContentsSize &#x3D; tocLen</span><br><span class="line"></span><br><span class="line">        print(&#39;[*] Length of package: &#123;0&#125; bytes&#39;.format(self.overlaySize))</span><br><span class="line">        return True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def parseTOC(self):</span><br><span class="line">        # Go to the table of contents</span><br><span class="line">        self.fPtr.seek(self.tableOfContentsPos, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">        self.tocList &#x3D; []</span><br><span class="line">        parsedLen &#x3D; 0</span><br><span class="line"></span><br><span class="line">        # Parse table of contents</span><br><span class="line">        while parsedLen &lt; self.tableOfContentsSize:</span><br><span class="line">            (entrySize, ) &#x3D; struct.unpack(&#39;!i&#39;, self.fPtr.read(4))</span><br><span class="line">            nameLen &#x3D; struct.calcsize(&#39;!iiiiBc&#39;)</span><br><span class="line"></span><br><span class="line">            (entryPos, cmprsdDataSize, uncmprsdDataSize, cmprsFlag, typeCmprsData, name) &#x3D; \</span><br><span class="line">            struct.unpack( \</span><br><span class="line">                &#39;!iiiBc&#123;0&#125;s&#39;.format(entrySize - nameLen), \</span><br><span class="line">                self.fPtr.read(entrySize - 4))</span><br><span class="line"></span><br><span class="line">            name &#x3D; name.decode(&#39;utf-8&#39;).rstrip(&#39;\0&#39;)</span><br><span class="line">            if len(name) &#x3D;&#x3D; 0:</span><br><span class="line">                name &#x3D; str(uniquename())</span><br><span class="line">                print(&#39;[!] Warning: Found an unamed file in CArchive. Using random name &#123;0&#125;&#39;.format(name))</span><br><span class="line"></span><br><span class="line">            self.tocList.append( \</span><br><span class="line">                                CTOCEntry(                      \</span><br><span class="line">                                    self.overlayPos + entryPos, \</span><br><span class="line">                                    cmprsdDataSize,             \</span><br><span class="line">                                    uncmprsdDataSize,           \</span><br><span class="line">                                    cmprsFlag,                  \</span><br><span class="line">                                    typeCmprsData,              \</span><br><span class="line">                                    name                        \</span><br><span class="line">                                ))</span><br><span class="line"></span><br><span class="line">            parsedLen +&#x3D; entrySize</span><br><span class="line">        print(&#39;[*] Found &#123;0&#125; files in CArchive&#39;.format(len(self.tocList)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def extractFiles(self):</span><br><span class="line">        print(&#39;[*] Beginning extraction...please standby&#39;)</span><br><span class="line">        extractionDir &#x3D; os.path.join(os.getcwd(), os.path.basename(self.filePath) + &#39;_extracted&#39;)</span><br><span class="line"></span><br><span class="line">        if not os.path.exists(extractionDir):</span><br><span class="line">            os.mkdir(extractionDir)</span><br><span class="line"></span><br><span class="line">        os.chdir(extractionDir)</span><br><span class="line"></span><br><span class="line">        for entry in self.tocList:</span><br><span class="line">            basePath &#x3D; os.path.dirname(entry.name)</span><br><span class="line">            if basePath !&#x3D; &#39;&#39;:</span><br><span class="line">                # Check if path exists, create if not</span><br><span class="line">                if not os.path.exists(basePath):</span><br><span class="line">                    os.makedirs(basePath)</span><br><span class="line"></span><br><span class="line">            self.fPtr.seek(entry.position, os.SEEK_SET)</span><br><span class="line">            data &#x3D; self.fPtr.read(entry.cmprsdDataSize)</span><br><span class="line"></span><br><span class="line">            if entry.cmprsFlag &#x3D;&#x3D; 1:</span><br><span class="line">                data &#x3D; zlib.decompress(data)</span><br><span class="line">                # Malware may tamper with the uncompressed size</span><br><span class="line">                # Comment out the assertion in such a case</span><br><span class="line">                assert len(data) &#x3D;&#x3D; entry.uncmprsdDataSize # Sanity Check</span><br><span class="line"></span><br><span class="line">            with open(entry.name, &#39;wb&#39;) as f:</span><br><span class="line">                f.write(data)</span><br><span class="line"></span><br><span class="line">            if entry.typeCmprsData &#x3D;&#x3D; b&#39;s&#39;:</span><br><span class="line">            	print(&#39;[+] Possible entry point: &#123;0&#125;&#39;.format(entry.name))</span><br><span class="line"></span><br><span class="line">            elif entry.typeCmprsData &#x3D;&#x3D; b&#39;z&#39; or entry.typeCmprsData &#x3D;&#x3D; b&#39;Z&#39;:</span><br><span class="line">                self._extractPyz(entry.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def _extractPyz(self, name):</span><br><span class="line">        dirName &#x3D;  name + &#39;_extracted&#39;</span><br><span class="line">        # Create a directory for the contents of the pyz</span><br><span class="line">        if not os.path.exists(dirName):</span><br><span class="line">            os.mkdir(dirName)</span><br><span class="line"></span><br><span class="line">        with open(name, &#39;rb&#39;) as f:</span><br><span class="line">            pyzMagic &#x3D; f.read(4)</span><br><span class="line">            assert pyzMagic &#x3D;&#x3D; b&#39;PYZ\0&#39; # Sanity Check</span><br><span class="line"></span><br><span class="line">            pycHeader &#x3D; f.read(4) # Python magic value</span><br><span class="line"></span><br><span class="line">            if imp.get_magic() !&#x3D; pycHeader:</span><br><span class="line">                print(&#39;[!] Warning: The script is running in a different python version than the one used to build the executable&#39;)</span><br><span class="line">                print(&#39;    Run this script in Python&#123;0&#125; to prevent extraction errors(if any) during unmarshalling&#39;.format(self.pyver))</span><br><span class="line"></span><br><span class="line">            (tocPosition, ) &#x3D; struct.unpack(&#39;!i&#39;, f.read(4))</span><br><span class="line">            f.seek(tocPosition, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">            try:</span><br><span class="line">                toc &#x3D; marshal.load(f)</span><br><span class="line">            except:</span><br><span class="line">                print(&#39;[!] Unmarshalling FAILED. Cannot extract &#123;0&#125;. Extracting remaining files.&#39;.format(name))</span><br><span class="line">                return</span><br><span class="line"></span><br><span class="line">            print(&#39;[*] Found &#123;0&#125; files in PYZ archive&#39;.format(len(toc)))</span><br><span class="line"></span><br><span class="line">            # From pyinstaller 3.1+ toc is a list of tuples</span><br><span class="line">            if type(toc) &#x3D;&#x3D; list:</span><br><span class="line">                toc &#x3D; dict(toc)</span><br><span class="line"></span><br><span class="line">            for key in toc.keys():</span><br><span class="line">                (ispkg, pos, length) &#x3D; toc[key]</span><br><span class="line">                f.seek(pos, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">                fileName &#x3D; key</span><br><span class="line">                try:</span><br><span class="line">                    # for Python &gt; 3.3 some keys are bytes object some are str object</span><br><span class="line">                    fileName &#x3D; key.decode(&#39;utf-8&#39;)</span><br><span class="line">                except:</span><br><span class="line">                    pass</span><br><span class="line"></span><br><span class="line">                # Make sure destination directory exists, ensuring we keep inside dirName</span><br><span class="line">                destName &#x3D; os.path.join(dirName, fileName.replace(&quot;..&quot;, &quot;__&quot;))</span><br><span class="line">                destDirName &#x3D; os.path.dirname(destName)</span><br><span class="line">                if not os.path.exists(destDirName):</span><br><span class="line">                    os.makedirs(destDirName)</span><br><span class="line"></span><br><span class="line">                try:</span><br><span class="line">                    data &#x3D; f.read(length)</span><br><span class="line">                    data &#x3D; zlib.decompress(data)</span><br><span class="line">                except:</span><br><span class="line">                    print(&#39;[!] Error: Failed to decompress &#123;0&#125;, probably encrypted. Extracting as is.&#39;.format(fileName))</span><br><span class="line">                    open(destName + &#39;.pyc.encrypted&#39;, &#39;wb&#39;).write(data)</span><br><span class="line">                    continue</span><br><span class="line"></span><br><span class="line">                with open(destName + &#39;.pyc&#39;, &#39;wb&#39;) as pycFile:</span><br><span class="line">                    pycFile.write(pycHeader)      # Write pyc magic</span><br><span class="line">                    pycFile.write(b&#39;\0&#39; * 4)      # Write timestamp</span><br><span class="line">                    if self.pyver &gt;&#x3D; 33:</span><br><span class="line">                        pycFile.write(b&#39;\0&#39; * 4)  # Size parameter added in Python 3.3</span><br><span class="line">                    pycFile.write(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    if len(sys.argv) &lt; 2:</span><br><span class="line">        print(&#39;[*] Usage: pyinstxtractor.py &lt;filename&gt;&#39;)</span><br><span class="line"></span><br><span class="line">    else:</span><br><span class="line">        arch &#x3D; PyInstArchive(sys.argv[1])</span><br><span class="line">        if arch.open():</span><br><span class="line">            if arch.checkFile():</span><br><span class="line">                if arch.getCArchiveInfo():</span><br><span class="line">                    arch.parseTOC()</span><br><span class="line">                    arch.extractFiles()</span><br><span class="line">                    arch.close()</span><br><span class="line">                    print(&#39;[*] Successfully extracted pyinstaller archive: &#123;0&#125;&#39;.format(sys.argv[1]))</span><br><span class="line">                    print(&#39;&#39;)</span><br><span class="line">                    print(&#39;You can now use a python decompiler on the pyc files within the extracted directory&#39;)</span><br><span class="line">                    return</span><br><span class="line"></span><br><span class="line">            arch.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="预支项目"><a href="#预支项目" class="headerlink" title="预支项目"></a>预支项目</h1><h2 id="opencv"><a href="#opencv" class="headerlink" title="opencv"></a>opencv</h2><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><h2 id="pdf-word"><a href="#pdf-word" class="headerlink" title="pdf-word"></a>pdf-word</h2><h2 id="mysql-python搭建后端接口"><a href="#mysql-python搭建后端接口" class="headerlink" title="mysql+python搭建后端接口"></a>mysql+python搭建后端接口</h2>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>网站收藏</title>
    <url>/post/16fab331.html</url>
    <content><![CDATA[<h1 id="收集好玩实用的网站"><a href="#收集好玩实用的网站" class="headerlink" title="收集好玩实用的网站"></a>收集好玩实用的网站</h1><div class="tabs" id="websites"><ul class="nav-tabs"><li class="tab active"><a href="#websites-1">取景框看世界</a></li><li class="tab"><a href="#websites-2">-LKs-</a></li><li class="tab"><a href="#websites-3">阿信OL</a></li></ul><div class="tab-content"><div class="tab-pane active" id="websites-1"><blockquote>
<ul>
<li><strong>from: bilibili UP主<a href="https://space.bilibili.com/40427625?spm_id_from=333.788.b_765f7570696e666f.1">取景框看世界</a></strong></li>
</ul>
</blockquote>
<div class="tabs" id="qjk"><ul class="nav-tabs"><li class="tab active"><a href="#qjk-1">第一期</a></li><li class="tab"><a href="#qjk-2">第二期</a></li><li class="tab"><a href="#qjk-3">第三期</a></li><li class="tab"><a href="#qjk-4">第四期</a></li><li class="tab"><a href="#qjk-5">第五期</a></li></ul><div class="tab-content"><div class="tab-pane active" id="qjk-1"><table>
<thead>
<tr>
<th><strong>类别</strong></th>
<th><strong>网站</strong></th>
<th><strong>网址</strong></th>
</tr>
</thead>
<tbody><tr>
<td>图片</td>
<td>pixabay</td>
<td><a href="https://pixabay.com/zh/">https://pixabay.com/zh/</a></td>
</tr>
<tr>
<td>图片</td>
<td>Unsplash</td>
<td><a href="https://unsplash.com/">https://unsplash.com/</a></td>
</tr>
<tr>
<td>图片</td>
<td>Pexels</td>
<td><a href="https://www.pexels.com/zh-cn/">https://www.pexels.com/zh-cn/</a></td>
</tr>
<tr>
<td>图片</td>
<td>Foodiesfeed</td>
<td><a href="https://www.foodiesfeed.com">https://www.foodiesfeed.com</a></td>
</tr>
<tr>
<td>图片</td>
<td>CC零图片网</td>
<td><a href="https://cc0.cn/">https://cc0.cn/</a></td>
</tr>
<tr>
<td>图片</td>
<td>Logo神器</td>
<td><a href="https://www.logosc.cn/so/">https://www.logosc.cn/so/</a></td>
</tr>
<tr>
<td>视频</td>
<td>Videezy</td>
<td><a href="https://www.videezy.com/">https://www.videezy.com/</a></td>
</tr>
<tr>
<td>视频</td>
<td>Videvo</td>
<td><a href="https://www.videvo.net/">https://www.videvo.net/</a></td>
</tr>
<tr>
<td>视频</td>
<td>mixkit</td>
<td><a href="https://mixkit.co/">https://mixkit.co/</a></td>
</tr>
<tr>
<td>视频</td>
<td>distill</td>
<td><a href="https://wedistill.io/">https://wedistill.io/</a></td>
</tr>
<tr>
<td>音频</td>
<td>audionautix</td>
<td><a href="https://audionautix.com/">https://audionautix.com/</a></td>
</tr>
<tr>
<td>音频</td>
<td>Freepd</td>
<td><a href="https://freepd.com/">https://freepd.com/</a></td>
</tr>
<tr>
<td>音频</td>
<td>Freesound</td>
<td><a href="https://freesound.org/">https://freesound.org/</a></td>
</tr>
<tr>
<td>音频</td>
<td>耳聆网</td>
<td><a href="https://www.ear0.com/">https://www.ear0.com/</a></td>
</tr>
<tr>
<td>音频</td>
<td>淘声网</td>
<td><a href="https://www.tosound.com/">https://www.tosound.com/</a></td>
</tr>
<tr>
<td>字体</td>
<td>字由</td>
<td><a href="https://www.hellofont.cn/">https://www.hellofont.cn/</a></td>
</tr>
<tr>
<td>字体</td>
<td>100font</td>
<td><a href="https://www.100font.com/">https://www.100font.com/</a></td>
</tr>
<tr>
<td>图标</td>
<td>iconfont</td>
<td><a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></td>
</tr>
</tbody></table></div><div class="tab-pane" id="qjk-2"><table>
<thead>
<tr>
<th><strong>类别</strong></th>
<th><strong>网站</strong></th>
<th><strong>网址</strong></th>
</tr>
</thead>
<tbody><tr>
<td>图标</td>
<td>iconstore</td>
<td><a href="https://iconstore.co/">https://iconstore.co/</a></td>
</tr>
<tr>
<td>图标</td>
<td>unDraw</td>
<td><a href="https://undraw.co/illustrations">https://undraw.co/illustrations</a></td>
</tr>
<tr>
<td>图标</td>
<td>ICONFINDER</td>
<td><a href="https://www.iconfinder.com/">https://www.iconfinder.com/</a></td>
</tr>
<tr>
<td>图标</td>
<td>ICONS8</td>
<td><a href="https://icons8.com/">https://icons8.com/</a></td>
</tr>
<tr>
<td>矢量图/PSD模板</td>
<td>freepik</td>
<td><a href="https://www.freepik.com/">https://www.freepik.com/</a></td>
</tr>
<tr>
<td>矢量图/PSD模板</td>
<td>free-PSD-templates</td>
<td><a href="https://free-psd-templates.com/">https://free-psd-templates.com/</a></td>
</tr>
<tr>
<td>矢量图/PSD模板</td>
<td>365psd</td>
<td><a href="https://365psd.com/">https://365psd.com/</a></td>
</tr>
<tr>
<td>免抠PNG</td>
<td>pngimage</td>
<td><a href="http://pngimg.com/">http://pngimg.com/</a></td>
</tr>
<tr>
<td>免抠PNG</td>
<td>CLEANPNG</td>
<td><a href="https://www.cleanpng.com/">https://www.cleanpng.com/</a></td>
</tr>
<tr>
<td>壁纸</td>
<td>wallhaven</td>
<td><a href="https://wallhaven.cc/">https://wallhaven.cc/</a></td>
</tr>
<tr>
<td>壁纸</td>
<td>Wallpaper Abyss</td>
<td><a href="https://wall.alphacoders.com/">https://wall.alphacoders.com/</a></td>
</tr>
<tr>
<td>壁纸</td>
<td>极简壁纸</td>
<td><a href="https://bz.zzzmh.cn/">https://bz.zzzmh.cn/</a></td>
</tr>
<tr>
<td>PPT模板</td>
<td>OfficePLUS</td>
<td><a href="http://www.officeplus.cn/Template/Home.shtml">http://www.officeplus.cn/Template/Home.shtml</a></td>
</tr>
<tr>
<td>PPT模板</td>
<td>PPT超级市场</td>
<td><a href="http://ppt.sotary.com/web/wxapp/index.html">http://ppt.sotary.com/web/wxapp/index.html</a></td>
</tr>
<tr>
<td>PPT模板</td>
<td>51PPT模板</td>
<td><a href="http://www.51pptmoban.com/ppt/">http://www.51pptmoban.com/ppt/</a></td>
</tr>
<tr>
<td>PPT模板</td>
<td>PPT汇</td>
<td><a href="https://www.ppthui.com/">https://www.ppthui.com/</a></td>
</tr>
<tr>
<td>PPT模板</td>
<td>优品PPT</td>
<td><a href="http://www.ypppt.com/">http://www.ypppt.com/</a></td>
</tr>
</tbody></table></div><div class="tab-pane" id="qjk-3"><table>
<thead>
<tr>
<th><strong>类别</strong></th>
<th><strong>网站</strong></th>
<th><strong>网址</strong></th>
</tr>
</thead>
<tbody><tr>
<td>使用论文和部分电子书方法</td>
<td>学校图书馆官网</td>
<td>注意查看学校购买的数据库以及校外访问方法</td>
</tr>
<tr>
<td>使用论文和部分电子书方法</td>
<td>各省市图书馆官网</td>
<td>注册各地图书馆账号</td>
</tr>
<tr>
<td>论文</td>
<td>知网</td>
<td>图书馆进入</td>
</tr>
<tr>
<td>论文</td>
<td>Web of Science</td>
<td>图书馆进入</td>
</tr>
<tr>
<td>论文</td>
<td>各图书馆官网直接检索</td>
<td></td>
</tr>
<tr>
<td>论文</td>
<td>SCI-HUB</td>
<td><a href="https://sci-hub.do">https://sci-hub.do</a></td>
</tr>
<tr>
<td>论文</td>
<td>Library Genesis</td>
<td><a href="http://gen.lib.rus.ec/">http://gen.lib.rus.ec/</a></td>
</tr>
<tr>
<td>论文</td>
<td>Z-Library</td>
<td><a href="https://booksc.xyz/">https://booksc.xyz/</a></td>
</tr>
<tr>
<td>电子书（含教材）</td>
<td>电子课本网</td>
<td><a href="http://www.dzkbw.com/">http://www.dzkbw.com/</a></td>
</tr>
<tr>
<td>电子书（含教材）</td>
<td>易学啦</td>
<td><a href="https://www.yixuela.com/">https://www.yixuela.com/</a></td>
</tr>
<tr>
<td>电子书（含教材）</td>
<td>读秀</td>
<td>图书馆进入</td>
</tr>
<tr>
<td>电子书（含教材）</td>
<td>超星</td>
<td>图书馆进入</td>
</tr>
<tr>
<td>电子书（含教材）</td>
<td>书格</td>
<td><a href="https://new.shuge.org/">https://new.shuge.org/</a></td>
</tr>
<tr>
<td>电子书（含教材）</td>
<td>七彩英语</td>
<td><a href="http://www.qcenglish.com/">http://www.qcenglish.com/</a></td>
</tr>
<tr>
<td>电子书（含教材）</td>
<td>古腾堡计划</td>
<td><a href="http://www.gutenberg.org/">http://www.gutenberg.org/</a></td>
</tr>
<tr>
<td>电子书（含教材）</td>
<td>manybooks</td>
<td><a href="https://manybooks.net/">https://manybooks.net/</a></td>
</tr>
<tr>
<td>电子书（含教材）</td>
<td>鸠摩搜索</td>
<td><a href="https://www.jiumodiary.com/">https://www.jiumodiary.com/</a></td>
</tr>
<tr>
<td>电子书（含教材）</td>
<td>Library Genesis</td>
<td><a href="http://gen.lib.rus.ec/">http://gen.lib.rus.ec/</a></td>
</tr>
<tr>
<td>教辅资源</td>
<td>学科网</td>
<td><a href="https://www.zxxk.com/">https://www.zxxk.com/</a></td>
</tr>
<tr>
<td>教辅资源</td>
<td>哔哩哔哩</td>
<td><a href="https://www.bilibili.com/">https://www.bilibili.com/</a></td>
</tr>
<tr>
<td>教辅资源</td>
<td>中国大学慕课</td>
<td><a href="https://www.icourse163.org/">https://www.icourse163.org/</a></td>
</tr>
</tbody></table></div><div class="tab-pane" id="qjk-4"><table>
<thead>
<tr>
<th><strong>类别</strong></th>
<th><strong>网站</strong></th>
<th><strong>网址</strong></th>
</tr>
</thead>
<tbody><tr>
<td>专业咨询报告</td>
<td>贝恩</td>
<td><a href="https://www.bain.cn/news.php?id=15">https://www.bain.cn/news.php?id=15</a></td>
</tr>
<tr>
<td>专业咨询报告</td>
<td>波士顿咨询</td>
<td><a href="https://www.bcg.com/zh-cn/">https://www.bcg.com/zh-cn/</a></td>
</tr>
<tr>
<td>专业咨询报告</td>
<td>麦肯锡</td>
<td><a href="https://www.mckinsey.com/featured-insights">https://www.mckinsey.com/featured-insights</a></td>
</tr>
<tr>
<td>专业咨询报告</td>
<td>罗兰贝格</td>
<td><a href="https://www.rolandberger.com/zh/">https://www.rolandberger.com/zh/</a></td>
</tr>
<tr>
<td>专业咨询报告</td>
<td>埃森哲</td>
<td><a href="https://www.accenture.com/cn-zh">https://www.accenture.com/cn-zh</a></td>
</tr>
<tr>
<td>专业咨询报告</td>
<td>普华永道</td>
<td><a href="https://www.pwccn.com/zh/research-and-insights.html">https://www.pwccn.com/zh/research-and-insights.html</a></td>
</tr>
<tr>
<td>专业咨询报告</td>
<td>德勤</td>
<td><a href="https://www2.deloitte.com/cn/zh.html">https://www2.deloitte.com/cn/zh.html</a></td>
</tr>
<tr>
<td>专业咨询报告</td>
<td>毕马威</td>
<td><a href="https://home.kpmg/cn/zh/home/insights.html">https://home.kpmg/cn/zh/home/insights.html</a></td>
</tr>
<tr>
<td>专业咨询报告</td>
<td>安永</td>
<td><a href="https://www.ey.com/zh_cn">https://www.ey.com/zh_cn</a></td>
</tr>
<tr>
<td>互联网+咨询报告</td>
<td>艾瑞咨询</td>
<td><a href="https://www.iresearch.com.cn/report.shtml">https://www.iresearch.com.cn/report.shtml</a></td>
</tr>
<tr>
<td>互联网+咨询报告</td>
<td>极光大数据</td>
<td><a href="https://www.jiguang.cn/reports">https://www.jiguang.cn/reports</a></td>
</tr>
<tr>
<td>互联网+咨询报告</td>
<td>QuestMobile</td>
<td><a href="https://www.questmobile.com.cn/research/report-new">https://www.questmobile.com.cn/research/report-new</a></td>
</tr>
<tr>
<td>互联网+咨询报告</td>
<td>亿欧智库</td>
<td><a href="https://www.iyiou.com/research">https://www.iyiou.com/research</a></td>
</tr>
<tr>
<td>互联网+咨询报告</td>
<td>TalkingData</td>
<td><a href="http://mi.talkingdata.com/">http://mi.talkingdata.com/</a></td>
</tr>
<tr>
<td>大厂研究报告</td>
<td>阿里研究院</td>
<td><a href="http://www.aliresearch.com/cn/presentation">http://www.aliresearch.com/cn/presentation</a></td>
</tr>
<tr>
<td>大厂研究报告</td>
<td>腾讯研究院</td>
<td><a href="https://tisi.org/yjbg">https://tisi.org/yjbg</a></td>
</tr>
<tr>
<td>大厂研究报告</td>
<td>百度研究院</td>
<td><a href="http://research.baidu.com/Research_Areas?id=55">http://research.baidu.com/Research_Areas?id=55</a></td>
</tr>
<tr>
<td>大厂研究报告</td>
<td>美团研究院</td>
<td><a href="https://mri.meituan.com/research">https://mri.meituan.com/research</a></td>
</tr>
<tr>
<td>大厂研究报告</td>
<td>京东研究院</td>
<td><a href="https://research.jd.com/">https://research.jd.com/</a></td>
</tr>
<tr>
<td>券商行研报告</td>
<td>Wind</td>
<td>需要付费购买，在校生可以咨询学校或者学院，在一些大企业实习或者工作的小伙伴可以咨询企业：是否已经购买，如果购买如何免费使用</td>
</tr>
<tr>
<td>券商行研报告</td>
<td>慧博投研咨询</td>
<td><a href="http://www.hibor.com.cn/">http://www.hibor.com.cn/</a></td>
</tr>
<tr>
<td>券商行研报告</td>
<td>萝卜投研</td>
<td><a href="https://robo.datayes.com/v2/selection">https://robo.datayes.com/v2/selection</a></td>
</tr>
<tr>
<td>报告整合平台</td>
<td>199it</td>
<td><a href="http://www.199it.com/archives/category/report">http://www.199it.com/archives/category/report</a></td>
</tr>
<tr>
<td>报告整合平台</td>
<td>报告查一查</td>
<td><a href="http://report.seedsufe.com/#/index">http://report.seedsufe.com/#/index</a></td>
</tr>
<tr>
<td>报告整合平台</td>
<td>数据局</td>
<td><a href="http://www.shujuju.cn/lecture/browe">http://www.shujuju.cn/lecture/browe</a></td>
</tr>
<tr>
<td>报告整合平台</td>
<td>行行查</td>
<td><a href="https://www.hanghangcha.com/">https://www.hanghangcha.com/</a></td>
</tr>
</tbody></table></div><div class="tab-pane" id="qjk-5"><table>
<thead>
<tr>
<th><strong>类别</strong></th>
<th><strong>网站</strong></th>
<th><strong>网址</strong></th>
</tr>
</thead>
<tbody><tr>
<td>中国全国数据</td>
<td>国务院</td>
<td><a href="http://www.gov.cn/shuju/index.htm">http://www.gov.cn/shuju/index.htm</a></td>
</tr>
<tr>
<td>中国全国数据</td>
<td>国家统计局</td>
<td><a href="https://data.stats.gov.cn/">https://data.stats.gov.cn/</a></td>
</tr>
<tr>
<td>中国地方数据</td>
<td>地方统计局导航</td>
<td><a href="http://www.stats.gov.cn/tjgz/wzlj/dftjwz/">http://www.stats.gov.cn/tjgz/wzlj/dftjwz/</a></td>
</tr>
<tr>
<td>中国地方数据</td>
<td>各地方数据开放平台</td>
<td>检索网站：某省份/城市+数据开放</td>
</tr>
<tr>
<td>行业数据</td>
<td>行业协会</td>
<td>检索网站：某行业+协会</td>
</tr>
<tr>
<td>行业数据</td>
<td>咨询报告、研究报告</td>
<td>第4期全部内容</td>
</tr>
<tr>
<td>其他国家数据</td>
<td>其他国家统计局导航</td>
<td><a href="http://www.stats.gov.cn/tjgz/wzlj/gwtjw/201311/t20131104_452221.html">http://www.stats.gov.cn/tjgz/wzlj/gwtjw/201311/t20131104_452221.html</a></td>
</tr>
<tr>
<td>其他国家数据</td>
<td>Open Data Inception</td>
<td><a href="https://opendatainception.io/">https://opendatainception.io/</a></td>
</tr>
<tr>
<td>全球数据</td>
<td>各国际组织导航</td>
<td><a href="http://www.stats.gov.cn/tjgz/wzlj/gjzzwz/201311/t20131101_451662.html">http://www.stats.gov.cn/tjgz/wzlj/gjzzwz/201311/t20131101_451662.html</a></td>
</tr>
<tr>
<td>数据整合平台</td>
<td>知网（年鉴）</td>
<td>图书馆进入</td>
</tr>
<tr>
<td>数据整合平台</td>
<td>萝卜投研</td>
<td><a href="https://robo.datayes.com/v2/landing/indicator_library">https://robo.datayes.com/v2/landing/indicator_library</a></td>
</tr>
<tr>
<td>其他特色数据</td>
<td>七麦数据</td>
<td><a href="https://www.qimai.cn/">https://www.qimai.cn/</a></td>
</tr>
<tr>
<td>其他特色数据</td>
<td>蝉大师</td>
<td><a href="https://www.chandashi.com/">https://www.chandashi.com/</a></td>
</tr>
<tr>
<td>其他特色数据</td>
<td>APP ANNIE</td>
<td><a href="https://www.appannie.com/cn/">https://www.appannie.com/cn/</a></td>
</tr>
<tr>
<td>其他特色数据</td>
<td>房天下</td>
<td><a href="https://fdc.fang.com/">https://fdc.fang.com/</a></td>
</tr>
<tr>
<td>其他特色数据</td>
<td>高德地图指数</td>
<td><a href="https://report.amap.com/diagnosis/index.do">https://report.amap.com/diagnosis/index.do</a></td>
</tr>
<tr>
<td>其他特色数据</td>
<td>艺恩</td>
<td><a href="https://www.endata.com.cn/BoxOffice/index.html">https://www.endata.com.cn/BoxOffice/index.html</a></td>
</tr>
<tr>
<td>其他特色数据</td>
<td>猫眼专业版</td>
<td><a href="http://piaofang.maoyan.com/dashboard">http://piaofang.maoyan.com/dashboard</a></td>
</tr>
<tr>
<td>微观数据</td>
<td>咨询报告、研究报告</td>
<td>第4期全部内容</td>
</tr>
</tbody></table></div></div></div>
<!-- 表格样式 -->
<style>
table th:first-of-type {
    width: 30%;
}
table th:nth-of-type(2) {
    width: 30%;
}
table th:nth-of-type(3) {
    width: 30%;
}
table th:nth-of-type(4) {
    width: 10%;
}

<p></style><p></p></div><div class="tab-pane" id="websites-2"><blockquote>
<ul>
<li><strong>from: bilibili UP主<a href="https://space.bilibili.com/125526?from=search&seid=769593231768718900">-LKs-</a></strong></li>
</ul>
</blockquote>
<div class="tabs" id="lks"><ul class="nav-tabs"><li class="tab active"><a href="#lks-1">2016</a></li><li class="tab"><a href="#lks-2">2017</a></li><li class="tab"><a href="#lks-3">2018</a></li><li class="tab"><a href="#lks-4">2019</a></li><li class="tab"><a href="#lks-5">2020</a></li><li class="tab"><a href="#lks-6">2020.2</a></li><li class="tab"><a href="#lks-7">2021</a></li></ul><div class="tab-content"><div class="tab-pane active" id="lks-1"><table>
<thead>
<tr>
<th><strong>类型</strong></th>
<th><strong>网址</strong></th>
<th><strong>网址2</strong></th>
<th><strong>网址3</strong></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td><a href="http://nico-nico-ni.com/">http://nico-nico-ni.com/</a></td>
<td><a href="http://internet-map.net/">http://internet-map.net/</a></td>
<td></td>
</tr>
<tr>
<td>钢琴</td>
<td><a href="http://touchpianist.com/">http://touchpianist.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>搜图</td>
<td><a href="http://iqdb.org/">http://iqdb.org/</a></td>
<td><a href="http://saucenao.com/index.php">http://saucenao.com/index.php</a></td>
<td><a href="http://safebooru.org/">http://safebooru.org/</a></td>
</tr>
<tr>
<td>环境</td>
<td><a href="http://www.rainymood.com/">http://www.rainymood.com/</a></td>
<td><a href="http://www.ambient-mixer.com/">http://www.ambient-mixer.com/</a></td>
<td></td>
</tr>
<tr>
<td>不明觉厉</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://mrdoob.com/#/157/spin_painter">http://mrdoob.com/#/157/spin_painter</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.ro.me/">http://www.ro.me/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://middle-earth.thehobbit.com/map">http://middle-earth.thehobbit.com/map</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://fff.cmiscm.com/#!/section/planttrees">http://fff.cmiscm.com/#!/section/planttrees</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://weavesilk.com/">http://weavesilk.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>噫</td>
<td><a href="http://www.theuselessweb.com/">http://www.theuselessweb.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>风景</td>
<td><a href="http://www.airpano.com/?n=10&amp;sort_by=&amp;page=1">http://www.airpano.com/?n=10&amp;sort_by=&amp;page=1</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>制作</td>
<td><a href="http://threejs.org/http://www.instructables.com/">http://threejs.org/http://www.instructables.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>miku</td>
<td><a href="http://johnsu.deviantart.com/art/Halfne-Miku-Studio-396850314">http://johnsu.deviantart.com/art/Halfne-Miku-Studio-396850314</a></td>
<td><a href="https://www.youtube.com/watch?v=1szQ7YDGdXw&amp;feature=youtu.be">https://www.youtube.com/watch?v=1szQ7YDGdXw&amp;feature=youtu.be</a></td>
<td></td>
</tr>
<tr>
<td>音游</td>
<td><a href="http://www.beatstage.com/">http://www.beatstage.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.m2ustudio.com/index.html#album-tracks">http://www.m2ustudio.com/index.html#album-tracks</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>水效果</td>
<td><a href="http://watereffect.net/index.php">http://watereffect.net/index.php</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>猜地点</td>
<td><a href="https://geoguessr.com/">https://geoguessr.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2ch</td>
<td><a href="http://kanquwen.com/">http://kanquwen.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>音乐素材</td>
<td><a href="http://www.hmix.net/music_gallery/music_top.htm">http://www.hmix.net/music_gallery/music_top.htm</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>画</td>
<td><a href="http://en.gallerix.ru/">http://en.gallerix.ru/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>制服</td>
<td><a href="http://www.seihuku-zukan.com/index.htm">http://www.seihuku-zukan.com/index.htm</a></td>
<td><a href="http://uniform.wingzero.tw/">http://uniform.wingzero.tw/</a></td>
<td></td>
</tr>
<tr>
<td>学英语</td>
<td><a href="http://www.wuxiaworld.com/cdindex-html/">http://www.wuxiaworld.com/cdindex-html/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.baka-tsuki.org/project/index.php?title=Main_Page">http://www.baka-tsuki.org/project/index.php?title=Main_Page</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>剁手</td>
<td><a href="https://fancy.com/">https://fancy.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.farfetch.com/cn/shopping/men/items.aspx?ffref=hp_gender">http://www.farfetch.com/cn/shopping/men/items.aspx?ffref=hp_gender</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://www.chiphell.com/">http://www.chiphell.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>电音</td>
<td><a href="http://techno.org/electronic-music-guide/">http://techno.org/electronic-music-guide/</a></td>
<td><a href="https://the.wubmachine.com/">https://the.wubmachine.com/</a></td>
<td></td>
</tr>
<tr>
<td>捏人</td>
<td><a href="http://www.dreamself.me/clothes.php?action=view&amp;id=0&amp;c=1">http://www.dreamself.me/clothes.php?action=view&amp;id=0&amp;c=1</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>gal</td>
<td><a href="http://polka-dot.co/lzbx.php">http://polka-dot.co/lzbx.php</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>搬砖</td>
<td><a href="http://www.fotojet.com/">http://www.fotojet.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="https://habitica.com/static/front">https://habitica.com/static/front</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>聊天</td>
<td><a href="http://drrr.com/lounge">http://drrr.com/lounge</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>图站</td>
<td><a href="https://anime-pictures.net/">https://anime-pictures.net/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>与佛论禅</td>
<td><a href="http://www.ptxz.com/fo/">http://www.ptxz.com/fo/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>音乐</td>
<td><a href="http://haru.ocv.me/">http://haru.ocv.me/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>学习</td>
<td><a href="http://www.wolframalpha.com/">http://www.wolframalpha.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>不明觉厉</td>
<td><a href="https://edialogue.org/index/zh-CN">https://edialogue.org/index/zh-CN</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>不明觉厉</td>
<td><a href="https://dribbble.com/wagerfield">https://dribbble.com/wagerfield</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>手机</td>
<td><a href="http://mowned.com/">http://mowned.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>GPS</td>
<td><a href="http://www.flashearth.com/">http://www.flashearth.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>北方</td>
<td><a href="http://wiki.joyme.com/jc/%E5%8C%97%E6%96%B9%E9%85%B1%E8%A1%A8%E6%83%85">http://wiki.joyme.com/jc/%E5%8C%97%E6%96%B9%E9%85%B1%E8%A1%A8%E6%83%85</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>剁手</td>
<td><a href="http://www.smzdm.com/">http://www.smzdm.com/</a></td>
<td><a href="http://www.iliangcang.com/i/home/">http://www.iliangcang.com/i/home/</a></td>
<td></td>
</tr>
<tr>
<td>菜板狂魔</td>
<td><a href="http://mtmwood.com/en">http://mtmwood.com/en</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://youquhome.com/page/3/">http://youquhome.com/page/3/</a></td>
<td></td>
<td></td>
</tr>
</tbody></table></div><div class="tab-pane" id="lks-2"><table>
<thead>
<tr>
<th><strong>大类</strong></th>
<th><strong>类型</strong></th>
<th><strong>网址</strong></th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td>翻墙</td>
<td><a href="https://sscat.cn/?referer=%2F">https://sscat.cn/?referer=%2F</a></td>
</tr>
<tr>
<td>开场</td>
<td>世界数据统计</td>
<td><a href="http://www.everysecond.io/">http://www.everysecond.io/</a></td>
</tr>
<tr>
<td></td>
<td>五花肉</td>
<td><a href="https://eitheryoulikebaconoryourewrong.com/">https://eitheryoulikebaconoryourewrong.com/</a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>实用系</td>
<td>免费游戏音效</td>
<td><a href="http://www.sonniss.com/gameaudiogdc2017/">http://www.sonniss.com/gameaudiogdc2017/</a></td>
</tr>
<tr>
<td></td>
<td>下载视频</td>
<td>youtube1s</td>
</tr>
<tr>
<td></td>
<td>adobe全系</td>
<td><a href="http://adobe.v404.cn/adobe/">http://adobe.v404.cn/adobe/</a></td>
</tr>
<tr>
<td></td>
<td>艺术字</td>
<td><a href="http://www.akuziti.com/yw/">http://www.akuziti.com/yw/</a></td>
</tr>
<tr>
<td></td>
<td>2倍老婆</td>
<td><a href="http://waifu2x.udp.jp/">http://waifu2x.udp.jp/</a></td>
</tr>
<tr>
<td></td>
<td>截图搜新番</td>
<td><a href="https://whatanime.ga/#">https://whatanime.ga/#</a></td>
</tr>
<tr>
<td></td>
<td>自动上色</td>
<td><a href="http://paintschainer.preferred.tech/index_zh.html">http://paintschainer.preferred.tech/index_zh.html</a></td>
</tr>
<tr>
<td></td>
<td>自动生成女朋友</td>
<td><a href="https://hiroshiba.github.io/girl_friend_factory/index.html">https://hiroshiba.github.io/girl_friend_factory/index.html</a></td>
</tr>
<tr>
<td></td>
<td>设计</td>
<td><a href="https://www.chuangkit.com/dc.html">https://www.chuangkit.com/dc.html</a></td>
</tr>
<tr>
<td></td>
<td>简笔画</td>
<td><a href="https://aiexperiments.withgoogle.com/autodraw">https://aiexperiments.withgoogle.com/autodraw</a></td>
</tr>
<tr>
<td></td>
<td>wuxiaworld</td>
<td><a href="http://www.wuxiaworld.com/">http://www.wuxiaworld.com/</a></td>
</tr>
<tr>
<td></td>
<td>gif</td>
<td><a href="https://giphy.com/">https://giphy.com/</a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>逼格</td>
<td>秘密</td>
<td><a href="http://soulapartment.net/bin/index.php">http://soulapartment.net/bin/index.php</a></td>
</tr>
<tr>
<td></td>
<td>独立音乐</td>
<td><a href="http://www.luoo.net/essays/">http://www.luoo.net/essays/</a></td>
</tr>
<tr>
<td></td>
<td>做音乐</td>
<td><a href="http://www.madeon.fr/adventuremachine/?t=1,10,26,35">http://www.madeon.fr/adventuremachine/?t=1,10,26,35</a></td>
</tr>
<tr>
<td></td>
<td>背景音合成器</td>
<td><a href="http://asoftmurmur.com/">http://asoftmurmur.com/</a></td>
</tr>
<tr>
<td></td>
<td>摄像头+梦境</td>
<td><a href="http://anasomnia.com/">http://anasomnia.com/</a></td>
</tr>
<tr>
<td></td>
<td>illegal</td>
<td><a href="http://isnowillegal.com/?plus%201s">http://isnowillegal.com/?plus%201s</a></td>
</tr>
<tr>
<td></td>
<td>全球电台</td>
<td><a href="http://radio.garden/live/tokyo/j-idols-project-radio/">http://radio.garden/live/tokyo/j-idols-project-radio/</a></td>
</tr>
<tr>
<td></td>
<td></td>
<td><a href="http://www.ostagram.ru/lenta?locale=en">http://www.ostagram.ru/lenta?locale=en</a></td>
</tr>
<tr>
<td></td>
<td>世界飞机</td>
<td><a href="https://www.flightradar24.com/PRBGT/d0da2bf">https://www.flightradar24.com/PRBGT/d0da2bf</a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>png</td>
<td><a href="http://www.pngall.com/thug-life-png">http://www.pngall.com/thug-life-png</a></td>
</tr>
<tr>
<td></td>
<td>在线生成白浊液</td>
<td><a href="http://mygamestudio.x.fc2.com/bukkake/">http://mygamestudio.x.fc2.com/bukkake/</a></td>
</tr>
<tr>
<td></td>
<td>空当接龙</td>
<td><a href="http://mrdoob.com/lab/javascript/effects/solitaire/?url_type=39&amp;object_type=webpage&amp;pos=1&amp;url_type=39&amp;object_type=webpage&amp;pos=1">http://mrdoob.com/lab/javascript/effects/solitaire/?url_type=39&amp;object_type=webpage&amp;pos=1&amp;url_type=39&amp;object_type=webpage&amp;pos=1</a></td>
</tr>
</tbody></table></div><div class="tab-pane" id="lks-3"><table>
<thead>
<tr>
<th><strong>类型</strong></th>
<th><strong>网址</strong></th>
<th><strong>网址2</strong></th>
<th><strong>网址3</strong></th>
</tr>
</thead>
<tbody><tr>
<td>重力</td>
<td><a href="https://codepen.io/akm2/full/rHIsa">https://codepen.io/akm2/full/rHIsa</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>反向</td>
<td><a href="http://www.ilidilid.com/">http://www.ilidilid.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>成为批发商</td>
<td><a href="https://www.1688.com/">https://www.1688.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>龋齿一号</td>
<td><a href="http://www.gfxcamp.com/">http://www.gfxcamp.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>摄影老法师必读</td>
<td><a href="https://www.dxomark.com/">https://www.dxomark.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>表情包gif</td>
<td><a href="https://sorry.xuty.tk/sorry/">https://sorry.xuty.tk/sorry/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>学说话</td>
<td><a href="https://zh.forvo.com/user/hikari1/pronounced-words/page-2/">https://zh.forvo.com/user/hikari1/pronounced-words/page-2/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>做网站</td>
<td><a href="https://www.wix.com/">https://www.wix.com/</a></td>
<td>lkssr.info</td>
<td></td>
</tr>
<tr>
<td>在线效果</td>
<td><a href="https://photomosh.com/">https://photomosh.com/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>学英语</td>
<td><a href="https://nexus.leagueoflegends.com/en-us/">https://nexus.leagueoflegends.com/en-us/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>音游</td>
<td><a href="http://ddrkirby.com/games/melody-muncher/melody-muncher.html">http://ddrkirby.com/games/melody-muncher/melody-muncher.html</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>深网</td>
<td><a href="https://bbs.saraba1st.com/2b/thread-1527405-1-1.html">https://bbs.saraba1st.com/2b/thread-1527405-1-1.html</a></td>
<td>deep/dark web</td>
<td><a href="https://freenetproject.org/">https://freenetproject.org/</a></td>
</tr>
<tr>
<td>f**king eat</td>
<td><a href="https://wtfsigfd.com/#location">https://wtfsigfd.com/#location</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>真实大小</td>
<td><a href="https://thetruesize.com">https://thetruesize.com</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>remember</td>
<td><a href="http://i-remember.fr/en/">http://i-remember.fr/en/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>游戏</td>
<td><a href="https://pos.biborg.com/fr/">https://pos.biborg.com/fr/</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>拍卖</td>
<td><a href="https://sf.taobao.com/?spm=a213w.7398504.sfhead2014.2.9vuB5l&amp;current=index">https://sf.taobao.com/?spm=a213w.7398504.sfhead2014.2.9vuB5l&amp;current=index</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td><a href="http://auction.jd.com/haiguan.html">http://auction.jd.com/haiguan.html</a></td>
<td></td>
<td></td>
</tr>
</tbody></table></div><div class="tab-pane" id="lks-4"><table>
<thead>
<tr>
<th><strong>大类</strong></th>
<th><strong>类型</strong></th>
<th><strong>网址</strong></th>
</tr>
</thead>
<tbody><tr>
<td>实用</td>
<td>全能下视频</td>
<td><a href="https://www.urlgot.com/">https://www.urlgot.com/</a></td>
</tr>
<tr>
<td></td>
<td>封面下载</td>
<td><a href="https://cover.olook.me/">https://cover.olook.me/</a></td>
</tr>
<tr>
<td></td>
<td>小工具集合</td>
<td><a href="https://tools.imiku.me/">https://tools.imiku.me/</a></td>
</tr>
<tr>
<td></td>
<td>医学微视</td>
<td><a href="https://www.mvyxws.com/">https://www.mvyxws.com/</a></td>
</tr>
<tr>
<td></td>
<td>仿知网</td>
<td><a href="https://www.cn-ki.net/">https://www.cn-ki.net/</a></td>
</tr>
<tr>
<td></td>
<td>自动加字幕</td>
<td><a href="https://2zimu.com/#/">https://2zimu.com/#/</a></td>
</tr>
<tr>
<td></td>
<td>N卡深度学习</td>
<td><a href="https://www.nvidia.com/en-us/research/ai-playground/?fbclid=IwAR2QEjuH4aCYP3SycnKwa_LO36rfmDhulB4WCeY1plGCfofwIU-qf1anBTY">https://www.nvidia.com/en-us/research/ai-playground/?fbclid=IwAR2QEjuH4aCYP3SycnKwa_LO36rfmDhulB4WCeY1plGCfofwIU-qf1anBTY</a></td>
</tr>
<tr>
<td></td>
<td>渐变图</td>
<td><a href="https://www.ls.graphics/meshgradients">https://www.ls.graphics/meshgradients</a></td>
</tr>
<tr>
<td></td>
<td>时差</td>
<td><a href="https://everytimezone.com/">https://everytimezone.com/</a></td>
</tr>
<tr>
<td></td>
<td>双色</td>
<td><a href="https://duotone.shapefactory.co/?f=f56468&amp;t=27184f&amp;q=">https://duotone.shapefactory.co/?f=f56468&amp;t=27184f&amp;q=</a>_</td>
</tr>
<tr>
<td></td>
<td>图表</td>
<td><a href="https://chartify.io/">https://chartify.io/</a></td>
</tr>
<tr>
<td></td>
<td>亚塞</td>
<td><a href="https://wangyasai.github.io/">https://wangyasai.github.io/</a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>音乐</td>
<td>listen 1</td>
<td><a href="http://listen1.github.io/listen1/">http://listen1.github.io/listen1/</a></td>
</tr>
<tr>
<td></td>
<td>音乐</td>
<td><a href="https://www.youtube.com/channel/UCht8qITGkBvXKsR1Byln-wA/videos">https://www.youtube.com/channel/UCht8qITGkBvXKsR1Byln-wA/videos</a></td>
</tr>
<tr>
<td></td>
<td>电音风格</td>
<td><a href="http://music.ishkur.com/">http://music.ishkur.com/</a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>信息</td>
<td>创意</td>
<td><a href="https://creativemass.cn/#/">https://creativemass.cn/#/</a></td>
</tr>
<tr>
<td></td>
<td>up主排名</td>
<td><a href="https://leptc.github.io/bili/">https://leptc.github.io/bili/</a></td>
</tr>
<tr>
<td></td>
<td>yuzhua</td>
<td><a href="https://mj.yuzhua.com/search/3.html">https://mj.yuzhua.com/search/3.html</a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>游戏</td>
<td>日麻</td>
<td><a href="https://majsoul.union-game.com/0/">https://majsoul.union-game.com/0/</a></td>
</tr>
<tr>
<td></td>
<td>马</td>
<td><a href="https://cavalierchallenge.com/">https://cavalierchallenge.com/</a></td>
</tr>
<tr>
<td></td>
<td>？</td>
<td><a href="https://resn.co.nz/#">https://resn.co.nz/#</a></td>
</tr>
<tr>
<td></td>
<td>？</td>
<td><a href="http://www.brakebillsu.com/">http://www.brakebillsu.com/</a></td>
</tr>
<tr>
<td></td>
<td>Grammarly</td>
<td><a href="https://app.grammarly.com/">https://app.grammarly.com/</a></td>
</tr>
<tr>
<td></td>
<td>机酒</td>
<td><a href="https://www.tianxun.com/">https://www.tianxun.com/</a></td>
</tr>
</tbody></table></div><div class="tab-pane" id="lks-5"><table>
<thead>
<tr>
<th><strong>类型</strong></th>
<th><strong>网址</strong></th>
</tr>
</thead>
<tbody><tr>
<td>大像素</td>
<td><a href="http://www.bigpixel.cn/index.html">http://www.bigpixel.cn/index.html</a></td>
</tr>
<tr>
<td>PPT</td>
<td><a href="https://slidesgo.com/theme/isometric-proposal">https://slidesgo.com/theme/isometric-proposal</a> <br><a href="https://24slides.com/templates/featured">https://24slides.com/templates/featured</a> <br><a href="https://www.free-powerpoint-templates-design.com/free-powerpoint-templates-design/">https://www.free-powerpoint-templates-design.com/free-powerpoint-templates-design/</a></td>
</tr>
<tr>
<td>云</td>
<td><a href="https://www.ianfisherart.com/">https://www.ianfisherart.com/</a></td>
</tr>
<tr>
<td>展会</td>
<td><a href="http://www.eshow365.com/">http://www.eshow365.com/</a></td>
</tr>
<tr>
<td>全历史</td>
<td><a href="https://www.allhistory.com/">https://www.allhistory.com/</a></td>
</tr>
<tr>
<td>诡秘之主</td>
<td><a href="https://www.zcool.com.cn/work/ZNDI0NzUzNzY=.html">https://www.zcool.com.cn/work/ZNDI0NzUzNzY=.html</a></td>
</tr>
<tr>
<td>背景素材</td>
<td><a href="http://bg-patterns.com/">http://bg-patterns.com/</a></td>
</tr>
<tr>
<td>做音乐</td>
<td><a href="https://learningmusic.ableton.com/">https://learningmusic.ableton.com/</a></td>
</tr>
<tr>
<td>新媒体导航</td>
<td><a href="https://www.kaolamedia.com/">https://www.kaolamedia.com/</a></td>
</tr>
<tr>
<td>AI捏人</td>
<td><a href="https://artbreeder.com/">https://artbreeder.com/</a></td>
</tr>
<tr>
<td>数据</td>
<td><a href="https://ncov.dxy.cn/ncovh5/view/pneumonia">https://ncov.dxy.cn/ncovh5/view/pneumonia</a></td>
</tr>
<tr>
<td>人类测试</td>
<td><a href="https://humanbenchmark.com/">https://humanbenchmark.com/</a></td>
</tr>
<tr>
<td>音乐分轨</td>
<td><a href="https://melody.ml/">https://melody.ml/</a></td>
</tr>
<tr>
<td>物流</td>
<td><a href="https://logisticsartproject.com/">https://logisticsartproject.com/</a></td>
</tr>
<tr>
<td>慕课</td>
<td><a href="https://www.icourse163.org/">https://www.icourse163.org/</a></td>
</tr>
<tr>
<td>反人类UI</td>
<td><a href="https://userinyerface.com/game.html">https://userinyerface.com/game.html</a></td>
</tr>
<tr>
<td>yes/no</td>
<td><a href="https://yesno.wtf/">https://yesno.wtf/</a></td>
</tr>
<tr>
<td>老照片上色</td>
<td><a href="https://colourise.sg/">https://colourise.sg/</a></td>
</tr>
<tr>
<td>地球时间</td>
<td><a href="http://timelineofearth.com/">http://timelineofearth.com/</a></td>
</tr>
<tr>
<td>猫</td>
<td><a href="https://bongo.cat/">https://bongo.cat/</a></td>
</tr>
<tr>
<td>大佬</td>
<td><a href="https://neave.com/">https://neave.com/</a></td>
</tr>
<tr>
<td>太鼓达人</td>
<td><a href="https://taiko.bui.pm/">https://taiko.bui.pm/</a></td>
</tr>
<tr>
<td>emm</td>
<td><a href="http://www.shushubuyue.net/#">http://www.shushubuyue.net/#</a></td>
</tr>
<tr>
<td>全网热门</td>
<td><a href="https://tophub.today/">https://tophub.today/</a></td>
</tr>
<tr>
<td>数据表</td>
<td><a href="https://www.visualcapitalist.com/">https://www.visualcapitalist.com/</a></td>
</tr>
<tr>
<td>医疗</td>
<td><a href="https://www.msdmanuals.com/zh#mission">https://www.msdmanuals.com/zh#mission</a></td>
</tr>
<tr>
<td>临时验证码</td>
<td><a href="https://www.materialtools.com/?page=1">https://www.materialtools.com/?page=1</a> <br><a href="https://temp-mail.org/zh/">https://temp-mail.org/zh/</a></td>
</tr>
<tr>
<td>词云</td>
<td><a href="https://www.weiciyun.com/">https://www.weiciyun.com/</a></td>
</tr>
<tr>
<td>探月</td>
<td><a href="http://moon.bao.ac.cn/mul/index/list">http://moon.bao.ac.cn/mul/index/list</a></td>
</tr>
<tr>
<td>中国地图</td>
<td><a href="https://www.ageeye.cn/">https://www.ageeye.cn/</a></td>
</tr>
<tr>
<td>解谜</td>
<td><a href="http://nazo.one-story.cn/">http://nazo.one-story.cn/</a></td>
</tr>
</tbody></table></div><div class="tab-pane" id="lks-6"><table>
<thead>
<tr>
<th><strong>类型</strong></th>
<th><strong>网址</strong></th>
</tr>
</thead>
<tbody><tr>
<td>AI音乐推荐</td>
<td><a href="https://www.gnoosic.com/faves.php">https://www.gnoosic.com/faves.php</a></td>
</tr>
<tr>
<td>RAP</td>
<td><a href="https://foreignrap.com">https://foreignrap.com</a></td>
</tr>
<tr>
<td>壁纸</td>
<td><a href="https://wallhaven.cc/">https://wallhaven.cc/</a></td>
</tr>
<tr>
<td>私人定制</td>
<td><a href="http://www.fiverr.com">www.fiverr.com</a></td>
</tr>
<tr>
<td>云旅游</td>
<td><a href="http://www.airpano.com/">http://www.airpano.com/</a></td>
</tr>
<tr>
<td>云住酒店云吃饭</td>
<td><a href="https://bbs.saraba1st.com/2b/space-uid-197835.html">https://bbs.saraba1st.com/2b/space-uid-197835.html</a></td>
</tr>
<tr>
<td>开窗户</td>
<td><a href="https://window-swap.com/">https://window-swap.com/</a></td>
</tr>
<tr>
<td>伴奏提取</td>
<td><a href="https://www.lalal.ai/">https://www.lalal.ai/</a></td>
</tr>
<tr>
<td>格式转换</td>
<td><a href="https://www.alltoall.net/">https://www.alltoall.net/</a> <br><a href="https://www.aconvert.com/cn/">https://www.aconvert.com/cn/</a></td>
</tr>
<tr>
<td>高端翻译</td>
<td><a href="https://www.deepl.com/translator">https://www.deepl.com/translator</a></td>
</tr>
<tr>
<td>图片唱歌</td>
<td><a href="https://yanderify.com/">https://yanderify.com/</a></td>
</tr>
<tr>
<td>好好说话</td>
<td><a href="https://lab.magiconch.com/nbnhhsh/">https://lab.magiconch.com/nbnhhsh/</a></td>
</tr>
<tr>
<td>那你能帮帮我吗</td>
<td><a href="https://zh.wikihow.com/%E9%A6%96%E9%A1%B5">https://zh.wikihow.com/%E9%A6%96%E9%A1%B5</a></td>
</tr>
<tr>
<td>天气</td>
<td><a href="https://www.windy.com/">https://www.windy.com/</a></td>
</tr>
<tr>
<td>自杀网站</td>
<td><a href="https://www.thiswebsitewillselfdestruct.com/">https://www.thiswebsitewillselfdestruct.com/</a></td>
</tr>
<tr>
<td>起名</td>
<td><a href="https://www.behindthename.com/">https://www.behindthename.com/</a></td>
</tr>
<tr>
<td>版权音乐曲库</td>
<td><a href="https://www.epidemicsound.com">https://www.epidemicsound.com</a></td>
</tr>
<tr>
<td>独立游戏</td>
<td><a href="https://www.indiexpo.net/">https://www.indiexpo.net/</a></td>
</tr>
<tr>
<td>学钢琴</td>
<td><a href="https://app.flowkey.com.cn/">https://app.flowkey.com.cn/</a></td>
</tr>
<tr>
<td>焦段科普</td>
<td><a href="https://www.samyanglens.com/en/product/simulator/lens.php">https://www.samyanglens.com/en/product/simulator/lens.php</a></td>
</tr>
<tr>
<td>全球生活水平</td>
<td><a href="https://www.gapminder.org/dollar-street/">https://www.gapminder.org/dollar-street/</a></td>
</tr>
<tr>
<td>海</td>
<td><a href="https://seaside-station.com/region/hokkaido/">https://seaside-station.com/region/hokkaido/</a></td>
</tr>
<tr>
<td>标准地图</td>
<td><a href="http://bzdt.ch.mnr.gov.cn/index.html">http://bzdt.ch.mnr.gov.cn/index.html</a></td>
</tr>
<tr>
<td>色差</td>
<td><a href="http://www.cuishuai.cc/game/">http://www.cuishuai.cc/game/</a></td>
</tr>
</tbody></table></div><div class="tab-pane" id="lks-7"><table>
<thead>
<tr>
<th><strong>类型</strong></th>
<th><strong>网址</strong></th>
</tr>
</thead>
<tbody><tr>
<td>行业报告</td>
<td><a href="http://report.seedsufe.com/#/report">http://report.seedsufe.com/#/report</a></td>
</tr>
<tr>
<td>世界之声</td>
<td><a href="https://aporee.org/maps/">https://aporee.org/maps/</a></td>
</tr>
<tr>
<td>商用图片</td>
<td><a href="https://www.pexels.com/zh-cn/">https://www.pexels.com/zh-cn/</a></td>
</tr>
<tr>
<td>抠图</td>
<td><a href="https://www.remove.bg/">https://www.remove.bg/</a> <br><a href="http://waifu2x.udp.jp/">http://waifu2x.udp.jp/</a></td>
</tr>
<tr>
<td>抠视频</td>
<td><a href="https://www.unscreen.com/">https://www.unscreen.com/</a></td>
</tr>
<tr>
<td>打字比赛</td>
<td><a href="https://play.typeracer.com/">https://play.typeracer.com/</a></td>
</tr>
<tr>
<td>空投</td>
<td><a href="https://airportal.cn/">https://airportal.cn/</a></td>
</tr>
<tr>
<td>宝贝DJ</td>
<td><a href="http://www.bbdj.com/">http://www.bbdj.com/</a></td>
</tr>
<tr>
<td>色彩</td>
<td><a href="https://color.adobe.com/zh/create/color-wheel">https://color.adobe.com/zh/create/color-wheel</a></td>
</tr>
<tr>
<td>3D模型</td>
<td><a href="https://sketchfab.com/">https://sketchfab.com/</a></td>
</tr>
<tr>
<td>核爆</td>
<td><a href="https://nuclearsecrecy.com/nukemap/">https://nuclearsecrecy.com/nukemap/</a></td>
</tr>
<tr>
<td>约稿</td>
<td><a href="https://www.mihuashi.com/artists">https://www.mihuashi.com/artists</a></td>
</tr>
<tr>
<td>虚拟博物馆</td>
<td><a href="https://virtual.mauritshuis.nl/index.html?lang=en&amp;startscene=21">https://virtual.mauritshuis.nl/index.html?lang=en&amp;startscene=21</a></td>
</tr>
<tr>
<td>尺寸</td>
<td><a href="https://www.dimensions.com/">https://www.dimensions.com/</a></td>
</tr>
<tr>
<td>迪士尼化</td>
<td><a href="https://toonme.com/">https://toonme.com/</a></td>
</tr>
<tr>
<td>动态图表</td>
<td><a href="https://hanabi.data-viz.cn/index?lang=zh-CN">https://hanabi.data-viz.cn/index?lang=zh-CN</a></td>
</tr>
<tr>
<td>中国营养</td>
<td><a href="https://www.fatsecret.cn/%E7%83%AD%E9%87%8F%E8%90%A5%E5%85%BB/">https://www.fatsecret.cn/%E7%83%AD%E9%87%8F%E8%90%A5%E5%85%BB/</a></td>
</tr>
<tr>
<td>发现</td>
<td><a href="https://www.producthunt.com/">https://www.producthunt.com/</a></td>
</tr>
<tr>
<td>找音乐</td>
<td><a href="https://www.tunefind.com/">https://www.tunefind.com/</a></td>
</tr>
<tr>
<td>996身临其境</td>
<td><a href="https://imisstheoffice.eu/">https://imisstheoffice.eu/</a></td>
</tr>
<tr>
<td>这个不存在</td>
<td><a href="https://thisxdoesnotexist.com/">https://thisxdoesnotexist.com/</a></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>森林之声</td>
<td><a href="https://www.tree.fm/">https://www.tree.fm/</a></td>
</tr>
<tr>
<td>西方电音</td>
<td><a href="https://www.traxsource.com/dj-top-10s">https://www.traxsource.com/dj-top-10s</a></td>
</tr>
<tr>
<td>猜真假</td>
<td><a href="https://landing.adobe.com/en/na/products/creative-cloud/69308-real-or-photoshop/index.html">https://landing.adobe.com/en/na/products/creative-cloud/69308-real-or-photoshop/index.html</a></td>
</tr>
<tr>
<td>魔性</td>
<td><a href="https://patatap.com/">https://patatap.com/</a></td>
</tr>
<tr>
<td>中华珍宝馆</td>
<td><a href="https://www.ltfc.net/exhibit/recent">https://www.ltfc.net/exhibit/recent</a></td>
</tr>
<tr>
<td>英语游戏</td>
<td><a href="https://www.merriam-webster.com/">https://www.merriam-webster.com/</a></td>
</tr>
<tr>
<td>防疫政策</td>
<td><a href="https://i.snssdk.com/feoffline/ugc_activities/html/epidemic-prevention-sftr/index.html?style_id=30044">https://i.snssdk.com/feoffline/ugc_activities/html/epidemic-prevention-sftr/index.html?style_id=30044</a></td>
</tr>
</tbody></table></div></div></div></div><div class="tab-pane" id="websites-3"><blockquote>
<ul>
<li><strong>from: bilibili UP主<a href="https://www.bilibili.com/video/av76317286/?spm_id_from=333.788.b_765f64657363.8">阿信OL</a></strong></li>
</ul>
</blockquote>
<table>
<thead>
<tr>
<th>名称</th>
<th>网址</th>
</tr>
</thead>
<tbody><tr>
<td>爱给素材网</td>
<td><a href="http://www.aigei.com/">http://www.aigei.com/</a></td>
</tr>
<tr>
<td>OepnGameArt</td>
<td><a href="https://opengameart.org/">https://opengameart.org/</a></td>
</tr>
<tr>
<td>Ludum Dare</td>
<td><a href="https://ldjam.com/">https://ldjam.com/</a></td>
</tr>
<tr>
<td>Itch</td>
<td><a href="https://itch.io/">https://itch.io/</a></td>
</tr>
</tbody></table></div></div></div>






]]></content>
      <categories>
        <category>收藏</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
</search>
