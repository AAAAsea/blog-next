<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AseaBlog</title>
  <icon>https://www.gravatar.com/avatar/2ab32513ce6dc86cc9542de0cb40ddbe</icon>
  <subtitle>我的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://asea.fun/"/>
  <updated>2021-09-27T06:44:18.000Z</updated>
  <id>https://asea.fun/</id>
  
  <author>
    <name>Asea</name>
    <email>gyvip001@126.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue学习笔记</title>
    <link href="https://asea.fun/post/71513ccb.html"/>
    <id>https://asea.fun/post/71513ccb.html</id>
    <published>2021-09-23T14:08:07.000Z</published>
    <updated>2021-09-27T06:44:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vue核心"><a href="#Vue核心" class="headerlink" title="Vue核心"></a>Vue核心</h1><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><h3 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h3><p>不写了，参考文档</p><p>引入vue.js开发版的时候，控制台会提示，这个提示可以关掉。</p><p><code>Vue.config.productionTip = false</code></p><p><code>el</code>也可以通过`.$mount(‘#root’)挂载</p><p><strong>后面用到了es6的简写，如果不了解es6语法的可以适当补充一下</strong></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ol><li>vue不能挂在到html和body上。</li><li>vue作用范围包括子元素</li><li>建议使用id选择器</li><li>一个vue实例对应一个容器，<strong>一对一</strong></li><li>插值里可以写js表达式，一个表达式可以生成一个值（变量，运算，三元，函数…）</li><li>data里面写多个同名属性，会覆盖，只有最后一个有用。</li><li>methods里面的最好不要写箭头函数，否则会导致this从vue变成了window。</li></ol><h2 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h2><blockquote><p>大概是vue的MVVM的原理</p></blockquote><p><code>Object.defineProperty</code>可以用来给一个对象添加属性，此时添加的属性是具有封装性质的属性，这个属性是否可枚举，可改，可删除都是可以设置的，默认都是false。该函数的参数有三个，分别是对象，属性名，和配置对象。配置对象里可以设置<code>get</code>和<code>set</code>函数，来决定该属性的值从哪里获取。而<code>vue</code>将<code>data</code>对象里的东西保存在自己的<code>_data</code>里，然后当访问<code>_data</code>或者修改时，便会调用<code>get</code>和<code>set</code>函数，从而达到数据更新的目的。且只有<code>data</code>里面的才会数据代理</p><p>我的感觉时重载了<code>.</code>运算符，用户访问vm.name便会调用vm._data.name，但是<code>_data</code>里进行了数据劫持，并不直接提供，而是再度进行封装。总之js的基于对象不是基于类的思路，而是走了<strong>原型</strong>这条路。具体关于js的面向对象可以参考<a href="https://blog.csdn.net/cpongo3/article/details/89026265">这里</a>。</p><h2 id="认识指令"><a href="#认识指令" class="headerlink" title="认识指令"></a>认识指令</h2><blockquote><p>vue主要的一些指令，后面详细解读其原理和更多用法</p></blockquote><p><code>&lt;h2 v-text=&quot;message&quot;&gt;&lt;/h2&gt;</code> 替换所有</p><p>支持字符串拼接</p><p><code>v-html</code>会按照html渲染</p><p><code>v-on:</code> 、<code>@</code>，可以传参，可以简写<code>@click = &quot;isHot = !isHot&quot;</code></p><p><code>v-show``v-if</code> 前者只改变display属性</p><p><code>v-bind:src = &quot;xxx&quot;</code>、<code>:src = &quot;&#123;active:isActive&#125;&quot;</code>可以使用对象形式或者三元表达式</p><p><code>v-model</code>双向绑定，只能用于输入型元素，需要有value属性，另外，<code>v-model:value</code>可以简写为<code>v-model</code></p><p><code>v-for = &quot;(item, index) in arr&quot;</code></p><p><code>v-message</code>和某个变量双向绑定</p><p><code>v-cloak</code>一个特殊的属性，没有值，vue在接管以后会删掉这个属性。因此，可以利用css来防止因为网速慢而显示出<code>&#123;&#123;&#125;&#125;</code>这样的插值表达式。cloak意思为斗篷。利用css属性选择器<code>[cloak]:&#123;display: none&#125;</code>就行了。</p><p><code>v-once</code>动态渲染之后，即为静态数据。</p><p><code>v-pre</code>跳过该元素的渲染，如果确定该元素不需要vue，那么加<code>v-pre</code>效率更高</p><h2 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h2><blockquote><p>事件修饰符是在事件名称后直接<code>.</code>一些属性，属于一些简便的写法。下边举几个例子</p></blockquote><ol><li><p>可以使用事件修饰符<code>@keyup.enter=&quot;myFun&quot;</code>表示回车键，类似的有delete，esc，space，up，down，left等等。特殊的例如CapsLock要用caps-lock。另外tab本身再keydown的时候会切换焦点，所以要想绑定需要用keydown。还有几个比较特殊的键，ctrl，alt，win，shift，当他们与keyup绑定的时候，需要组合键（alt+1)才能出发，keydown正常。如果想用自己的别名，需要再js配置一下，例如给回车键起别名：<code>Vue.config.keyCodes.huiche = 13</code>。</p></li><li><p>想传参就加括号，不想传参爱写不写！但是写了如果传参，记得多传一个$event，别搞丢了事件。</p></li><li><p>再有，<code>event</code>有一个<code>preventDefault()</code>的方法，也可以通过<code>@click.prevent</code>实现。<code>e.target</code>是触发事件的对象</p></li><li><p>同理，为了阻止事件冒泡，<code>e.stopPropagation()</code>，也可以用<code>@click.stop</code>代替。一共有六个事件修饰符。</p></li><li><p>还有<code>.once</code>表示一次性。</p></li><li><p>还可以连着写！<code>@click.stop.prevent</code>，<code>@click.ctrl.y</code></p></li></ol><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><blockquote><p>计算属性，在Vue的机制里，会通过getter计算出新的属性，最后成为vm的一个属性值，最终的计算属性只是一个属性值，不是对象！具体用法参见下边的代码。通过自动调用getter和setter来达到目的。</p><p>需要注意的是，当第一次加载fullName和所依赖的数据如firstName发生改变的时候，fullName会重新调用。如果依赖的数据没有发生变化，得益于vue的缓存机制，fullName的get只会在最开始调用一次，所以性能由于methods。</p><p>当修改fullName的值时，set函数调用。</p></blockquote><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">    fullName:&#123;</span><br><span class="line">        <span class="function"><span class="title">get</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="built_in">this</span>.lastName;<span class="comment">//这里的this已经被重新定向为vm，切记不要用箭头函数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="title">set</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="计算属性的简写"><a href="#计算属性的简写" class="headerlink" title="计算属性的简写"></a>计算属性的简写</h3><blockquote><p>下面再来说一下计算属性的简写形式。</p><p>当你的计算属性不涉及setter的时候才可以简写，简写代码见下方。</p><p>你会发现简写之后的形式，就相当于methods里面的一个函数。但是不同的是，computed里面的函数是Vue调用执行的，最后计算完后成为了vm的一个属性。所以插值引用时不能加括号，这点和直接调用methods里的方法是不同的，且methods里的没有缓存机制和计算属性的一些独有的优化特点。</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">computed:&#123;</span><br><span class="line">    <span class="function"><span class="title">fullName</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="built_in">this</span>.lastName;<span class="comment">//这是一种简写形式，但是fullName不能去主动调用</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="监视（侦听）属性"><a href="#监视（侦听）属性" class="headerlink" title="监视（侦听）属性"></a>监视（侦听）属性</h2><blockquote><p>监视属性，顾名思义就是当某些属性发生改变的时候，会触发handler。这里说的属性包括上边提到的计算属性。如果写了不存在的属性，那么新旧值都是undefined，不报错。写法如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">watch:&#123;</span><br><span class="line">    isHot:&#123;</span><br><span class="line">        <span class="comment">//此处举两个配置项</span></span><br><span class="line">immediate: <span class="literal">true</span>, <span class="comment">//一上来就调用，此时oldValue是undefined</span></span><br><span class="line"><span class="function"><span class="title">handler</span>(<span class="params">newValue, oldValue</span>)</span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>为了灵活，也可以通过vm的$watch来调用，但是必须在Vue对象实例化之后才能调用</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">vm.$watch(<span class="string">&#x27;isHot&#x27;</span>,&#123;</span><br><span class="line">    immediate: <span class="literal">true</span>,</span><br><span class="line">    <span class="function"><span class="title">handler</span>(<span class="params">newValue, oldValue</span>)</span>&#123;</span><br><span class="line">        。。。</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="深度监视"><a href="#深度监视" class="headerlink" title="深度监视"></a>深度监视</h3><blockquote><p>我们常常遇到这样的问题：当我们要监视的数据不是一个简单的数据类型时（例如一个对象），那么当我们改变了对象的一个属性，对象是否变了呢？本质来说，对象的地址没有变，那么可以认为对象是没有变化的。于是如果我们想监视对象的某个属性就需要用到把上边提到的<code>isHot</code>换成<code>&#39;对象名.属性&#39;</code>这里的引号时必不可少的，具体参见es语法，此处不多赘述。</p><p>但是当我们想要监视这个对象的任一属性时，我们直接写该对象时不行的，因为<code>watch</code>默认不会深度监视，所以需要我们打开这个配置，如下</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">watch:&#123;</span><br><span class="line">    一个对象:&#123;</span><br><span class="line">        deep: <span class="literal">true</span> <span class="comment">//打开深度监视</span></span><br><span class="line">        <span class="comment">//此处举两个配置项</span></span><br><span class="line">immediate: <span class="literal">true</span>, <span class="comment">//一上来就调用，此时oldValue是undefined</span></span><br><span class="line"><span class="function"><span class="title">handler</span>(<span class="params">newValue, oldValue</span>)</span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="监视属性的简写"><a href="#监视属性的简写" class="headerlink" title="监视属性的简写"></a>监视属性的简写</h3><blockquote><p>简写模式和计算属性类似，都需要只有一个函数配置项，这里对于watch和$watch的简写举例说明</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">watch:&#123;</span><br><span class="line">    <span class="function"><span class="title">isHot</span>(<span class="params">newValue, oldValue</span>)</span>&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vm.$watch(<span class="string">&#x27;isHot&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">newValue, oldValue</span>)</span>&#123;</span><br><span class="line">      ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="监视与计算的对比"><a href="#监视与计算的对比" class="headerlink" title="监视与计算的对比"></a>监视与计算的对比</h3><blockquote><p>两者某些功能都可以实现，计算属性相对于监视来说不需要再data里面提前定义好属性，所以更加简洁。但是计算属性完全依赖于return的值，所以对于类似定时器等功能无法正常实现，但是监视就方便了。不过需要注意的时，定时函数为什么不写function呢，这就需要了解一下js高级里面的this了，对于function，谁调用的function，this就是谁。但是箭头函数时没有this的，这时this指的就是外层的this，很显然，外层的this就是vm。所以这里不写fuction。</p><p>总结：vm管理的函数需要用function，除非不需要用到this，而如果不是vm管理的函数（例如定时器，ajax回调，promise回调），用箭头函数。总之，目的就是让this指向vm。</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">wahch:&#123;</span><br><span class="line">    <span class="function"><span class="title">firstName</span>(<span class="params">val</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.fullName = val + <span class="string">&#x27;-&#x27;</span> + <span class="built_in">this</span>.lathName</span><br><span class="line">        &#125;,<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="样式绑定"><a href="#样式绑定" class="headerlink" title="样式绑定"></a>样式绑定</h2><blockquote><p>一个标签如果写多个class属性<code>class=&#39;xxx&#39; class=&#39;yyy&#39;</code>，默认只解析第一个。在vue中，我们可以写<code>class = &#39;xxx&#39; :class=&#39;yyy&#39;</code>，两者并不冲突，此时，前者时正常的属性，后者时通过<code>v-bind</code>绑定js表达式，最终由vue一起绑定到class。这里的表达式可以是字符串变量，数组变量和对象，具体格式如下：</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//字符串就不写了</span></span><br><span class="line"><span class="comment">//数组也不写了，直接解析里面所有的属性</span></span><br><span class="line"><span class="comment">//对象</span></span><br><span class="line">classObj&#123;</span><br><span class="line">    class1: <span class="literal">true</span>, <span class="comment">//这里的true绑定一个boolean变量，表示样式的开关</span></span><br><span class="line">    class2: flase</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="style绑定"><a href="#style绑定" class="headerlink" title="style绑定"></a>style绑定</h3><blockquote><p>在上边讲过了class的绑定，这里再说一下style的绑定（虽然用的很少），但是还是介绍一下</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">:style = <span class="string">&quot;&#123;fontSize: 20px&#125;&quot;</span> <span class="comment">//这里需要些样式对象，或者对象数组，注意font-size要写成fontSize</span></span><br></pre></td></tr></table></figure><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><p><code>v-show = &quot;js表达式&quot;</code></p><p><code>v-if</code></p><p><code>v-else-if</code>    如果上边的v-if满足，那么后面的v-else-if不判断。</p><p><code>v-else</code> 用法我就不用说了吧，猜也能猜到👵不过需要注意的是，通过v-if控制的几条不能被打断。</p><h3 id="v-if与-lt-template-gt"><a href="#v-if与-lt-template-gt" class="headerlink" title="v-if与&lt;template&gt;"></a><code>v-if</code>与<code>&lt;template&gt;</code></h3><blockquote><p>当我们需要个一些元素添加样式，又不想一个一个添加，又不想增加父元素，可以用如下的方法，效果实现了，且在dom里面没有template元素，<strong>template不能和v-show使用。</strong></p></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span> = <span class="string">&quot;isShow&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hhh<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>hhh<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><blockquote><ol><li>可以有两个形参，虽然不加括号也行，但是建议加上</li><li>key值Vue用来对比前后的虚拟dom的，如果变更以后的虚拟dom和旧的一样，那么就不再重新渲染，而是直接复用，节省效率。所以当你的列表需要变化，例如排序，增删，那么key就非常重要，默认key是index，你需要加一个:key = p.id之类的专用key，防止列表出现问题，尤其是包含input输入框的时候，容易出岔子。</li><li>遍历的对象不一定是数组，也可以是对象，也可以是字符串，具体不多解释，试试就知道了。</li></ol></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p, index) in persons&quot;</span> <span class="attr">:key</span> = <span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;p.name&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="数据监测"><a href="#数据监测" class="headerlink" title="数据监测"></a>数据监测</h2><blockquote><p>这是一块复杂的知识，但是如果不搞懂底层的逻辑，可能会在数据监测中遇到很多问题。首先，我们在<code>data</code>里面写的数据会被加载到vm的<code>_data</code>上，同时，这些属性也会在vm的根节点上，也就是说我们可以直接访问<code>vm.property</code>，然后通过调用get来访问<code>_data</code>里面的属性，<code>_data</code>里的属性同样需要getter，共有两层的getter。为什么要这样呢，前者是为了调用方便，不然每次多要写<code>_data</code>也太不爽了，后者是为了监测数据，你想，当你修改data里的某个数据时，vm如果不知道，那还怎么监测并重新解析数据呢。因此，需要用到<code>_data</code>里面的getter和setter，当你修改数据时，调用了<code>set</code>，从而实现检测的效果。</p></blockquote><p> 上边大概说明白了监测实质就是vue将你写在data里面的东西加工了。但是当加工以后，我们还想再往里面添加属性怎么办呢，这就需要深入探讨一下了。</p><p> 大概分为两种情况，一个是往一个<strong>对象</strong>里添加属性，一个是往<strong>数组</strong>里添加数据。</p><p> 前者，很容易想到<code>obj.name = &#39;jack&#39;</code>这样的例子，以为我们拿到对象节点就万事大吉，但是不然，这样添加的属性是没有监测效果的，也就是说没有对应的getter和setter，那么怎么办呢，vue提供了解决办法，你可以通过<code>Vue.set(obj, property, value)</code>来添加属性。</p><p> 后者，我们可以借鉴对象的方式，因为数组毕竟也是个对象，万物皆对象嘛，我们可以将property换成index即可。<code>Vue.set(arr, index, value)</code>。但同时，vue也对数组进行了专门的优化，首先数组里面的每个数据是没有对应的getter和setter的，那么当我们修改数组的数据时，vue怎么判断呢？其实，vue专门对数组的几个函数进行了修改，<code>push pop  shift unshift splice sort reverse</code>这几个函数是可以修改原数组的值的，当我们通过这几个函数来修改数组的时候，vue就可以检测到了。切记不要直接通过索引值来修改。</p><p>最后说一下细节问题，数组里面如果是对象，那么这个对象的属性是有getter、setter的。</p><h2 id="表单收集"><a href="#表单收集" class="headerlink" title="表单收集"></a>表单收集</h2><blockquote><p>我们知道，一想到表单收集，肯定就是<code>v-model</code>了，但是需要注意些特殊的坑，毕竟表单有单选，复选，单行，多行等。</p></blockquote><ol><li><code>&lt;input type = &#39;text&#39; v-model=&#39;account&#39;/&gt;</code>收集到的是输入的数据</li><li><code>&lt;input type = &#39;radio&#39; v-model=&#39;account&#39; value=&#39;sex&#39;/&gt;</code>单选框，收集到的是value，由于没有输入，默认是null，所以需要配置value属性。</li><li><code>&lt;input type = &#39;checkbox&#39; v-model=&#39;account&#39;/&gt;</code><ol><li>如果不配置input，默认手机checked属性，即布尔值</li><li>如果配置<ul><li>当v-model初始值不是数组，收集的还是checked</li><li>否则收集的是value组成的数组。</li></ul></li></ol></li><li>修饰符<ol><li>lazy：失去焦点再收集</li><li>number：收集类型转成数字</li><li>trim：去除前后空格</li></ol></li></ol><h2 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a>自定义指令</h2><h3 id="简写"><a href="#简写" class="headerlink" title="简写"></a>简写</h3><blockquote><p>其实vue指令本质不就是底层在操作dom嘛，所以你只需要自己写一个指令名，例如<code>v-hello</code>，当你在配置项里配置好hello，那么就可以用了。代码如下</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:</span><br><span class="line">    data:</span><br><span class="line">    directives&#123;</span><br><span class="line">    hello(element, binding)</span><br><span class="line">&#123;</span><br><span class="line">            element.innerText = binding.value <span class="comment">//就不用多说了吧，两个参数，一个是dom元素，一个是绑定对象，包括了表达式，值等等很多属性，我直呼vue太贴心了。</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="完整"><a href="#完整" class="headerlink" title="完整"></a>完整</h3><blockquote><p> 但是有一些特殊的需求，例如<code>el.focus()</code>，有些命令只能在元素插入到页面以后才能执行。这时候我们就要考虑到自定义指令的调用时机了。</p><p>上一个简写模式，只有在最开始绑定以及随后重新解析模板的时候才会调用，也就是没有inserted。并没有所谓的“元素插入页面以后调用”，那么就来看看完全体吧，上代码</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:</span><br><span class="line">    data:&#123;&#125;</span><br><span class="line">    directives&#123;</span><br><span class="line">    hello:</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="function"><span class="title">bind</span>(<span class="params">ele, bindind</span>)</span>&#123;&#125; <span class="comment">//绑定时调用</span></span><br><span class="line"><span class="function"><span class="title">inserted</span>(<span class="params">ele, bindind</span>)</span>&#123;&#125; <span class="comment">//插入以后调用</span></span><br><span class="line"><span class="function"><span class="title">update</span>(<span class="params">ele, binding</span>)</span>&#123;&#125; <span class="comment">//模板更新时调用</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h3><ol><li>vue默认会转成小写，所以命名不要驼峰命名，而是要用v-user-name这样的命名，具体叫啥，我没记住。</li><li>如果想写全局firective，就用<code>Vue.directive(&#39;hello&#39;, function()&#123;...&#125;)</code>，和全局的过滤器是一样的，但是什么是全局过滤器呢，我听了，但是不想写了。反正就是<code>filters filter</code>之类的，好像vue3被弃用了，听听算了。</li><li>this是<strong>window</strong></li></ol><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><blockquote><p>来了！重点来了。</p></blockquote><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:</span><br><span class="line">    data:&#123;&#125;</span><br><span class="line">    <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span>&#123; <span class="comment">//第一次加载并把元素挂载到页面以后</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><img src="https://pic.imgdb.cn/item/614ec6632ab3f51d918effba.jpg" alt="生命周期"></p><h3 id="细节-1"><a href="#细节-1" class="headerlink" title="细节"></a>细节</h3><ol><li>重点关注mounted和beforeDestroy。</li><li>在后者里修改数据不会再触发更新</li></ol><h2 id="一些片段"><a href="#一些片段" class="headerlink" title="一些片段"></a>一些片段</h2><blockquote><p>跟着教程敲的一些片段</p></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span> = <span class="string">&quot;sub&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span> = <span class="string">&quot;add&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="javascript">      el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">      data:&#123;</span><br><span class="line">        num: 1</span><br><span class="line">      &#125;,</span><br><span class="line">      methods:&#123;</span><br><span class="line"><span class="javascript">        add:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.num++;</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="javascript">        sub:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.num--;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span> = <span class="string">&quot;isShow&quot;</span>&gt;</span>嘿嘿嘿<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span> = <span class="string">&quot;toggle&quot;</span>&gt;</span>显示/隐藏<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="javascript">      el:<span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line">      data:&#123;</span><br><span class="line"><span class="javascript">        isShow: <span class="literal">true</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      methods:&#123;</span><br><span class="line"><span class="javascript">        toggle:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">this</span>.isShow = !<span class="built_in">this</span>.isShow</span></span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="axios"><a href="#axios" class="headerlink" title="axios"></a>axios</h3><blockquote><p>axios回调函数里面的this已经改变，无法在会点函数内部通过this访问data，可以在回调之前拿一个变量保存一下this</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">axios.get(url).then</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">axios.post(url,data).then</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(err);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="组件化"><a href="#组件化" class="headerlink" title="组件化"></a>组件化</h1><blockquote><p>在常规编写中，为了复用，有了模块的概念，也就是分成多个js。而这里的组件化，是撒子呢。看下去</p></blockquote><h2 id="非单文件组件"><a href="#非单文件组件" class="headerlink" title="非单文件组件"></a>非单文件组件</h2><blockquote><p>虽然开发中不太常用，但这里还是写一些基本的用法</p></blockquote><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> s = Vue.extend(</span><br><span class="line">&#123;</span><br><span class="line">    template:<span class="string">`这里写html模板可以多行`</span>，</span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//data这里不能写对象，而是写函数，因为要拷贝而不是指向同一个</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:</span><br><span class="line">    data:</span><br><span class="line">    components:&#123;</span><br><span class="line">    school: s <span class="comment">//注册组件</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="细节-2"><a href="#细节-2" class="headerlink" title="细节"></a>细节</h3><ol><li><p>命名</p><ul><li>一个单词可以首字母大写也可以不大写</li><li>多个单词可以（kebab-case)也可以大驼峰(CamelCase)，但是不在脚手架里，大驼峰是不支持的。</li></ul></li><li><p>标签可以写双标签<code>&lt;school&gt;&lt;/school&gt;</code>，也可以但标签<code>&lt;school/&gt;</code>，但是如果不在脚手架，但标签会导致后续组件无法渲染</p></li><li><p>简写</p><p>const school = Vue.extend(options) 可以简写为 const school = options</p><p>原理就是，如果你在传入的是一般对象，那么vue会自动调用extend</p></li></ol><h3 id="嵌套组件"><a href="#嵌套组件" class="headerlink" title="嵌套组件"></a>嵌套组件</h3><blockquote><p>把一个组件当成html，同时把子组件挂载到父组件上。顺序要注意，子组件要在前面。其实每个组件就是一个VueComponent实例，简称vc实例，vc和vm类似，this指向vc，vc是在vm的$children属性里。两个构造函数Vue和VueComponent类似，但是不一样，例如vc里面不能传el，再例如，data在vc里必须是函数，vm里可以是对象。而且正是由于vc是可以复用的，所以data不能写对象。</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> b = Vue.extend(</span><br><span class="line">&#123;</span><br><span class="line">    template:<span class="string">``</span>， </span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> s = Vue.extend(</span><br><span class="line">&#123;</span><br><span class="line">    template:<span class="string">`这里写html模板可以多行&lt;b&gt;&lt;b/&gt;`</span>，<span class="comment">//挂在子组件</span></span><br><span class="line">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//data这里不能写对象，而是写函数，因为要拷贝而不是指向同一个</span></span><br><span class="line">&#125;</span><br><span class="line">components:&#123;</span><br><span class="line">        boy: b</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:</span><br><span class="line">    data:</span><br><span class="line">    components:&#123;</span><br><span class="line">    school: s <span class="comment">//注册组件</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="关于原型"><a href="#关于原型" class="headerlink" title="关于原型"></a>关于原型</h3><blockquote><p>在Vue中做了一件事，那就是把VueComponent的原型的原型指向了Vue的原型，而不是Object。具体关于原型的理解，我是这么想的，一个构造函数，本身就是一个对象，他有一个属性是<code>prototype</code>，称为显示原型属性，这个属性里存放的东西可以理解为一个类的静态属性。在这个属性里的东西，所有由该构造函数new的对象通过<code>.__proto__</code>（隐式原型属性）共享。而Vue将VueComponent构造函数的<code>prototype</code>的<code>__proto__</code>的指向从Object修改成了Vue的原型对象，以至于组件可以访问Vue中的显示属性。如果还是不太理解，可以去补充一下js高级。js的面向对象和c++和java还是有还很大区别的。</p></blockquote><h2 id="脚手架"><a href="#脚手架" class="headerlink" title="脚手架"></a>脚手架</h2><blockquote><p>终于来了，后缀是.vue，简单说一下组件化的运行逻辑，首先入口是一个html和一个main.js，这个main.js不需要你手动引入，只需要在main.js引入Vue和app组件，然后里面配置好Vue实例，配置好需要的组件（其实只有一个app组件），挂载到对应的html文件上（render）即可。下面是一个组件（.vue）的模板，分为三块，template script style。另外public里面的html文件用到了jsp语法，自己学吧。html里面的<code>&lt;noscript&gt;</code>标签，表示不支持js的时候才解析里面的内容。</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;h1&gt;</span><br><span class="line">        &#123;&#123;msg&#125;&#125; &#x2F;&#x2F;template下必须有一个根节点</span><br><span class="line">    &lt;&#x2F;h1&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default&#123;</span><br><span class="line">    name: Student, &#x2F;&#x2F;为了让其它组件引入，需要export</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">... 没有就可以不写</span><br><span class="line">&lt;&#x2F;style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><blockquote><p>由于运行时vue缺少模板渲染，所以用render来替代</p></blockquote><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">render: <span class="function"><span class="params">h</span> =&gt;</span> h(App); <span class="comment">//vue将会向h传递一个creatElement的函数，来创建元素，且不需要配置component。另外，h的形参传递组件例如App，则如上。如果传html代码，则h(&#x27;h1&#x27;,&#x27;Heloo&#x27;)。</span></span><br></pre></td></tr></table></figure><h3 id="修改默认配置"><a href="#修改默认配置" class="headerlink" title="修改默认配置"></a>修改默认配置</h3><blockquote><p>想查看Vue-cli的默认配置，只需要控制台<code>vue inspect &gt; output.js</code>，就可以导出所有的配置项目，生成一个js。该文件修改是无效的。如何修改呢？</p></blockquote><p>对于main.js src public index.html favicon.ico就别修改了，能够修改的可以去<a href="https://cli.vuejs.org/zh/config/">这里</a>参考一下。具体过程就是在根目录（和package.json同级）创建一个<code>vue.config.js</code>，参照官网的配置项修改。该文件暴露采用common.js，最后和webpack的配置整合。</p><h3 id="ref"><a href="#ref" class="headerlink" title="ref"></a>ref</h3><blockquote><p>为了获取元素和组件，vue自定义的一个属性ref，如下当我们给一个元素或者组件加上ref属性以后，就可以通过<code>this.$refs.title</code>拿到这个元素或者组件。和id类似，但是对于组件，通过id拿到的组件是渲染之后的组件而不是组件本体。</p></blockquote><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">ref</span> = <span class="string">&#x27;title&#x27;</span>&gt;</span></span><br><span class="line">    hhh</span><br><span class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="prop"><a href="#prop" class="headerlink" title="prop"></a>prop</h3><ol><li><p>功能：让组件接收外部传过来的数据（组件传参）</p></li><li><p>传递数据：<code>&lt;Demo name=&quot;xxx&quot; sex=&quot;hhh&quot;/&gt;</code>，这里如果是<code>:name=&quot;xxx&quot;</code>那么xxx会按照js表达式解析</p></li><li><p>接收数据：</p><ol><li>第一种方式（只接收）：<code>props:[&#39;name&#39;]</code></li><li>第二种方式（限制类型）：<code>props:&#123;name:String&#125;</code></li><li>第三种方式（限制类型、限制必要性、指定默认值）：</li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">props:&#123;</span><br><span class="line">   </span><br><span class="line">name:&#123;</span><br><span class="line">   </span><br><span class="line">type:<span class="built_in">String</span>, <span class="comment">//类型</span></span><br><span class="line">   </span><br><span class="line">required:<span class="literal">true</span>, <span class="comment">//必要性</span></span><br><span class="line">   </span><br><span class="line"><span class="keyword">default</span>:<span class="string">&#x27;老王&#x27;</span> <span class="comment">//默认值</span></span><br><span class="line">   </span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>props是只读的，Vue底层会监测你对props的修改，如果进行了修改，就会发出警告，若业务需求确实需要修改，那么请复制props的内容到data中一份，然后去修改data中的数据。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Vue核心&quot;&gt;&lt;a href=&quot;#Vue核心&quot; class=&quot;headerlink&quot; title=&quot;Vue核心&quot;&gt;&lt;/a&gt;Vue核心&lt;/h1&gt;&lt;h2 id=&quot;快速入门&quot;&gt;&lt;a href=&quot;#快速入门&quot; class=&quot;headerlink&quot; title=&quot;快速入门&quot;&gt;&lt;/a&gt;快速入门&lt;/h2&gt;&lt;h3 id=&quot;入门&quot;&gt;&lt;a href=&quot;#入门&quot; class=&quot;headerlink&quot; title=&quot;入门&quot;&gt;&lt;/a&gt;入门&lt;/h3&gt;&lt;p&gt;不写了，参考文档&lt;/p&gt;
&lt;p&gt;引入vue.js开发版的时候，控制台会提示，这个提示可以关掉。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Vue.config.productionTip = false&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;el&lt;/code&gt;也可以通过`.$mount(‘#root’)挂载&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;后面用到了es6的简写，如果不了解es6语法的可以适当补充一下&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;vue不能挂在到html和body上。&lt;/li&gt;
&lt;li&gt;vue作用范围包括子元素&lt;/li&gt;
&lt;li&gt;建议使用id选择器&lt;/li&gt;
&lt;li&gt;一个vue实例对应一个容器，&lt;strong&gt;一对一&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;插值里可以写js表达式，一个表达式可以生成一个值（变量，运算，三元，函数…）&lt;/li&gt;
&lt;li&gt;data里面写多个同名属性，会覆盖，只有最后一个有用。&lt;/li&gt;
&lt;li&gt;methods里面的最好不要写箭头函数，否则会导致this从vue变成了window。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Vue" scheme="https://asea.fun/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>mysql学习笔记</title>
    <link href="https://asea.fun/post/295082ac.html"/>
    <id>https://asea.fun/post/295082ac.html</id>
    <published>2021-09-22T04:16:06.000Z</published>
    <updated>2021-09-23T14:11:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h2><ol><li><p>服务端口默认<code>3306</code></p></li><li><p>安装的时候选择自动添加<code>path</code></p></li><li><p>编码格式<code>utf8</code></p></li><li><p>windows启动服务</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">net start 服务名称（mysql）</span><br><span class="line">net stop 服务名称</span><br></pre></td></tr></table></figure></li></ol><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><ol><li><p>首先确保mysql服务已经打开，不确定话<code>net start mysql</code>试试</p></li><li><p><code>mysql -uroot -pxxxx</code></p><p>xxxx为你的密码，也可以不显示密码登录</p><p><code>mysql -uroot -p</code></p><p>然后输入密码（此时密码以*显示）即可登录。</p></li></ol><h3 id="密码重置（8-0-23）"><a href="#密码重置（8-0-23）" class="headerlink" title="密码重置（8.0.23）"></a>密码重置（8.0.23）</h3><blockquote><p>网上老的教程可能已经过时，8.0以上不支持<code>mysqld --skip-grant-tables</code></p></blockquote><ol><li><p>打开命令窗口cmd，输入命令：<code>net stop mysql</code>，停止MySQL服务，</p></li><li><p>开启跳过密码验证登录的MySQL服务，输入命令，然后不要关闭此窗口，命令如下：</p><p> <code>mysqld --console --skip-grant-tables --shared-memory</code></p></li><li><p>再打开一个新的cmd，无密码登录MySQL，输入登录命令：<code>mysql -u root -p</code>，然后回车即可</p><ol start="4"><li>密码置为空，命令如下：</li></ol><p><code>use mysql</code></p><p><code>update user set authentication_string=&#39;&#39; where user=&#39;root&#39;;</code></p><ol start="5"><li><p>退出，命令如下</p><p><code>quit</code></p></li></ol></li><li><p>关闭以<code>-console --skip-grant-tables --shared-memory</code>启动的MySQL服务（即关闭第一个打开的cmd窗口）</p><ol start="7"><li><p>打开cmd，输入：<code>net start mysql</code>启动MySQL服务。</p></li><li><p>步骤4密码已经置空，所以无密码状态登录MySQL，输入登录命令：mysql -u root -p，然后回车即可登录</p></li><li><p>修改密码，如下：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> 你的密码<span class="string">&#x27;;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><p>验证更改后密码正确登录</p></li><li><p>输入quit，退出当前登录，输入登录命令：<code>mysql -u root -p</code></p></li><li><p>输入密码，成功登录，到此，重置密码结束。</p></li></ol><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><blockquote><p>以<code>;</code>结尾</p></blockquote><p><code>show databases;</code></p><p><code>use test</code></p><p><code>create database test2;</code></p><p><code>quit\exit</code></p><p><code>show tables;</code></p><p><code>source D:\xxx\xxx\xxx.sql</code></p><p><code>select version();</code></p><p><code>select database();</code></p><p><code>\c</code>终止写了一半的语句</p><h2 id="SQL语句简介"><a href="#SQL语句简介" class="headerlink" title="SQL语句简介"></a>SQL语句简介</h2><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ol><li><p>DQL：查询（select）</p></li><li><p>DML：对表中的数据进行增删改，操作（insert delete update）</p><hr><p>以下是了解一下</p></li><li><p>DDL：定义，（create drop alter）操作表结构增删改</p></li><li><p>TCL：事务控制</p><ol><li>事务提交：commit</li><li>事务回滚：rollback</li></ol></li><li><p>DCL：控制（授权，撤销授权等）</p></li></ol><h2 id="DQL"><a href="#DQL" class="headerlink" title="DQL"></a>DQL</h2><h3 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">desc tableName; //查询表的结构</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">form</span> dept;//查询一个子段</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>,age <span class="keyword">from</span> dept;//查询多个字段</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tableName; //查询所有字段，效率低，可读性差</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> hhh <span class="keyword">from</span> dept;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">as</span> hhh <span class="keyword">from</span> dept;//起别名</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="string">&#x27;my hhh&#x27;</span> <span class="keyword">from</span> dept;//别名有空格加引号（单双都可，单最好用单引号，单引号是标准 ，如果别名是中文也要引号）</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, age*<span class="number">12</span> <span class="keyword">from</span> dept;//可以使用数学表达式</span><br><span class="line"><span class="keyword">select</span> 这里写个字符串或者数字（字面值） <span class="keyword">from</span> emp;//返回的是n个字符串或数字，了解一下（查看表的结构）</span><br></pre></td></tr></table></figure><h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> dept <span class="keyword">where</span> age = <span class="number">12</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> dept <span class="keyword">where</span> age &lt;&gt; <span class="number">12</span>;//就是!=的意思</span><br><span class="line"><span class="keyword">select</span> salary <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">&#x27;smith&#x27;</span>;</span><br><span class="line"></span><br><span class="line">//常用的条件</span><br><span class="line">=</span><br><span class="line">&lt;&gt; !=</span><br><span class="line">&lt;</span><br><span class="line">&lt;=</span><br><span class="line">&gt;</span><br><span class="line">&gt;=</span><br><span class="line">between ... and ...//等同于下边  的</span><br><span class="line">&gt;= and &lt;= </span><br><span class="line">is null//null 不能用=</span><br><span class="line">is not null</span><br><span class="line">and</span><br><span class="line">or //and优先级大于or，可以加括号</span><br><span class="line">in//后面跟个python中的list</span><br><span class="line">not in</span><br><span class="line"></span><br><span class="line">//模糊查询</span><br><span class="line">like</span><br><span class="line">%表示任意多个字符</span><br><span class="line">_表示任意一个字符</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> emp <span class="keyword">where</span> <span class="keyword">like</span> <span class="string">&#x27;%T%&#x27;</span>;  //如果包含下划线等可以用\转义；</span><br></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">ename,sal</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span></span><br><span class="line">sal (<span class="keyword">asc</span>); //升序，也可以用别名排序</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">ename,sal</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span></span><br><span class="line">sal <span class="keyword">desc</span>; //降序</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">ename,sal</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span></span><br><span class="line">sal <span class="keyword">asc</span>, ename <span class="keyword">asc</span>; //多关键字排序</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">ename,sal</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">emp</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span></span><br><span class="line"><span class="number">2</span>; //按照第二列排序（不建议这么写）</span><br></pre></td></tr></table></figure><h3 id="综合"><a href="#综合" class="headerlink" title="综合"></a>综合</h3><blockquote><p>from，where，select，order顺序不能变</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ename, sal</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">1000</span> <span class="keyword">and</span> <span class="number">2000</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h3 id="单行处理函数"><a href="#单行处理函数" class="headerlink" title="单行处理函数"></a>单行处理函数</h3><blockquote><p>一个输入对应一个输出</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">lower upper</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">lower</span>(ename) <span class="keyword">as</span> ename <span class="keyword">from</span> emp;//注意别名</span><br><span class="line"></span><br><span class="line">substr</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">substr</span>(enmae, <span class="number">1</span>, <span class="number">1</span>) <span class="keyword">as</span> ename <span class="keyword">from</span> emp;//起始下标，从1开始，后面是截取长度</span><br><span class="line"></span><br><span class="line">contact(&#x27;a&#x27;, &#x27;b&#x27;);//字符串拼接</span><br><span class="line"></span><br><span class="line">length(name);</span><br><span class="line"></span><br><span class="line">trim(name);//去除前后空白 ltrim， rtrim</span><br><span class="line"></span><br><span class="line">round(double, n);//保留n个小数（四舍五入）n如果是-1的话，嘿嘿你试试</span><br><span class="line"></span><br><span class="line">rand()</span><br><span class="line"></span><br><span class="line">ifnull(数据，值)//有null参与的运算结果都是null，所以用ifnull来把null替换成一个值，如ifnull(sal, 0);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename, job (<span class="keyword">case</span> job <span class="keyword">when</span> <span class="string">&#x27;MANAGER&#x27;</span> <span class="keyword">then</span> sal*<span class="number">1.1</span> <span class="keyword">when</span> <span class="string">&#x27;SALESMAN&#x27;</span> <span class="keyword">then</span> sal*<span class="number">1.5</span> <span class="keyword">else</span> sal) <span class="keyword">as</span> newsalary <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a>分组函数</h3><blockquote><p>输入多行，输出一行，自动忽略null</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">不分组的话默认整张表是一组</span><br><span class="line"> max()</span><br><span class="line"> min()</span><br><span class="line"> sum()</span><br><span class="line"> avg() //不考虑null的行</span><br><span class="line"> count()</span><br><span class="line"> </span><br><span class="line"> count (*) from emp;//即总行数</span><br><span class="line"> </span><br></pre></td></tr></table></figure><ol><li>分组函数不能直接使用在where中      </li><li>分组函数可以连起来用</li></ol><h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><ol><li><p>例如计算每个部门的工资和</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ...</span><br><span class="line"><span class="keyword">from</span> ...</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> ...</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li>关键字的执行顺序</li></ol><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> job,<span class="keyword">sum</span>(sal) <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno;//当分组的时候，<span class="keyword">select</span>只能跟分组函数和用来分组的字段名。</span><br></pre></td></tr></table></figure><p>where不能用分组函数，只能用having，但是having不能单独用，且能用where尽量用where</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">from</span><br><span class="line">where</span><br><span class="line">group by //后面跟多个字段时，相当于把两个字段合成一个字段</span><br><span class="line">having</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span></span><br></pre></td></tr></table></figure><h3 id="一些关键字"><a href="#一些关键字" class="headerlink" title="一些关键字"></a>一些关键字</h3><p><code>distinct</code>去重</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> job,deptno <span class="keyword">from</span> emp;//表示job 和deptno当成一个字段来去重</span><br><span class="line"><span class="keyword">select</span> job, <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp;//错误写法</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span> (disinct job) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><blockquote><p>从一张表叫单表查询，多个表称为连接查询，分为SQL92,SQL99，重点学习99</p></blockquote><p>根据连接方式分类：</p><ul><li>内连接<ul><li>等值连接</li><li>非等值连接</li><li>自连接</li></ul></li><li>外连接<ul><li>左外连接（左连接）</li><li>右外连接（右连接）</li></ul></li><li>全连接（不讲）</li></ul><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,dname <span class="keyword">from</span> emp,dept;//没有限制会匹配所有的（结果是两个行数乘积）笛卡尔积</span><br><span class="line"><span class="keyword">select</span> e.ename, d.dname <span class="keyword">from</span> emp e, dept d <span class="keyword">where</span> e,deptno = d.deptno;//注意from后面起的别名，以及.的应用</span><br></pre></td></tr></table></figure><h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><h5 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">//sql92语法</span><br><span class="line"><span class="keyword">select</span> e.ename, d.dname <span class="keyword">from</span> emp e, dept d <span class="keyword">where</span> e,deptno = d.deptno <span class="keyword">and</span> 其他条件;</span><br><span class="line"></span><br><span class="line">//sql99语法</span><br><span class="line"><span class="keyword">select</span> e.name, d.dname <span class="keyword">from</span> emp e (<span class="keyword">inner</span>) <span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno = d.deptno <span class="keyword">where</span> 过滤条件；</span><br></pre></td></tr></table></figure><blockquote><p>注意，92的语法结构不清晰，因为表连接的条件和数据筛选条件放在一起，结构不清晰。99的on用来表连接条件，where用来筛选数据。结构清晰，92不用了！太tm老了！</p></blockquote><p><code>inner</code>可以省略，妈的，虽然可读性好，一眼就看出来了内连接，但是很麻烦，省略了吧</p><h5 id="非等值连接"><a href="#非等值连接" class="headerlink" title="非等值连接"></a>非等值连接</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename, e.sal, s.grade</span><br><span class="line"><span class="keyword">from</span> emp e (<span class="keyword">inner</span>) <span class="keyword">join</span> salgrade s</span><br><span class="line"><span class="keyword">on</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal; </span><br></pre></td></tr></table></figure><h5 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h5><blockquote><p>一张表看成两张表，分别起别名，最后会少一个，因为有个NULL！领导查不出来了！</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e1.ename, e2.ename</span><br><span class="line"><span class="keyword">from</span> emp e1 <span class="keyword">join</span> emp e2</span><br><span class="line"><span class="keyword">on</span> e1.mgr = e2.empno;</span><br></pre></td></tr></table></figure><h4 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h4><h5 id="左、右连接"><a href="#左、右连接" class="headerlink" title="左、右连接"></a>左、右连接</h5><blockquote><p>在join前加left或者right，即转换为外连接，outer可以省略。以left为例，在on的基础上，如果join左边表某一条在右边中没有匹配，那么依然显示。因此，left使左边表成为主表，right相反。而内连接两个表是平等的。</p></blockquote><figure class="highlight"><table><tr><td class="code"><pre><span class="line">//对上边自连接的改进</span><br><span class="line">mysql&gt; select e1.ename, e2.ename</span><br><span class="line">    -&gt; from emp e1 left (outer) join emp e2</span><br><span class="line">    -&gt; on e1.mgr = e2.empno;</span><br></pre></td></tr></table></figure><h5 id="全连接"><a href="#全连接" class="headerlink" title="全连接"></a>全连接</h5><figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; select e1.ename, e2.ename</span><br><span class="line">    -&gt; from emp e1 full (outer) join emp e2</span><br><span class="line">    -&gt; on e1.mgr = e2.empno;</span><br></pre></td></tr></table></figure><h5 id="交叉连接"><a href="#交叉连接" class="headerlink" title="交叉连接"></a>交叉连接</h5><blockquote><p>用笛卡尔积，返回所有的匹配</p></blockquote><figure class="highlight"><table><tr><td class="code"><pre><span class="line">mysql&gt; select e1.ename, e2.ename</span><br><span class="line">    -&gt; from emp e1 cross (outer) join emp e2</span><br></pre></td></tr></table></figure><h4 id="多张表的连接"><a href="#多张表的连接" class="headerlink" title="多张表的连接"></a>多张表的连接</h4><blockquote><p>内外join可以混合使用</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> e.ename, d.dname, e.sal, s.grade</span><br><span class="line"><span class="keyword">from</span> emp e </span><br><span class="line"><span class="keyword">join</span> dept d <span class="keyword">on</span> e.deptno = d.deptno</span><br><span class="line"><span class="keyword">join</span> salgrade s <span class="keyword">on</span> e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br></pre></td></tr></table></figure><h3 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h3><blockquote><p>嵌套查询</p><p>把一个查询结果放在select、from、where后面</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal &gt; (<span class="keyword">select</span> <span class="keyword">min</span>(sal) <span class="keyword">from</span> emp);//不能直接在where里使用分组函数</span><br></pre></td></tr></table></figure><blockquote><p>当放在select后面时，了解一下</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,sal,(selct dname <span class="keyword">from</span> dept <span class="keyword">where</span> dept.depno = emp.depno) <span class="keyword">from</span> emp;</span><br></pre></td></tr></table></figure><h3 id="union"><a href="#union" class="headerlink" title="union"></a>union</h3><blockquote><p>可以将两个结果拼接起来，但是两个结果的列数应该一样，表头和第一个一样。oracle要求数据类型也要一样。</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ........</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> ........;</span><br></pre></td></tr></table></figure><h3 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h3><blockquote><p>放在最后，限制取出数量 limit startIndex(缺省值0）, length</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,sal</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">2</span>,<span class="number">3</span>; //第三到第五</span><br></pre></td></tr></table></figure><blockquote><p>常用来分页显示</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> ename,sal</span><br><span class="line"><span class="keyword">from</span> emp</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span></span><br><span class="line"><span class="keyword">limit</span> <span class="number">0</span>,<span class="number">3</span>;</span><br><span class="line">//第一页</span><br><span class="line">limit 3,3;</span><br><span class="line">//第二页</span><br><span class="line">limit 6,3;</span><br><span class="line">//第三页</span><br><span class="line">limit 9,3;</span><br></pre></td></tr></table></figure><h2 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h2><h3 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> talbe_name(</span><br><span class="line">字段名<span class="number">1</span> 数据类型，</span><br><span class="line">    字段名<span class="number">2</span> 数据类型</span><br><span class="line">)；</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_student(</span><br><span class="line"><span class="keyword">no</span> <span class="built_in">int</span>,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">    sex <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">default</span> <span class="string">&#x27;m&#x27;</span>,//通过<span class="keyword">default</span>指定默认值，否则为<span class="literal">NULL</span></span><br><span class="line">    age <span class="built_in">int</span>(<span class="number">3</span>),</span><br><span class="line">    email <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">varchar 可变长度字符串，比较智能，会根据实际长度分配空间，最长255</span><br><span class="line">char 定长字符串，效率高，浪费空间，性别给我用char！最长255</span><br><span class="line">int 最长11</span><br><span class="line">bigint</span><br><span class="line">float</span><br><span class="line">double</span><br><span class="line">date 短日期</span><br><span class="line">datetime 长日期</span><br><span class="line">clob 字符大对象（最多可以存储4G的字符串，例如存储一个文章）charactor large object</span><br><span class="line">blob 二进制大对象 binary large object（插入的时候需要用到io流）</span><br></pre></td></tr></table></figure><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t_student;</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> t_student;//不会报错</span><br></pre></td></tr></table></figure><h2 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h2><h3 id="增insert"><a href="#增insert" class="headerlink" title="增insert"></a>增insert</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_student(字段名<span class="number">1</span>， 字段名<span class="number">2</span>) <span class="keyword">values</span>(值<span class="number">1</span>， 值<span class="number">2</span>);//如果字段名和括号都不写，那么值需要一一对应。不建议不x</span><br></pre></td></tr></table></figure><h4 id="插入date类型"><a href="#插入date类型" class="headerlink" title="插入date类型"></a>插入date类型</h4><blockquote><p>假设有一个字段是date类型，那么怎么插入呢</p></blockquote><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(<span class="keyword">id</span>, <span class="keyword">name</span>, birth) <span class="keyword">values</span>(<span class="number">2</span>, <span class="string">&#x27;lisi&#x27;</span>, <span class="keyword">str_to_date</span>(<span class="string">&#x27;1990-10-01&#x27;</span>,<span class="string">&#x27;%Y-%m-%d&#x27;</span>));</span><br></pre></td></tr></table></figure><p>以上语句需要注意的是：</p><ol><li><p><code>str_to_date()</code>第一个参数是字符串，第二个是对应的日期格式，分别有<code>%Y %m %d %h %i %s</code>注意大小写。</p></li><li><p>当要select的时候可以用<code>date_format()</code>来转换，如果不转换默认是上边的格式，即年-月-日。</p></li><li><p><strong>当字符串是年月日的类型时，可以直接传字符串</strong>。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(<span class="keyword">id</span>, <span class="keyword">name</span>, birth) <span class="keyword">values</span>(<span class="number">2</span>, <span class="string">&#x27;lisi&#x27;</span>, <span class="string">&#x27;1990-10-01&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ol><h4 id="date与datetime"><a href="#date与datetime" class="headerlink" title="date与datetime"></a>date与datetime</h4><ol><li><code>datetime</code>包括年月日时分秒。</li><li>长日期默认格式是<code>%Y-&amp;m-%d %h:%i:%s</code></li><li>具体用法同<code>date</code></li><li><code>now()</code>获取当前系统时间，类型是<code>datetime</code></li></ol><h3 id="删delete"><a href="#删delete" class="headerlink" title="删delete"></a>删delete</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> t_user</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">2</span>;//不加会删除所有的</span><br></pre></td></tr></table></figure><h3 id="改update"><a href="#改update" class="headerlink" title="改update"></a>改update</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">update</span> t_user</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">name</span> = <span class="string">&#x27;jack&#x27;</span>, birth = <span class="string">&#x27;2000-10-04&#x27;</span></span><br><span class="line"><span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">2</span>;//不加条件会改所有的！</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基础配置&quot;&gt;&lt;a href=&quot;#基础配置&quot; class=&quot;headerlink&quot; title=&quot;基础配置&quot;&gt;&lt;/a&gt;基础配置&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;服务端口默认&lt;code&gt;3306&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装的时候选择自动添加&lt;code&gt;path&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编码格式&lt;code&gt;utf8&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;windows启动服务&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;net start 服务名称（mysql）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net stop 服务名称&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;登录&quot;&gt;&lt;a href=&quot;#登录&quot; class=&quot;headerlink&quot; title=&quot;登录&quot;&gt;&lt;/a&gt;登录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先确保mysql服务已经打开，不确定话&lt;code&gt;net start mysql&lt;/code&gt;试试&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;mysql -uroot -pxxxx&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;xxxx为你的密码，也可以不显示密码登录&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mysql -uroot -p&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后输入密码（此时密码以*显示）即可登录。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;密码重置（8-0-23）&quot;&gt;&lt;a href=&quot;#密码重置（8-0-23）&quot; class=&quot;headerlink&quot; title=&quot;密码重置（8.0.23）&quot;&gt;&lt;/a&gt;密码重置（8.0.23）&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;网上老的教程可能已经过时，8.0以上不支持&lt;code&gt;mysqld --skip-grant-tables&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开命令窗口cmd，输入命令：&lt;code&gt;net stop mysql&lt;/code&gt;，停止MySQL服务，&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;开启跳过密码验证登录的MySQL服务，输入命令，然后不要关闭此窗口，命令如下：&lt;/p&gt;
&lt;p&gt; &lt;code&gt;mysqld --console --skip-grant-tables --shared-memory&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;再打开一个新的cmd，无密码登录MySQL，输入登录命令：&lt;code&gt;mysql -u root -p&lt;/code&gt;，然后回车即可&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;密码置为空，命令如下：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;use mysql&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;update user set authentication_string=&amp;#39;&amp;#39; where user=&amp;#39;root&amp;#39;;&lt;/code&gt;&lt;/p&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;&lt;p&gt;退出，命令如下&lt;/p&gt;
&lt;p&gt;&lt;code&gt;quit&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;关闭以&lt;code&gt;-console --skip-grant-tables --shared-memory&lt;/code&gt;启动的MySQL服务（即关闭第一个打开的cmd窗口）&lt;/p&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;&lt;p&gt;打开cmd，输入：&lt;code&gt;net start mysql&lt;/code&gt;启动MySQL服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;步骤4密码已经置空，所以无密码状态登录MySQL，输入登录命令：mysql -u root -p，然后回车即可登录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改密码，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;root&amp;#x27;&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&amp;#x27;localhost&amp;#x27;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;IDENTIFIED&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;WITH&lt;/span&gt; mysql_native_password &lt;span class=&quot;keyword&quot;&gt;BY&lt;/span&gt; 你的密码&lt;span class=&quot;string&quot;&gt;&amp;#x27;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;验证更改后密码正确登录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入quit，退出当前登录，输入登录命令：&lt;code&gt;mysql -u root -p&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入密码，成功登录，到此，重置密码结束。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;以&lt;code&gt;;&lt;/code&gt;结尾&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;show databases;&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="notes" scheme="https://asea.fun/tags/notes/"/>
    
      <category term="mysql" scheme="https://asea.fun/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>《The_Computer_and_the_Brain》词汇</title>
    <link href="https://asea.fun/post/f857d47.html"/>
    <id>https://asea.fun/post/f857d47.html</id>
    <published>2021-09-14T09:13:08.000Z</published>
    <updated>2021-09-14T09:15:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="The-Computer-and-the-Brain"><a href="#The-Computer-and-the-Brain" class="headerlink" title="The_Computer_and_the_Brain"></a>The_Computer_and_the_Brain</h1><blockquote><p>也太难了…</p></blockquote><table><thead><tr><th align="center">Word</th><th align="center">释义</th></tr></thead><tbody><tr><td align="center">discuss</td><td align="center">讨论</td></tr><tr><td align="center">neurologist</td><td align="center">神经病学家</td></tr><tr><td align="center">psychiatrist</td><td align="center">精神病学家</td></tr><tr><td align="center">essential</td><td align="center">基本的、必要的</td></tr><tr><td align="center">privilege</td><td align="center">特权、优待</td></tr><tr><td align="center">analog</td><td align="center">模拟的</td></tr><tr><td align="center">represent</td><td align="center">代表</td></tr><tr><td align="center">quantity</td><td align="center">大量、数量</td></tr><tr><td align="center">pre-assegned</td><td align="center">预先指定的</td></tr><tr><td align="center">current</td><td align="center">电流</td></tr><tr><td align="center">voltage</td><td align="center">电压</td></tr><tr><td align="center">i.e.</td><td align="center">也就是</td></tr><tr><td align="center">predetermined</td><td align="center">预先决定的</td></tr><tr><td align="center">organs</td><td align="center">器官、机构</td></tr><tr><td align="center">perform</td><td align="center">执行</td></tr><tr><td align="center">representative</td><td align="center">典型的</td></tr><tr><td align="center">arithmetic</td><td align="center">数字，算数</td></tr><tr><td align="center">addition</td><td align="center">+</td></tr><tr><td align="center">subtraction</td><td align="center">-</td></tr><tr><td align="center">multiplication</td><td align="center">*</td></tr><tr><td align="center">division</td><td align="center">/</td></tr><tr><td align="center">parallel</td><td align="center">平行的</td></tr><tr><td align="center">antparallel</td><td align="center">反平行的</td></tr><tr><td align="center">componentry</td><td align="center">元件部分</td></tr><tr><td align="center">relevant</td><td align="center">相关的</td></tr><tr><td align="center">unusual</td><td align="center">不同寻常的</td></tr><tr><td align="center">remarkable</td><td align="center">卓越的</td></tr><tr><td align="center">rather</td><td align="center">相当</td></tr><tr><td align="center">attribute</td><td align="center">属性</td></tr><tr><td align="center">analyzer</td><td align="center">分析器</td></tr><tr><td align="center">proceed</td><td align="center">开始、继续进行</td></tr><tr><td align="center">gear</td><td align="center">齿轮、装置、工具</td></tr><tr><td align="center">axle</td><td align="center">车轴</td></tr><tr><td align="center">entirely</td><td align="center">完全地</td></tr><tr><td align="center">differential</td><td align="center">微分的，差别的、微分</td></tr><tr><td align="center">integrator</td><td align="center">积分器、积分电路</td></tr><tr><td align="center">integral</td><td align="center">积分的</td></tr><tr><td align="center">scheme</td><td align="center">计划、组合、方案</td></tr><tr><td align="center">threefold</td><td align="center">三倍的，有三部分的</td></tr><tr><td align="center">trick</td><td align="center">技巧</td></tr><tr><td align="center">implicit</td><td align="center">含蓄的</td></tr><tr><td align="center">particular</td><td align="center">详细的</td></tr><tr><td align="center">short-circuited</td><td align="center">短路的</td></tr><tr><td align="center">iteration</td><td align="center">迭代</td></tr><tr><td align="center">approximation</td><td align="center">近似</td></tr><tr><td align="center">justification</td><td align="center">理由、辩护</td></tr><tr><td align="center">economical</td><td align="center">经济的</td></tr><tr><td align="center">specifically</td><td align="center">特别的</td></tr><tr><td align="center">subtle</td><td align="center">微妙的、精细的</td></tr><tr><td align="center">efficient</td><td align="center">有效率的</td></tr><tr><td align="center">simpler</td><td align="center">更简单的</td></tr><tr><td align="center">extensive</td><td align="center">广泛的</td></tr><tr><td align="center">equation</td><td align="center">等式、相等</td></tr><tr><td align="center">primarily</td><td align="center">首先；主要的</td></tr><tr><td align="center">previously</td><td align="center">以前的</td></tr><tr><td align="center">decimal</td><td align="center">十进制、小数的</td></tr><tr><td align="center">conventional</td><td align="center">传统的</td></tr><tr><td align="center">represent</td><td align="center">表现为</td></tr><tr><td align="center">sequence</td><td align="center">顺序</td></tr><tr><td align="center">embodiments</td><td align="center">体现、化身</td></tr><tr><td align="center">suffice</td><td align="center">使满足</td></tr><tr><td align="center">inadequate</td><td align="center">不充分的</td></tr><tr><td align="center">adequate</td><td align="center">足够、充分</td></tr><tr><td align="center">hence</td><td align="center">因此</td></tr><tr><td align="center">see below</td><td align="center">见下文</td></tr><tr><td align="center">electrical pulse</td><td align="center">电脉冲</td></tr><tr><td align="center">positive polarity</td><td align="center">正极</td></tr><tr><td align="center">negative</td><td align="center">负极</td></tr><tr><td align="center">observation</td><td align="center">观察监视</td></tr><tr><td align="center">redundant</td><td align="center">冗余的</td></tr><tr><td align="center">simultanious</td><td align="center">同时</td></tr><tr><td align="center">stipulate</td><td align="center">保证</td></tr><tr><td align="center">correspond</td><td align="center">符合</td></tr><tr><td align="center">indication</td><td align="center">指出、迹象</td></tr><tr><td align="center">valid</td><td align="center">合法、有效</td></tr><tr><td align="center">electrical gating devices</td><td align="center">电门装置</td></tr><tr><td align="center">electromechanical</td><td align="center">机电的</td></tr><tr><td align="center">relays</td><td align="center">继电器</td></tr><tr><td align="center">crystal</td><td align="center">晶体</td></tr><tr><td align="center">diodes</td><td align="center">二极管</td></tr><tr><td align="center">ferromagnetic</td><td align="center">铁磁的</td></tr><tr><td align="center">transistor</td><td align="center">晶体管</td></tr><tr><td align="center">preferably</td><td align="center">最好是，更合意的</td></tr><tr><td align="center">cf. below</td><td align="center">参看下面</td></tr><tr><td align="center">temporal</td><td align="center">暂时的</td></tr><tr><td align="center">adjustable</td><td align="center">可调节的</td></tr><tr><td align="center">matters</td><td align="center">事件、影响</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;The-Computer-and-the-Brain&quot;&gt;&lt;a href=&quot;#The-Computer-and-the-Brain&quot; class=&quot;headerlink&quot; title=&quot;The_Computer_and_the_Brain&quot;&gt;&lt;/a&gt;The_Computer_and_the_Brain&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;也太难了…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;Word&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;释义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;discuss&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;讨论&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;neurologist&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;神经病学家&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;psychiatrist&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;精神病学家&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;essential&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;基本的、必要的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;privilege&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;特权、优待&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;analog&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;模拟的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;represent&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;代表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;quantity&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;大量、数量&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;pre-assegned&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;预先指定的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;current&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;电流&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;voltage&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;电压&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;i.e.&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;也就是&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;predetermined&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;预先决定的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;organs&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;器官、机构&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;perform&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;执行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;representative&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;典型的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;arithmetic&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;数字，算数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;addition&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;+&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;subtraction&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;multiplication&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;division&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;/&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;parallel&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;平行的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;antparallel&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;反平行的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;componentry&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;元件部分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;relevant&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;相关的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;unusual&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;不同寻常的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;remarkable&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;卓越的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;rather&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;相当&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;attribute&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;属性&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;analyzer&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;分析器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;proceed&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;开始、继续进行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;gear&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;齿轮、装置、工具&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;axle&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;车轴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;entirely&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;完全地&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;differential&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;微分的，差别的、微分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;integrator&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;积分器、积分电路&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;integral&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;积分的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;scheme&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;计划、组合、方案&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;threefold&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;三倍的，有三部分的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;trick&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;技巧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;implicit&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;含蓄的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;particular&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;详细的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;short-circuited&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;短路的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;iteration&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;迭代&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;approximation&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;近似&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;justification&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;理由、辩护&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;economical&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;经济的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;specifically&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;特别的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;subtle&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;微妙的、精细的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;efficient&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;有效率的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;simpler&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;更简单的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;extensive&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;广泛的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;equation&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;等式、相等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;primarily&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;首先；主要的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;previously&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;以前的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;decimal&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;十进制、小数的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;conventional&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;传统的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;represent&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;表现为&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;sequence&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;顺序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;embodiments&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;体现、化身&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;suffice&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;使满足&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;inadequate&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;不充分的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;adequate&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;足够、充分&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;hence&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;因此&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;see below&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;见下文&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;electrical pulse&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;电脉冲&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;positive polarity&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;正极&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;negative&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;负极&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;observation&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;观察监视&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;redundant&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;冗余的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;simultanious&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;同时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;stipulate&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;保证&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;correspond&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;符合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;indication&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;指出、迹象&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;valid&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;合法、有效&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;electrical gating devices&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;电门装置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;electromechanical&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;机电的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;relays&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;继电器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;crystal&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;晶体&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;diodes&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;二极管&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;ferromagnetic&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;铁磁的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;transistor&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;晶体管&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;preferably&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;最好是，更合意的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;cf. below&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;参看下面&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;temporal&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;暂时的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;adjustable&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;可调节的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;matters&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;事件、影响&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;

    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="vocabulary note" scheme="https://asea.fun/tags/vocabulary-note/"/>
    
  </entry>
  
  <entry>
    <title>汇编语言</title>
    <link href="https://asea.fun/post/8e41db39.html"/>
    <id>https://asea.fun/post/8e41db39.html</id>
    <published>2021-09-13T11:34:25.000Z</published>
    <updated>2021-09-27T14:18:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h2><ol><li><p>e 写入</p></li><li><p>a 汇编指令</p></li><li><p>r 查看寄存器</p><ul><li>r 寄存器</li></ul></li><li><p>d 查看内存</p><ul><li>d 段地址:偏移地址 （结尾偏移地址）</li></ul></li><li><p>t 执行指令</p></li><li><p>e 修改内存数据</p><ul><li><p>e 段地址:偏移地址 数据1 数据2 数据3…</p></li><li><p>e 段地址:偏移地址</p><p>数据 空格 数据 空格（逐个询问）</p></li></ul></li><li><p>g执行到结束</p></li></ol><h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><p>通用：ax, bx, cx, dx, ip, sp </p><p>段：cs(control), ds(data)，ss(stack)</p><p><img src="https://pic.imgdb.cn/item/6151c0912ab3f51d91b47ad7.jpg" alt></p><h2 id="汇编指令"><a href="#汇编指令" class="headerlink" title="汇编指令"></a>汇编指令</h2><h3 id="mov"><a href="#mov" class="headerlink" title="mov"></a>mov</h3><p>8086不支持将立即数直接送到段寄存器</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mov ax,1000H</span><br><span class="line">mov ax,bx</span><br><span class="line">mov ax,[0]</span><br><span class="line">mov [0],ax</span><br><span class="line">mov [0],ds</span><br><span class="line">mov ds,[0]</span><br><span class="line">mov ds,ax</span><br><span class="line">mov ax,ds</span><br><span class="line"></span><br><span class="line">对于add，段寄存器不支持，如果是内存单元，不能两个都是内存单元</span><br></pre></td></tr></table></figure><h3 id="jmp"><a href="#jmp" class="headerlink" title="jmp"></a>jmp</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jmp 1000:3 &#x2F;&#x2F;cs为1000，ip为3</span><br><span class="line">jmp 4 &#x2F;&#x2F;修改ip为4</span><br></pre></td></tr></table></figure><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><blockquote><p>系统会自动改动sp，但是不会检测是否越界，无论是栈顶还是栈底，没有这样的寄存器！pop和push只支持字数据</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">push ax &#x2F;&#x2F;ax中的数据送入栈，sp-&#x3D;2</span><br><span class="line">pop ax &#x2F;&#x2F;从栈顶取出数据送入ax，s注意pop以后sp会改动，但是原来的数据是依然存在的，只是不在栈中而已。</span><br></pre></td></tr></table></figure><h2 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h2><ol><li>当常量作为偏移地址的时候，最好加上段前缀，不然会当作把常量的值给寄存器 </li><li>在多个segment的程序中，start从code段开始，且不需要初始化cs，但是ds和ss是需要初始化的。</li><li>开始以后ds对应的就是程序的起始地址，ds+100H才是真正的data段起始地址</li></ol><h2 id="字符处理"><a href="#字符处理" class="headerlink" title="字符处理"></a>字符处理</h2><ol><li>大写字母+20H = 小写字母（ASCII）<ul><li>小写转大写 <code>and al, 11011111b</code></li><li>小写转大写<code>or al, 00100000b</code></li></ul></li></ol><h2 id="寻址"><a href="#寻址" class="headerlink" title="寻址"></a>寻址</h2><blockquote><p>bp,bx称为基址，si、di称为变址  idata是立即数 。要么单独用，要么基址变址，要么加个立即数，没有基址基址，没有变址变址，没有立即数立即数。注意bp默认是ss段</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mov ax,[200+bx] </span><br><span class="line"></span><br><span class="line">mov ax,200[bx] </span><br><span class="line"></span><br><span class="line">mov ax,[bx].200 </span><br><span class="line"></span><br><span class="line">mov ax,[bx+si]</span><br><span class="line"></span><br><span class="line">mov ax,[bx].200[si]</span><br><span class="line"></span><br><span class="line">mov ax,\[bx][si].200</span><br><span class="line"></span><br><span class="line">mov ax,\[bx][si]</span><br><span class="line"></span><br><span class="line">mov ax,[bp+si] </span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/6151bcce2ab3f51d91af7b5a.jpg" alt></p><h3 id="变址寄存器"><a href="#变址寄存器" class="headerlink" title="变址寄存器"></a>变址寄存器</h3><p>si di可以和bx类似的寻址用法，不同的是，si di只能作为16位来用，而bx可以拆开</p><h3 id="loop"><a href="#loop" class="headerlink" title="loop"></a>loop</h3><p>双重循环的时候需要注意，cx的值会被你改变了，所以可以用dx来保存cx的值，或者拿一个内存空间来保存cx，或者<strong>拿一个栈</strong>，push+pop来保存cx，建议用栈。</p><h2 id="ptr"><a href="#ptr" class="headerlink" title="ptr"></a>ptr</h2><blockquote><p>当指令中没有寄存器，例如要把立即数送到某个内存，那么就不知是字还是字节还是双字</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mov word ptr ds:[0],1</span><br><span class="line">inc word ptr [bx]</span><br><span class="line">inc byte ptr [bx]</span><br></pre></td></tr></table></figure><h2 id="div"><a href="#div" class="headerlink" title="div"></a>div</h2><blockquote><p>被除数默认是ax或者dx，ax</p></blockquote><p><img src="https://pic.imgdb.cn/item/6151c8222ab3f51d91bf4a32.jpg" alt></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">div bl</span><br><span class="line">div word ptr es:[0]</span><br></pre></td></tr></table></figure><h2 id="mul"><a href="#mul" class="headerlink" title="mul"></a>mul</h2><h2 id="dup"><a href="#dup" class="headerlink" title="dup"></a>dup</h2><blockquote><p>伪指令，用来数据重复</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">db 3 dup(0)</span><br><span class="line">db 3 dup(0,1,2)</span><br><span class="line">db 3 dup(&#39;abc&#39;, &#39;ACB&#39;)</span><br><span class="line">db 200 dup(0) ; 定义栈段</span><br></pre></td></tr></table></figure><h2 id="转移指令"><a href="#转移指令" class="headerlink" title="转移指令"></a>转移指令</h2><blockquote><p>首先认识一下offset，在程序中用s来作为标号（例如start之类的就是标号），<code>offset s</code>可以取出s的地址。</p></blockquote><p><img src="/post/8e41db39.htm/C:%5CUsers%5C86191%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210927221608673.png" alt="转移"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;debug&quot;&gt;&lt;a href=&quot;#debug&quot; class=&quot;headerlink&quot; title=&quot;debug&quot;&gt;&lt;/a&gt;debug&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;e 写入&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;a 汇编指令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;r 查看寄存器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;r 寄存器&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;d 查看内存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;d 段地址:偏移地址 （结尾偏移地址）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;t 执行指令&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;e 修改内存数据&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;e 段地址:偏移地址 数据1 数据2 数据3…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;e 段地址:偏移地址&lt;/p&gt;
&lt;p&gt;数据 空格 数据 空格（逐个询问）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;g执行到结束&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;寄存器&quot;&gt;&lt;a href=&quot;#寄存器&quot; class=&quot;headerlink&quot; title=&quot;寄存器&quot;&gt;&lt;/a&gt;寄存器&lt;/h2&gt;&lt;p&gt;通用：ax, bx, cx, dx, ip, sp &lt;/p&gt;
&lt;p&gt;段：cs(control), ds(data)，ss(stack)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/6151c0912ab3f51d91b47ad7.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;汇编指令&quot;&gt;&lt;a href=&quot;#汇编指令&quot; class=&quot;headerlink&quot; title=&quot;汇编指令&quot;&gt;&lt;/a&gt;汇编指令&lt;/h2&gt;&lt;h3 id=&quot;mov&quot;&gt;&lt;a href=&quot;#mov&quot; class=&quot;headerlink&quot; title=&quot;mov&quot;&gt;&lt;/a&gt;mov&lt;/h3&gt;&lt;p&gt;8086不支持将立即数直接送到段寄存器&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mov ax,1000H&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mov ax,bx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mov ax,[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mov [0],ax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mov [0],ds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mov ds,[0]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mov ds,ax&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mov ax,ds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对于add，段寄存器不支持，如果是内存单元，不能两个都是内存单元&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="assembler" scheme="https://asea.fun/tags/assembler/"/>
    
  </entry>
  
  <entry>
    <title>数据结构</title>
    <link href="https://asea.fun/post/79666db.html"/>
    <id>https://asea.fun/post/79666db.html</id>
    <published>2021-09-12T03:00:45.000Z</published>
    <updated>2021-09-12T03:03:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ol><li><p>数据对象，数据元素和数据项</p></li><li><p>四类基本结构</p><ol><li>集合</li><li>线性结构</li><li>树形结构</li><li>图状结构</li></ol></li><li><p>逻辑结构分类</p><ol><li>线性结构<ul><li>线性表</li><li>栈</li><li>队列</li><li>数组、广义表</li><li>字符串</li></ul></li><li>非线性结构<ul><li>树、二叉树</li><li>图</li></ul></li></ol></li><li><p>存储结构分类</p><ol><li>顺序存储结构<ul><li>向量</li><li>一维数组</li></ul></li><li>非顺序存储结构（链式）<ul><li>链接表</li></ul></li></ol></li><li><p>数据类型</p><ol><li>原子类型</li><li>结构类型</li></ol></li><li><p>ADT（抽象数据类型）</p><p>​    （D,S,P)，分别表示数据对象，关系集，操作集。</p></li><li><p>算法</p><ol><li>特性<ul><li>有穷性</li><li>确定性</li><li>可行性</li><li>输入：0、多个</li><li>输出：1、多个</li></ul></li><li>设计要求<ul><li>正确性</li><li>可读性</li><li>健壮性</li><li>高效与低存储量</li></ul></li><li>描述工具<ul><li>自然语言</li><li>程序设计语言</li><li>流程图</li><li>伪码</li><li>类C√</li></ul></li></ol></li></ol><h2 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h2><p>前驱、后继</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;数据对象，数据元素和数据项&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;四类基本结构&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;集合&lt;/li&gt;
&lt;li&gt;线性结构&lt;/li&gt;
&lt;li&gt;树形结构&lt;/li&gt;
&lt;li&gt;图状结构&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;逻辑结构分类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;线性结构&lt;ul&gt;
&lt;li&gt;线性表&lt;/li&gt;
&lt;li&gt;栈&lt;/li&gt;
&lt;li&gt;队列&lt;/li&gt;
&lt;li&gt;数组、广义表&lt;/li&gt;
&lt;li&gt;字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非线性结构&lt;ul&gt;
&lt;li&gt;树、二叉树&lt;/li&gt;
&lt;li&gt;图&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;存储结构分类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顺序存储结构&lt;ul&gt;
&lt;li&gt;向量&lt;/li&gt;
&lt;li&gt;一维数组&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非顺序存储结构（链式）&lt;ul&gt;
&lt;li&gt;链接表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据类型&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原子类型&lt;/li&gt;
&lt;li&gt;结构类型&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ADT（抽象数据类型）&lt;/p&gt;
&lt;p&gt;​    （D,S,P)，分别表示数据对象，关系集，操作集。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;算法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;特性&lt;ul&gt;
&lt;li&gt;有穷性&lt;/li&gt;
&lt;li&gt;确定性&lt;/li&gt;
&lt;li&gt;可行性&lt;/li&gt;
&lt;li&gt;输入：0、多个&lt;/li&gt;
&lt;li&gt;输出：1、多个&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设计要求&lt;ul&gt;
&lt;li&gt;正确性&lt;/li&gt;
&lt;li&gt;可读性&lt;/li&gt;
&lt;li&gt;健壮性&lt;/li&gt;
&lt;li&gt;高效与低存储量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;描述工具&lt;ul&gt;
&lt;li&gt;自然语言&lt;/li&gt;
&lt;li&gt;程序设计语言&lt;/li&gt;
&lt;li&gt;流程图&lt;/li&gt;
&lt;li&gt;伪码&lt;/li&gt;
&lt;li&gt;类C√&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;线性表&quot;&gt;&lt;a href=&quot;#线性表&quot; class=&quot;headerlink&quot; title=&quot;线性表&quot;&gt;&lt;/a&gt;线性表&lt;/h2&gt;&lt;p&gt;前驱、后继&lt;/p&gt;

    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>数据结构新版</title>
    <link href="https://asea.fun/post/79666db.html"/>
    <id>https://asea.fun/post/79666db.html</id>
    <published>2021-09-12T03:00:45.000Z</published>
    <updated>2021-09-12T03:03:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ol><li><p>数据对象，数据元素和数据项</p></li><li><p>四类基本结构</p><ol><li>集合</li><li>线性结构</li><li>树形结构</li><li>图状结构</li></ol></li><li><p>逻辑结构分类</p><ol><li>线性结构<ul><li>线性表</li><li>栈</li><li>队列</li><li>数组、广义表</li><li>字符串</li></ul></li><li>非线性结构<ul><li>树、二叉树</li><li>图</li></ul></li></ol></li><li><p>存储结构分类</p><ol><li>顺序存储结构<ul><li>向量</li><li>一维数组</li></ul></li><li>非顺序存储结构（链式）<ul><li>链接表</li></ul></li></ol></li><li><p>数据类型</p><ol><li>原子类型</li><li>结构类型</li></ol></li><li><p>ADT（抽象数据类型）</p><p>​    （D,S,P)，分别表示数据对象，关系集，操作集。</p></li><li><p>算法</p><ol><li>特性<ul><li>有穷性</li><li>确定性</li><li>可行性</li><li>输入：0、多个</li><li>输出：1、多个</li></ul></li><li>设计要求<ul><li>正确性</li><li>可读性</li><li>健壮性</li><li>高效与低存储量</li></ul></li><li>描述工具<ul><li>自然语言</li><li>程序设计语言</li><li>流程图</li><li>伪码</li><li>类C√</li></ul></li></ol></li></ol><h2 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h2><p>前驱、后继</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; title=&quot;基本概念&quot;&gt;&lt;/a&gt;基本概念&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;数据对象，数据元素和数据项&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;四类基本结构&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;集合&lt;/li&gt;
&lt;li&gt;线性结构&lt;/li&gt;
&lt;li&gt;树形结构&lt;/li&gt;
&lt;li&gt;图状结构&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;逻辑结构分类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;线性结构&lt;ul&gt;
&lt;li&gt;线性表&lt;/li&gt;
&lt;li&gt;栈&lt;/li&gt;
&lt;li&gt;队列&lt;/li&gt;
&lt;li&gt;数组、广义表&lt;/li&gt;
&lt;li&gt;字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非线性结构&lt;ul&gt;
&lt;li&gt;树、二叉树&lt;/li&gt;
&lt;li&gt;图&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;存储结构分类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顺序存储结构&lt;ul&gt;
&lt;li&gt;向量&lt;/li&gt;
&lt;li&gt;一维数组&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非顺序存储结构（链式）&lt;ul&gt;
&lt;li&gt;链接表&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数据类型&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原子类型&lt;/li&gt;
&lt;li&gt;结构类型&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ADT（抽象数据类型）&lt;/p&gt;
&lt;p&gt;​    （D,S,P)，分别表示数据对象，关系集，操作集。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;算法&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;特性&lt;ul&gt;
&lt;li&gt;有穷性&lt;/li&gt;
&lt;li&gt;确定性&lt;/li&gt;
&lt;li&gt;可行性&lt;/li&gt;
&lt;li&gt;输入：0、多个&lt;/li&gt;
&lt;li&gt;输出：1、多个&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设计要求&lt;ul&gt;
&lt;li&gt;正确性&lt;/li&gt;
&lt;li&gt;可读性&lt;/li&gt;
&lt;li&gt;健壮性&lt;/li&gt;
&lt;li&gt;高效与低存储量&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;描述工具&lt;ul&gt;
&lt;li&gt;自然语言&lt;/li&gt;
&lt;li&gt;程序设计语言&lt;/li&gt;
&lt;li&gt;流程图&lt;/li&gt;
&lt;li&gt;伪码&lt;/li&gt;
&lt;li&gt;类C√&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;线性表&quot;&gt;&lt;a href=&quot;#线性表&quot; class=&quot;headerlink&quot; title=&quot;线性表&quot;&gt;&lt;/a&gt;线性表&lt;/h2&gt;&lt;p&gt;前驱、后继&lt;/p&gt;

    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>记录一次机器人更新的问题</title>
    <link href="https://asea.fun/post/ef959c76.html"/>
    <id>https://asea.fun/post/ef959c76.html</id>
    <published>2021-09-11T07:51:14.000Z</published>
    <updated>2021-09-11T07:51:14.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>由于这几天图片有时候发不出了，怀疑版本问题，但好久没有重启了，结果一重启mcl，然后自动更新让我彻底崩盘；<br>记录一下目前各包的版本号</p></blockquote><table><thead><tr><th>package</th><th>tag</th></tr></thead><tbody><tr><td>mcl</td><td>1.2.1</td></tr><tr><td>mah</td><td>1.12.0</td></tr><tr><td>gam</td><td>0.19.1</td></tr><tr><td>gb</td><td>0.8.11</td></tr></tbody></table><p><strong>以上缩写</strong>：<br>mirai-console-loader<br>mirai-api-http<br>girai-application-mirai<br>girai-broadcast</p><p><strong>中间有个坑：mah版本怎么切换？</strong><br>需要先移除原来的包</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mcl -r net.mamoe:mirai-api-http</span><br></pre></td></tr></table></figure><p>然后下载需要的版本，放到plugins即可。</p><p>如果不想自动更新的话可以<code>mcl -u</code>启动。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;由于这几天图片有时候发不出了，怀疑版本问题，但好久没有重启了，结果一重启mcl，然后自动更新让我彻底崩盘；&lt;br&gt;记录一下目前各包的版本号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;package&lt;/th&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;mcl&lt;/td&gt;
&lt;td&gt;1.2.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mah&lt;/td&gt;
&lt;td&gt;1.12.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gam&lt;/td&gt;
&lt;td&gt;0.19.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gb&lt;/td&gt;
&lt;td&gt;0.8.11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;以上缩写&lt;/strong&gt;：&lt;br&gt;mirai-console-loader&lt;br&gt;mirai-api-http&lt;br&gt;girai-application-mirai&lt;br&gt;girai-broadcast&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中间有个坑：mah版本怎么切换？&lt;/strong&gt;&lt;br&gt;需要先移除原来的包&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mcl -r net.mamoe:mirai-api-http&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后下载需要的版本，放到plugins即可。&lt;/p&gt;
&lt;p&gt;如果不想自动更新的话可以&lt;code&gt;mcl -u&lt;/code&gt;启动。&lt;/p&gt;

    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="robot" scheme="https://asea.fun/tags/robot/"/>
    
  </entry>
  
  <entry>
    <title>记录一次机器人更新的问题</title>
    <link href="https://asea.fun/post/ef959c76.html"/>
    <id>https://asea.fun/post/ef959c76.html</id>
    <published>2021-09-11T07:51:14.000Z</published>
    <updated>2021-09-12T03:03:03.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>由于这几天图片有时候发不出了，怀疑版本问题，但好久没有重启了，结果一重启mcl，然后自动更新让我彻底崩盘；<br>记录一下目前各包的版本号</p></blockquote><table><thead><tr><th>package</th><th>tag</th></tr></thead><tbody><tr><td>mcl</td><td>1.2.1</td></tr><tr><td>mah</td><td>1.12.0</td></tr><tr><td>gam</td><td>0.19.1</td></tr><tr><td>gb</td><td>0.8.11</td></tr></tbody></table><p><strong>以上缩写</strong>：<br>mirai-console-loader<br>mirai-api-http<br>girai-application-mirai<br>girai-broadcast</p><p><strong>中间有个坑：mah版本怎么切换？</strong><br>需要先移除原来的包</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mcl -r net.mamoe:mirai-api-http</span><br></pre></td></tr></table></figure><p>然后下载需要的版本，放到plugins即可。</p><p>如果不想自动更新的话可以<code>mcl -u</code>启动。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;由于这几天图片有时候发不出了，怀疑版本问题，但好久没有重启了，结果一重启mcl，然后自动更新让我彻底崩盘；&lt;br&gt;记录一下目前各包的版本号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;package&lt;/th&gt;
&lt;th&gt;tag&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;mcl&lt;/td&gt;
&lt;td&gt;1.2.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mah&lt;/td&gt;
&lt;td&gt;1.12.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gam&lt;/td&gt;
&lt;td&gt;0.19.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gb&lt;/td&gt;
&lt;td&gt;0.8.11&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;以上缩写&lt;/strong&gt;：&lt;br&gt;mirai-console-loader&lt;br&gt;mirai-api-http&lt;br&gt;girai-application-mirai&lt;br&gt;girai-broadcast&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中间有个坑：mah版本怎么切换？&lt;/strong&gt;&lt;br&gt;需要先移除原来的包&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mcl -r net.mamoe:mirai-api-http&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后下载需要的版本，放到plugins即可。&lt;/p&gt;
&lt;p&gt;如果不想自动更新的话可以&lt;code&gt;mcl -u&lt;/code&gt;启动。&lt;/p&gt;

    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="robot" scheme="https://asea.fun/tags/robot/"/>
    
  </entry>
  
  <entry>
    <title>玛丽怜梦录</title>
    <link href="https://asea.fun/post/c0562e47.html"/>
    <id>https://asea.fun/post/c0562e47.html</id>
    <published>2021-08-31T02:24:52.000Z</published>
    <updated>2021-08-31T02:38:59.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>新开一个记梦的板块Beta</p></blockquote><h2 id="2021-08-31"><a href="#2021-08-31" class="headerlink" title="2021-08-31"></a>2021-08-31</h2><p>和即将毕业的学长打算一起去吃饭，具体缘由已记不清了。学长叫了出租车，我拉开副驾驶门的一瞬间车子突然向前走了一下，差点把我拽倒。上车后我向师傅调侃，走这么着急么。随后我们向目的地驶去。中间经过一道弯曲的桥，但是这师傅却像没看见一样，径直往前开，直到即将撞上护栏才猛打方向，哪里来得及，车辆栽入河里。车子刚没入水中，车内的气压变得不正常了。我迅速摇下来玻璃钻了出去，然而我不会游泳啊！我也不知道自己在水底多深，只能拼命往上狗刨，终于浮上来了，深吸一口气，竟然可以游到岸边。终于，我和学长都得救了，但有个孩子没救上来。<br>车上除了司机不是只有两个人吗？我想。</p><h2 id="2021-09-04"><a href="#2021-09-04" class="headerlink" title="2021-09-04"></a>2021-09-04</h2><p>是一个让人害怕一整天的梦。</p><h2 id="2021-09-11"><a href="#2021-09-11" class="headerlink" title="2021-09-11"></a>2021-09-11</h2><p>参加了场史无前例的长跑，已经不是第一次了，很多往届没能成功跑完的人又来参加了比赛。又梦到我跟我爸在开车了，貌似是三轮车，想念小时候一个人坐在三轮车上的感觉，那是小时候的一小块天堂。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;新开一个记梦的板块Beta&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;2021-08-31&quot;&gt;&lt;a href=&quot;#2021-08-31&quot; class=&quot;headerlink&quot; title=&quot;2021-08-31&quot;&gt;&lt;/a&gt;2021-08-31&lt;/h2&gt;&lt;p&gt;和即将毕业的学长打算一起去吃饭，具体缘由已记不清了。学长叫了出租车，我拉开副驾驶门的一瞬间车子突然向前走了一下，差点把我拽倒。上车后我向师傅调侃，走这么着急么。随后我们向目的地驶去。中间经过一道弯曲的桥，但是这师傅却像没看见一样，径直往前开，直到即将撞上护栏才猛打方向，哪里来得及，车辆栽入河里。车子刚没入水中，车内的气压变得不正常了。我迅速摇下来玻璃钻了出去，然而我不会游泳啊！我也不知道自己在水底多深，只能拼命往上狗刨，终于浮上来了，深吸一口气，竟然可以游到岸边。终于，我和学长都得救了，但有个孩子没救上来。&lt;br&gt;车上除了司机不是只有两个人吗？我想。&lt;/p&gt;
&lt;h2 id=&quot;2021-09-04&quot;&gt;&lt;a href=&quot;#2021-09-04&quot; class=&quot;headerlink&quot; title=&quot;2021-09-04&quot;&gt;&lt;/a&gt;2021-09-04&lt;/h2&gt;&lt;p&gt;是一个让人害怕一整天的梦。&lt;/p&gt;
&lt;h2 id=&quot;2021-09-11&quot;&gt;&lt;a href=&quot;#2021-09-11&quot; class=&quot;headerlink&quot; title=&quot;2021-09-11&quot;&gt;&lt;/a&gt;2021-09-11&lt;/h2&gt;&lt;p&gt;参加了场史无前例的长跑，已经不是第一次了，很多往届没能成功跑完的人又来参加了比赛。又梦到我跟我爸在开车了，貌似是三轮车，想念小时候一个人坐在三轮车上的感觉，那是小时候的一小块天堂。&lt;/p&gt;

    
    </summary>
    
    
      <category term="文学" scheme="https://asea.fun/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
      <category term="literature" scheme="https://asea.fun/tags/literature/"/>
    
      <category term="dream" scheme="https://asea.fun/tags/dream/"/>
    
  </entry>
  
  <entry>
    <title>欢乐谷迷局</title>
    <link href="https://asea.fun/post/a564b56a.html"/>
    <id>https://asea.fun/post/a564b56a.html</id>
    <published>2021-08-18T16:49:03.000Z</published>
    <updated>2021-08-27T16:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>事情发生在前几天，当我从昏睡中苏醒时，暗喜，看着窗外的圆月高挂，人却已是筋疲力竭。</p></blockquote><p>凸月之时，我被一伙严严实实包裹身份的人带到一处巨大的地方，那些包裹者自称此地便是欢乐谷，说着便让我独自破门而入。<br>门上仅有一栓，食指稍一用力，那门栓便垂头丧气。没有嘤嘤嘤的叫声，我进入了欢乐谷。<br>项目貌似并不多，导航地图也不需要，但是够大——这我很快就会察觉到的。</p><p>进来以后，并没有想象中的豁然开朗，反而杂草丛生，只能沿着被人踩出来的痕迹向前移动，很快我便意识到，我已经深入地下。<br>当我终于看到光亮的时候，藤蔓疯长的声音也趁机进入眼睛。四周淡淡的荧绿色，仿佛处在一个巨大的榕树森林。那突如其来的声音扭曲着，变本加厉，以我为中心迅速蠕动，巨大的压力让我蹲在地上双手抱耳。我感觉那一条条的枝桠即将从我两侧的耳朵像张一斧的尖刀对林祥福那样扎进去，又准又快，再转上一转。恐惧让我无法摆脱这种声音。<br>久了，我缓缓起身，面前已经有人在走动了，我不清楚他们是如何跨过我的，而面前人的步态却意外的像我许久不见的女友，不注意，声音已经偃旗息鼓了。</p><p>我向前伸出双手，跟随着女友的脚步走了出去。这时往身后一看，一个深邃幽暗的门洞坐在那里，门上赫然几个大字“星斗大森林“。再回头，女友又不知去向。我开始审视目前处境，除了身后门洞，四周像是身处一个电玩城，而面前大概只有两个去处，一条是大路，另一条是小路。你说，走小路。我说，走大路。<br>从那个小路摸着蓝色墙壁走进去，闷沉的碰撞和击打声传来。大概是个格斗场。</p><p>刚进门，我就被几个工作人员套上了不太合身的装备，和我一同被套上的人大概有七八个，还有一个无任何装束的男人，据说是教练。我们被安排成了一排，教练说要一挑我们几个人。我感到害怕，莫名其貌地被安排来打架了？这无论如何我也打不过的。这时，我的左肩被人狠狠的撞了一下，我向后一个趔趄勉强站稳，来不及思考，一记飞天脚朝我踢了过来，我下意识往右前方闪躲，在地上打了几个滚才停下，接着教练又向其他人开火。我在混战中不停地躲避，用尽了毕生的姿势和力气。<br>该死啊，我为什么要来这里，已经快要喘不上来气了。</p><p>之后我几乎陷入昏迷，直到从渐渐消止的打斗中看到门口女友的身影，我拼命找到一个角落脱掉沉重的装备追了出去。我看到了她，以及几位老同学。Z呼喊我的名字，示意我快过去。他们对我的出现并没有感到任何惊讶，我们就像没分开过一样继续走向下一个项目。<br>从刚刚昏暗的氛围里面过来，几步就到了室外。我们站在一个十米左右的平台上，下面是一片巨大的水，不规律的浪潮拍打过来。从平台的右侧可以下楼梯，那台阶一直绵延了百米，最后钻入深蓝里。Z说，我要下去玩玩。我看向楼梯尽头，汽轮的呜呜声飘渺可见。我们是在一个巨大的岛上。</p><p>Z从楼梯一路跑下去，在极度恐高中，我慢慢失去意识。<br>再往后，我似乎见到了🐍，我很害怕，临走时，看到了远处海洋上的邮轮，醒了。</p><blockquote><p>以上，记录一次梦，但因为断更，我已经忘了梦到了什么。总之，是一场把我所有的恐惧都汇聚到一起的梦。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;事情发生在前几天，当我从昏睡中苏醒时，暗喜，看着窗外的圆月高挂，人却已是筋疲力竭。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;凸月之时，我被一伙严严实实包裹身份的人带到一处巨大的地方，那些包裹者自称此地便是欢乐谷，说着便让我独自破门而入。&lt;br&gt;门上仅有一栓，食指稍一用力，那门栓便垂头丧气。没有嘤嘤嘤的叫声，我进入了欢乐谷。&lt;br&gt;项目貌似并不多，导航地图也不需要，但是够大——这我很快就会察觉到的。&lt;/p&gt;
&lt;p&gt;进来以后，并没有想象中的豁然开朗，反而杂草丛生，只能沿着被人踩出来的痕迹向前移动，很快我便意识到，我已经深入地下。&lt;br&gt;当我终于看到光亮的时候，藤蔓疯长的声音也趁机进入眼睛。四周淡淡的荧绿色，仿佛处在一个巨大的榕树森林。那突如其来的声音扭曲着，变本加厉，以我为中心迅速蠕动，巨大的压力让我蹲在地上双手抱耳。我感觉那一条条的枝桠即将从我两侧的耳朵像张一斧的尖刀对林祥福那样扎进去，又准又快，再转上一转。恐惧让我无法摆脱这种声音。&lt;br&gt;久了，我缓缓起身，面前已经有人在走动了，我不清楚他们是如何跨过我的，而面前人的步态却意外的像我许久不见的女友，不注意，声音已经偃旗息鼓了。&lt;/p&gt;
&lt;p&gt;我向前伸出双手，跟随着女友的脚步走了出去。这时往身后一看，一个深邃幽暗的门洞坐在那里，门上赫然几个大字“星斗大森林“。再回头，女友又不知去向。我开始审视目前处境，除了身后门洞，四周像是身处一个电玩城，而面前大概只有两个去处，一条是大路，另一条是小路。你说，走小路。我说，走大路。&lt;br&gt;从那个小路摸着蓝色墙壁走进去，闷沉的碰撞和击打声传来。大概是个格斗场。&lt;/p&gt;
&lt;p&gt;刚进门，我就被几个工作人员套上了不太合身的装备，和我一同被套上的人大概有七八个，还有一个无任何装束的男人，据说是教练。我们被安排成了一排，教练说要一挑我们几个人。我感到害怕，莫名其貌地被安排来打架了？这无论如何我也打不过的。这时，我的左肩被人狠狠的撞了一下，我向后一个趔趄勉强站稳，来不及思考，一记飞天脚朝我踢了过来，我下意识往右前方闪躲，在地上打了几个滚才停下，接着教练又向其他人开火。我在混战中不停地躲避，用尽了毕生的姿势和力气。&lt;br&gt;该死啊，我为什么要来这里，已经快要喘不上来气了。&lt;/p&gt;
&lt;p&gt;之后我几乎陷入昏迷，直到从渐渐消止的打斗中看到门口女友的身影，我拼命找到一个角落脱掉沉重的装备追了出去。我看到了她，以及几位老同学。Z呼喊我的名字，示意我快过去。他们对我的出现并没有感到任何惊讶，我们就像没分开过一样继续走向下一个项目。&lt;br&gt;从刚刚昏暗的氛围里面过来，几步就到了室外。我们站在一个十米左右的平台上，下面是一片巨大的水，不规律的浪潮拍打过来。从平台的右侧可以下楼梯，那台阶一直绵延了百米，最后钻入深蓝里。Z说，我要下去玩玩。我看向楼梯尽头，汽轮的呜呜声飘渺可见。我们是在一个巨大的岛上。&lt;/p&gt;
&lt;p&gt;Z从楼梯一路跑下去，在极度恐高中，我慢慢失去意识。&lt;br&gt;再往后，我似乎见到了🐍，我很害怕，临走时，看到了远处海洋上的邮轮，醒了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以上，记录一次梦，但因为断更，我已经忘了梦到了什么。总之，是一场把我所有的恐惧都汇聚到一起的梦。&lt;/p&gt;
&lt;/blockquote&gt;

    
    </summary>
    
    
      <category term="文学" scheme="https://asea.fun/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="literature" scheme="https://asea.fun/tags/literature/"/>
    
  </entry>
  
  <entry>
    <title>东华大学程序设计基础OJ题目</title>
    <link href="https://asea.fun/post/5b353da9.html"/>
    <id>https://asea.fun/post/5b353da9.html</id>
    <published>2021-08-17T06:40:08.000Z</published>
    <updated>2021-08-28T16:55:30.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录一下自己做题的时候遇到的比较困扰的题</p></blockquote><h2 id="数列2"><a href="#数列2" class="headerlink" title="数列2"></a>数列2</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>思维的严密性是相当重要的，尤其是在程序设计中，一个小小的错误，就可能导致无法想象的后果。明明的爸爸是一名富有经验的程序设计专家，深知思维严密的重要性，于是在明明很小的时候，就通过游戏的方式，训练明明的思维严密性。今天，明明的爸爸和明明做了一个数列的游戏。这个游戏很简单，就是有一数列，现在需要在这数列中选出一个或者若干个数（可以不连续），要求这些数的和能被11整除。明明的爸爸想锻炼明明思维的严密性，因此要求明明尽可能多的找出符合条件的数列来，最好一个也不要漏掉。 例如一数列为“11 22 33”，其中11可以被11整除，22可以被11整除，33可以被11整除，11+22=33能被11整除，22+33=55能被11整除，11+33=44能被11整除，11+22+33=66能被11整除。所以以上一数列能被11整除的情况一共有7种。 明明对于这个游戏很感兴趣，高兴地玩了起来。由于粗心，明明总是无法一次就把所有的情况都找出来，这使得他爸爸不是很满意。于是明明爸爸决定先降低游戏的难度，事先告诉明明某一数列总共有多少种符合条件的选择数字的方法，然后再让明明去选。明明的爸爸请你帮一个忙，他不想自己找出所有的情况，因此请你写一个程序，用程序来找出一共有多少种符合选数的情况，并把结果告诉他。 </p><p>明明爸爸的问题可以归结为：给你一个数列，从中选出1个或若干个数（可以不连续），要求这些数的和能被11整除，问这样的选数方法一共有多少种。</p><h3 id="输入说明"><a href="#输入说明" class="headerlink" title="输入说明"></a>输入说明</h3><p>你写的程序要求从标准输入设备中读入测试数据作为你所写程序的输入数据。标准输入设备中有多组测试数据，每组测试数据有两行，每组测试数据的第一行有一个整数n(1≤n≤15)，表示数列中有多少个整数，每组测试数据的第二行有n个整数，整数的大小都大于等于0且小于等于100，整数之间用一个空格隔开。每组测试数据与其后一组测试数据之间没有任何空行，第一组测试数据前面以及最后一组测试数据后面也都没有任何空行。</p><h3 id="输出说明"><a href="#输出说明" class="headerlink" title="输出说明"></a>输出说明</h3><p>对于每一组测试数据，你写的程序要求计算出一组相应的运算结果，并将每组运算结果作为你所写程序的输出数据依次写入到标准输出设备中。每组运算结果为一个整数，即表示一共有多少种选数方法。每组运算结果单独形成一行数据，其行首和行尾都没有任何空格，每组运算结果与其后一组运算结果之间没有任何空行，第一组运算结果前面以及最后一组运算结果后面也都没有任何空行。 注：通常，显示屏为标准输出设备。</p><h3 id="输入范例"><a href="#输入范例" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">11</span><br><span class="line">3</span><br><span class="line">11 22 33</span><br></pre></td></tr></table></figure><h3 id="输出范例"><a href="#输出范例" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>本题主要考察数组应用和递归思想</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_num</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> num, <span class="keyword">int</span> &amp;sum, <span class="keyword">int</span> n, <span class="keyword">int</span> *arr, <span class="keyword">int</span> countor, <span class="keyword">int</span> num_sum)</span> <span class="comment">//参数意义：遍历起始地址，遍历总个数，满足条件的个数，数组长度，数组，计数器，和</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    countor ++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = start; i &lt; n-num+countor; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(countor &lt; num)</span><br><span class="line">            get_num(i+<span class="number">1</span>, num, sum, n, arr, countor, num_sum + arr[i]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((num_sum+arr[i])% <span class="number">11</span> == <span class="number">0</span> &amp;&amp; (num_sum + arr[i]) != <span class="number">0</span>) &#123;sum++;&#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> arr[<span class="number">15</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">             get_num(<span class="number">0</span>, i, sum, n, arr, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="打印十字图"><a href="#打印十字图" class="headerlink" title="打印十字图"></a>打印十字图</h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><p>小明为某机构设计了一个十字型的徽标（并非红十字会啊），如下所示：</p><p>..$$$$$$$$$$$$$..<br>..$………..$..<br>$$$.$$$$$$$$$.$$$<br>$…$…….$…$<br>$.$$$.$$$$$.$$$.$<br>$.$…$…$…$.$<br>$.$.$$$.$.$$$.$.$<br>$.$.$…$…$.$.$<br>$.$.$.$$$$$.$.$.$<br>$.$.$…$…$.$.$<br>$.$.$$$.$.$$$.$.$<br>$.$…$…$…$.$<br>$.$$$.$$$$$.$$$.$<br>$…$…….$…$<br>$$$.$$$$$$$$$.$$$<br>..$………..$..<br>..$$$$$$$$$$$$$..</p><p>对方同时也需要在电脑dos窗口中以字符的形式输出该标志（图中红色只是为了标记处十字符号，输出时都用黑色），并能任意控十字外面包围的符号的层数。</p><h3 id="输入说明-1"><a href="#输入说明-1" class="headerlink" title="输入说明"></a>输入说明</h3><p>一个正整数 n (n&lt;30) 表示要求打印图形的层数。</p><h3 id="输出说明-1"><a href="#输出说明-1" class="headerlink" title="输出说明"></a>输出说明</h3><p>对应包围层数的该标志。</p><p>比如：</p><p>输入</p><p>1</p><p>输出</p><p>..$$$$$..<br>..$…$..<br>$$$.$.$$$<br>$…$…$<br>$.$$$$$.$<br>$…$…$<br>$$$.$.$$$<br>..$…$..<br>..$$$$$..</p><p>输入</p><p>3</p><p>输出</p><p>..$$$$$$$$$$$$$..<br>..$………..$..<br>$$$.$$$$$$$$$.$$$<br>$…$…….$…$<br>$.$$$.$$$$$.$$$.$<br>$.$…$…$…$.$<br>$.$.$$$.$.$$$.$.$<br>$.$.$…$…$.$.$<br>$.$.$.$$$$$.$.$.$<br>$.$.$…$…$.$.$<br>$.$.$$$.$.$$$.$.$<br>$.$…$…$…$.$<br>$.$$$.$$$$$.$$$.$<br>$…$…….$…$<br>$$$.$$$$$$$$$.$$$<br>..$………..$..<br>..$$$$$$$$$$$$$.. </p><p>请仔细观察样例，尤其要注意句点的数量和输出位置。</p><h3 id="输入范例-1"><a href="#输入范例-1" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="输出范例-1"><a href="#输出范例-1" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">..$$$$$$$$$$$$$..</span><br><span class="line">..$...........$..</span><br><span class="line">$$$.$$$$$$$$$.$$$</span><br><span class="line">$...$.......$...$</span><br><span class="line">$.$$$.$$$$$.$$$.$</span><br><span class="line">$.$...$...$...$.$</span><br><span class="line">$.$.$$$.$.$$$.$.$</span><br><span class="line">$.$.$...$...$.$.$</span><br><span class="line">$.$.$.$$$$$.$.$.$</span><br><span class="line">$.$.$...$...$.$.$</span><br><span class="line">$.$.$$$.$.$$$.$.$</span><br><span class="line">$.$...$...$...$.$</span><br><span class="line">$.$$$.$$$$$.$$$.$</span><br><span class="line">$...$.......$...$</span><br><span class="line">$$$.$$$$$$$$$.$$$</span><br><span class="line">..$...........$..</span><br><span class="line">..$$$$$$$$$$$$$..</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="主要代码-1"><a href="#主要代码-1" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>利用好对称，找规律。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;<span class="number">2</span>*n+<span class="number">3</span>)</span><br><span class="line">        i = n*<span class="number">4</span>+<span class="number">6</span>-i;</span><br><span class="line">    <span class="keyword">if</span>(j&gt;<span class="number">2</span>*n+<span class="number">3</span>)</span><br><span class="line">        j = n*<span class="number">4</span>+<span class="number">6</span>-j;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">1</span> &amp;&amp; j == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = i;</span><br><span class="line">        i = j;</span><br><span class="line">        j = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">2</span> != <span class="number">0</span> &amp;&amp; j != i + <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span> &amp;&amp; j == i + <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n*<span class="number">4</span>+<span class="number">5</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n*<span class="number">4</span>+<span class="number">5</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (judge(i, j, n))</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;$&#x27;</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="质数的乘积"><a href="#质数的乘积" class="headerlink" title="质数的乘积"></a>质数的乘积</h2><h3 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h3><p>　Torry从小喜爱数学。一天，老师告诉他，像2、3、5、7……这样的数叫做质数。Torry突然想到一个问题，前10、100、1000、10000……个质数的乘积是多少呢？他把这个问题告诉老师。老师愣住了，一时回答不出来。于是Torry求助于会编程的你，请你算出前n个质数的乘积。不过，考虑到你才接触编程不久，Torry只要你算出这个数模上50000的值。</p><h3 id="输入说明-2"><a href="#输入说明-2" class="headerlink" title="输入说明"></a>输入说明</h3><p>仅包含一个正整数n，其中n&lt;=100000。</p><h3 id="输出说明-2"><a href="#输出说明-2" class="headerlink" title="输出说明"></a>输出说明</h3><p>输出一行，即前n个质数的乘积模50000的值。</p><h3 id="输入范例-2"><a href="#输入范例-2" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="输出范例-2"><a href="#输出范例-2" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">30</span><br></pre></td></tr></table></figure><h3 id="主要代码-2"><a href="#主要代码-2" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>如何判断指数，基本数据类型（int 、long long）的取值范围</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_zhi</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(a); i++)&#123; <span class="comment">//注意是&lt;=</span></span><br><span class="line">        <span class="keyword">if</span>(a%i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sum_arr[<span class="number">100000</span>];</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum = <span class="number">1</span>;<span class="comment">//int最大值2^32-1</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; k &lt; <span class="number">100000</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(is_zhi(i)) &#123;sum = sum*i%<span class="number">50000</span>; sum_arr[k++] = sum;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum_arr[n<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="航班时间"><a href="#航班时间" class="headerlink" title="航班时间"></a>航班时间</h2><h3 id="问题描述-3"><a href="#问题描述-3" class="headerlink" title="问题描述"></a>问题描述</h3><p>【问题背景】</p><p>小h前往美国参加了蓝桥杯国际赛。小h的女朋友发现小h上午十点出发，上午十二点到达美国，于是感叹到“现在飞机飞得真快，两小时就能到美国了”。</p><p>小h对超音速飞行感到十分恐惧。仔细观察后发现飞机的起降时间都是当地时间。由于北京和美国东部有12小时时差，故飞机总共需要14小时的飞行时间。</p><p>不久后小h的女朋友去中东交换。小h并不知道中东与北京的时差。但是小h得到了女朋友来回航班的起降时间。小h想知道女朋友的航班飞行时间是多少。</p><p>【问题描述】</p><p>对于一个可能跨时区的航班，给定来回程的起降时间。假设飞机来回飞行时间相同，求飞机的飞行时间。</p><h3 id="输入说明-3"><a href="#输入说明-3" class="headerlink" title="输入说明"></a>输入说明</h3><p>从标准输入读入数据。</p><p>一个输入包含多组数据。</p><p>输入第一行为一个正整数T，表示输入数据组数。</p><p>每组数据包含两行，第一行为去程的 起降 时间，第二行为回程的 起降 时间。</p><p>起降时间的格式如下</p><p>h1:m1:s1 h2:m2:s2</p><p>或</p><p>h1:m1:s1 h3:m3:s3 (+1)</p><p>或</p><p>h1:m1:s1 h4:m4:s4 (+2)</p><p>表示该航班在当地时间h1时m1分s1秒起飞，</p><p>第一种格式表示在当地时间 当日 h2时m2分s2秒降落</p><p>第二种格式表示在当地时间 次日 h3时m3分s3秒降落。</p><p>第三种格式表示在当地时间 第三天 h4时m4分s4秒降落。</p><p>对于此题目中的所有以 h : m : s形式给出的时间, 保证 ( 0&lt;=h&lt;=23, 0&lt;=m,s&lt;=59 ).</p><p>保证输入时间合法，飞行时间不超过24小时。</p><h3 id="输出说明-3"><a href="#输出说明-3" class="headerlink" title="输出说明"></a>输出说明</h3><p>输出到标准输出。</p><p>对于每一组数据输出一行一个时间hh:mm:ss，表示飞行时间为hh小时mm分ss秒。</p><p>注意，当时间为一位数时，要补齐前导零。如三小时四分五秒应写为03:04:05。</p><h3 id="输入范例-3"><a href="#输入范例-3" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">17:48:19 21:57:24</span><br><span class="line">11:05:18 15:14:23</span><br><span class="line">17:21:07 00:31:46 (+1)</span><br><span class="line">23:02:41 16:13:20 (+1)</span><br><span class="line">10:19:19 20:41:24</span><br><span class="line">22:19:04 16:41:09 (+1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-3"><a href="#输出范例-3" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">04:09:05</span><br><span class="line">12:10:39</span><br><span class="line">14:22:05</span><br></pre></td></tr></table></figure><h3 id="主要代码-3"><a href="#主要代码-3" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>两次时间平均可以抵消时区差，算时间最好全都换成秒再一一还原</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_num</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mutiple = <span class="number">3600</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i+=<span class="number">3</span>)&#123;</span><br><span class="line">        sum += ((str[<span class="number">9</span>+i]-<span class="string">&#x27;0&#x27;</span>)*<span class="number">10</span> + (str[<span class="number">10</span>+i] - <span class="string">&#x27;0&#x27;</span>) - (str[<span class="number">0</span>+i]-<span class="string">&#x27;0&#x27;</span>)*<span class="number">10</span> - (str[<span class="number">1</span>+i]-<span class="string">&#x27;0&#x27;</span>))*mutiple;</span><br><span class="line">        mutiple /= <span class="number">60</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(str.length() &gt; <span class="number">20</span>)&#123;</span><br><span class="line">        sum += <span class="number">86400</span>*(str[<span class="number">20</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">  getchar();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">      <span class="built_in">string</span> str1, str2;</span><br><span class="line">      getline(<span class="built_in">cin</span>, str1);</span><br><span class="line">      getline(<span class="built_in">cin</span>, str2);</span><br><span class="line">      <span class="keyword">int</span> h = (get_num(str1) + get_num(str2))/<span class="number">2</span>/<span class="number">3600</span>;</span><br><span class="line">      <span class="keyword">int</span> m = (get_num(str1) + get_num(str2))/<span class="number">2</span>%<span class="number">3600</span>/<span class="number">60</span>;<span class="comment">//z</span></span><br><span class="line">      <span class="keyword">int</span> s = (get_num(str1) + get_num(str2))/<span class="number">2</span>%<span class="number">60</span>;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d:%02d\n&quot;</span>,h, m, s);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="洗牌"><a href="#洗牌" class="headerlink" title="洗牌"></a>洗牌</h2><h3 id="问题描述-4"><a href="#问题描述-4" class="headerlink" title="问题描述"></a>问题描述</h3><p>　小弱T在闲暇的时候会和室友打扑克，输的人就要负责洗牌。虽然小弱T不怎么会洗牌，但是他却总是输。<br>　　渐渐地小弱T发现了一个规律：只要自己洗牌，自己就一定会输。所以小弱T认为自己洗牌不够均匀，就独创了一种小弱洗牌法。<br>　　小弱洗牌法是这样做的：先用传统洗牌法将52张扑克牌（1到K各四张，除去大小王）打乱，放成一堆，然后每次从牌堆顶层拿一张牌放到手中（初始时手中无牌）。如果这张牌的大小是P（1到K的大小分别为1到13），那么就把这张牌插入到当前手中第P张牌的后面。如果当前手中不足P张牌，那么就把这张牌放在最后。<br>　　现在给你一对已经被打乱的牌，请你用小弱洗牌法进行洗牌，然后输出最后手中牌的序列。<br>　　注意：小弱可能在第一次洗牌时弄丢了某些牌，这时请你输出一个-1来提醒他牌的数目不够。</p><h3 id="输入说明-4"><a href="#输入说明-4" class="headerlink" title="输入说明"></a>输入说明</h3><p>　　测试数据的输入含N个用空格隔开的字符串表示牌堆从顶至底的每张扑克（1到K中的某个）。可能有多行。</p><h3 id="输出说明-4"><a href="#输出说明-4" class="headerlink" title="输出说明"></a>输出说明</h3><p>​        如果字符串的个数N为52，则输出用小弱洗牌法洗牌后的序列，每个字符串后都有一个空格。<br>　　否则请输出一个-1</p><h3 id="输入范例-4"><a href="#输入范例-4" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 6 K Q 5 1 Q 9 7 9 K 3 J 1 2 3 5</span><br><span class="line">2</span><br><span class="line">3 5 7 Q 7 10 8 4 9 7 8 9 4</span><br><span class="line">10 6 2 8 2 10 10 Q 5 K J 1</span><br><span class="line">J 8 3 K 4 1 6 J 6</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-4"><a href="#输出范例-4" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 1 1 1 3 4 6 6 2 2 2 5 J 3 8 4 4 6 K J 8 J 10 10 K Q 2 5 7 8 10 9 3 7 9 8 7 1 10 5 6 3 Q K Q 5 Q 7 9 9 J K </span><br></pre></td></tr></table></figure><h3 id="主要代码-4"><a href="#主要代码-4" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>难点：</p><p>一个是读入多行带空格的字符串，用<code>while(getline(cin, str))</code>，如有需要可以加<code>if(str == &quot;&quot;) break;</code></p><p>另一个是对每一个字符的处理，主要难点是10这样的两个单字符的数字如何处理。</p><p>另外链表的使用（本题中插入元素的实现）；</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_el</span><span class="params">(<span class="keyword">char</span> *arr, <span class="keyword">int</span> p, <span class="keyword">char</span> c, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(p &gt; len)</span><br><span class="line">        p = len; <span class="comment">//没有位置则插入最后</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = len; i &gt; p; i--)&#123;</span><br><span class="line">        arr[i] = arr[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    arr[p] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> str;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> arr[<span class="number">52</span>] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">while</span>(getline(<span class="built_in">cin</span>, str))&#123;</span><br><span class="line">        <span class="keyword">if</span>(str == <span class="string">&quot;&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">int</span> len = str.size()+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i+=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[i] == <span class="string">&#x27;1&#x27;</span> &amp;&amp; str[i+<span class="number">1</span>] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; i &lt; len <span class="number">-1</span>)&#123;</span><br><span class="line">                str[i] = <span class="string">&#x27;I&#x27;</span>;flag = <span class="literal">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;flag = <span class="literal">false</span>;&#125;</span><br><span class="line">            <span class="keyword">if</span>(str[i] &gt; <span class="string">&#x27;A&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">int</span> temp;</span><br><span class="line">                <span class="keyword">switch</span>(str[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;I&#x27;</span>: temp = <span class="number">10</span>;<span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;J&#x27;</span>: temp = <span class="number">11</span>;<span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;Q&#x27;</span>: temp = <span class="number">12</span>;<span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> <span class="string">&#x27;K&#x27;</span>: temp = <span class="number">13</span>;<span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                add_el(arr, temp, str[i], sum);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                add_el(arr, str[i] - <span class="string">&#x27;0&#x27;</span>, str[i], sum);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">            sum++;</span><br><span class="line">            <span class="keyword">if</span>(flag) i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum &lt; <span class="number">52</span>)</span><br><span class="line">        &#123;<span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">52</span>; i ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] == <span class="string">&#x27;I&#x27;</span>) <span class="built_in">cout</span>&lt;&lt;<span class="number">10</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;arr[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="表达式求值"><a href="#表达式求值" class="headerlink" title="表达式求值"></a>表达式求值</h2><h3 id="问题描述-5"><a href="#问题描述-5" class="headerlink" title="问题描述"></a>问题描述</h3><p>以字符串形式输入仅有整数和加减（正负）号构成的表达式，输出该表达式的值。</p><h3 id="输入说明-5"><a href="#输入说明-5" class="headerlink" title="输入说明"></a>输入说明</h3><p>标准输入设备中有多组测试数据，每组输入数据由一行组成，输入仅有整数和加减（正负）号构成的表达式（但是表达式可以插入空格）。</p><h3 id="输出说明-5"><a href="#输出说明-5" class="headerlink" title="输出说明"></a>输出说明</h3><p>依次输出从标准输入设备中读入的每一组测试数据对应的结果，输出一行，输出该表达式的值。所有数据前后没有多余的空格，两组数据之间也没有多余的空行。</p><h3 id="输入范例-5"><a href="#输入范例-5" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3+    4+  5+6</span><br><span class="line">  0+1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-5"><a href="#输出范例-5" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">18</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="主要代码-5"><a href="#主要代码-5" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>难点在于如何提取每个整数（不一定小于十），以及保留该数前边的正负号。<br>不要忽略了最后一个，且最后一个可能包含空格。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> a;</span><br><span class="line">    <span class="keyword">while</span>(getline(<span class="built_in">cin</span>, a))&#123;</span><br><span class="line">        <span class="keyword">int</span> len = a.length();</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i] &lt;= <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">                temp *= <span class="number">10</span>;</span><br><span class="line">                temp += a[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(i == len<span class="number">-1</span>)&#123;</span><br><span class="line">                    <span class="keyword">switch</span>(flag)&#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span>: sum += temp;<span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">-1</span>: sum -= temp;<span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(a[i<span class="number">-1</span>] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i<span class="number">-1</span>] &lt;= <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">                    <span class="keyword">switch</span>(flag)&#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">1</span>: sum+=temp;temp = <span class="number">0</span>;<span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="number">-1</span>: sum -= temp;temp = <span class="number">0</span>; <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">switch</span>(a[i])&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>: flag = <span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>: flag = <span class="number">-1</span>;<span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27; &#x27;</span>: <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="大整数相加"><a href="#大整数相加" class="headerlink" title="大整数相加"></a>大整数相加</h2><h3 id="问题描述-6"><a href="#问题描述-6" class="headerlink" title="问题描述"></a>问题描述</h3><p>I have a very simple problem for you. Given two integers A and B, your job is to calculate the Sum of A + B.</p><h3 id="输入说明-6"><a href="#输入说明-6" class="headerlink" title="输入说明"></a>输入说明</h3><p>The first line of the input contains an integer T(1&lt;=T&lt;=20) which means the number of test cases. Then T lines follow, each line consists of two positive integers, A and B. Notice that the integers are very large, that means you should not process them by using 32-bit integer. You may assume the length of each integer will not exceed 1000.</p><h3 id="输出说明-6"><a href="#输出说明-6" class="headerlink" title="输出说明"></a>输出说明</h3><p>For each test case, you should output two lines. The first line is “Case #:”, # means the number of the test case. The second line is the an equation “A + B = Sum”, Sum means the result of A + B. Note there are some spaces int the equation. Output a blank line between two test cases.</p><h3 id="输入范例-6"><a href="#输入范例-6" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">1 2</span><br><span class="line">112233445566778899 998877665544332211</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-6"><a href="#输出范例-6" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Case 1:</span><br><span class="line">1 + 2 &#x3D; 3</span><br><span class="line"></span><br><span class="line">Case 2:</span><br><span class="line">112233445566778899 + 998877665544332211 &#x3D; 1111111111111111110</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="主要代码-6"><a href="#主要代码-6" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>显然要用字符串，拿到两个字符串之后该怎么处理呢？<br>这里采用新数组来存储每一位的合，并把大于10的进位<br>不要忽略了两个字符串长度不等，可能导致越界的问题</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; k++)&#123;</span><br><span class="line">        <span class="built_in">string</span> a, b;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">int</span> c[<span class="number">1010</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> len_a = a.size();</span><br><span class="line">        <span class="keyword">int</span> len_b = b.size();</span><br><span class="line">        <span class="keyword">if</span>(len_a &gt;= len_b)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len_b; i++)&#123;</span><br><span class="line">                c[i] = a[len_a - i <span class="number">-1</span>] + b[len_b - i - <span class="number">1</span>] - <span class="number">2</span>*<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = len_b; i &lt; len_a; i++)&#123;</span><br><span class="line">                c[i] = a[len_a - i <span class="number">-1</span>] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(len_a &lt; len_b)&#123; <span class="comment">//这里的判断太麻烦了感觉，随后再想更简洁的解法</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len_a; i++)&#123;</span><br><span class="line">                c[i] = a[len_a - i <span class="number">-1</span>] + b[len_b - i - <span class="number">1</span>] - <span class="number">2</span>*<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = len_a; i &lt; len_b; i++)&#123;</span><br><span class="line">                c[i] = b[len_b - i <span class="number">-1</span>] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> max_num = len_a &gt; len_b ? len_a : len_b;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max_num; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(c[i] &gt;= <span class="number">10</span>)</span><br><span class="line">                <span class="keyword">if</span>(i != max_num <span class="number">-1</span>)</span><br><span class="line">                    &#123;c[i] %= <span class="number">10</span>;</span><br><span class="line">                    c[i+<span class="number">1</span>] += <span class="number">1</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;k+<span class="number">1</span>&lt;&lt;<span class="string">&#x27;:&#x27;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">&quot; + &quot;</span>&lt;&lt;b&lt;&lt;<span class="string">&quot; = &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = max(len_a, len_b)<span class="number">-1</span>; i &gt;= <span class="number">0</span> ; i--)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;c[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">if</span>(k != n<span class="number">-1</span>) <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="牧场安全系统"><a href="#牧场安全系统" class="headerlink" title="牧场安全系统"></a>牧场安全系统</h2><h3 id="问题描述-7"><a href="#问题描述-7" class="headerlink" title="问题描述"></a>问题描述</h3><p>明明是一家养牛场的老板，随着养牛场的规模扩大，牛的数量变得越来越多。因此，管理也就越来越难，还时常发生一些事故，比如：一些牛会走失，一些牛会因为疏忽照顾而生长不佳等等，这些都给明明造成了损失。于是，明明决定给养牛场安装一套现代化的生产管理系统，用科学的方法来管理养牛场，在这套安全系统中，需要为每头牛编一个号码，这个号码是唯一的，用来标识每一头牛。这样明明在管理时，就不会疏忽任意一头牛，也不会使牛再次走失。但是在给每头牛编号的时候，明明遇到了困难，由于系统的原因，系统对每头牛的编号有一定的限制，这个编号必须有L个小写字母组成，这些小写字母必须在固定的几个字母中选择，并且在这个编号中至少要有一个元音(‘a’, ‘e’, ‘i’, ‘o’, 或者 ‘u’)，至少有两个辅音(除去元音以外的音节), 并且字母按字母表顺序排列(例如，’abc’是有效的，而’bac’不是有效的)。 例如：假设编号由5个小写字母组成，且这些小写字母只能为a、b、c、d、e、f，这样构成的可能的编号就有以下6种： bcdef acdef abdef abcef abcdf abcde 明明觉得这样编号的方法非常麻烦，仅仅靠手工排列是很难完成的，出错的可能性很大，这时，明明想起了你，你是一位程序设计专家，你能否帮明明写一个程序，帮助他按照编号的规则，由程序生成所有的有效编号，供明明使用。 明明的问题可以归结为：给你一个有效编号的长度L，和C个可用的小写字母，按照编码规则生成所有的有效编号。</p><h3 id="输入说明-7"><a href="#输入说明-7" class="headerlink" title="输入说明"></a>输入说明</h3><p>你写的程序要求从标准输入设备中读入测试数据作为你所写程序的输入数据。标准输入设备中有多组测试数据，每组测试数据有二行，第一行为两个整数L(3≤L≤15)和C(3≤C≤26)，L表示编号的长度，C表示可以选择的小写字母的数量，L和C用一个空格隔开。第二行有C个两两不相同的小写字母，相互以一个空格隔开。每组测试数据与其后一组测试数据之间没有任何空行，第一组测试数据前面以及最后一组测试数据后面也都没有任何空行。</p><h3 id="输出说明-7"><a href="#输出说明-7" class="headerlink" title="输出说明"></a>输出说明</h3><p>对于每一组测试数据，你写的程序要求计算出一组相应的运算结果，并将这一组运算结果作为你所写程序的输出数据依次写入到标准输出设备中。每组运算结果分为两个部分，第一部分为所有生成的有效编号，每行一个，按字母表逆序顺序输出，第二部分为一个整数，表示总共有多少个有效编码。 每组运算结果的行首和行尾都没有任何空格，每组运算结果与其后一组运算结果之间有一个空行，最后一组运算结果后面没有空行。 注：通常，显示屏为标准输出设备。</p><h3 id="输入范例-7"><a href="#输入范例-7" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 3</span><br><span class="line">a b c</span><br><span class="line">5 6</span><br><span class="line">a b c d e f</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-7"><a href="#输出范例-7" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">abc</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">bcdef</span><br><span class="line">acdef</span><br><span class="line">abdef</span><br><span class="line">abcef</span><br><span class="line">abcdf</span><br><span class="line">abcde</span><br><span class="line">6</span><br></pre></td></tr></table></figure><h3 id="主要代码-7"><a href="#主要代码-7" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>难点过于丰富，最初想法是分开两个数组，元音字母数组和其它的，但是两个迭代过于复杂，于是换思路；<br>一个迭代函数选取元素，再讨论是否符合要求。<br>难点在于迭代的时候结果多个如何储存，以及排序等等各种复杂的东西。<br>以及关于<code>string</code>的一些坑</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_yuan</span><span class="params">(<span class="keyword">char</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="built_in">string</span> s, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(is_yuan(s[i])) sum++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum &gt; <span class="number">0</span> &amp;&amp; num - sum &gt; <span class="number">1</span> )</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">select_el</span><span class="params">(<span class="keyword">char</span> *arr, <span class="keyword">int</span> len, <span class="built_in">string</span> &amp;se_arr, <span class="keyword">int</span> num, <span class="keyword">int</span> start, <span class="keyword">int</span> countor, <span class="keyword">int</span> &amp;sum, <span class="built_in">string</span> *fi_arr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    countor ++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = start; i &lt;= len - num + countor; i++)&#123;</span><br><span class="line">        se_arr[countor<span class="number">-1</span>] = arr[i<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">if</span>(countor &lt; num)&#123;</span><br><span class="line">            select_el(arr, len, se_arr, num, i+<span class="number">1</span>, countor, sum, fi_arr);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(judge(se_arr, num))</span><br><span class="line">                fi_arr[sum++] = se_arr;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_sort</span><span class="params">(<span class="built_in">string</span> *str, <span class="keyword">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; len; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(str[i] &lt; str[j])&#123;</span><br><span class="line">                    <span class="built_in">string</span> t = str[i];</span><br><span class="line">                    str[i] = str[j];</span><br><span class="line">                    str[j] = t;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l, c;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;l&gt;&gt;c)&#123;</span><br><span class="line">        <span class="keyword">char</span> arr[<span class="number">27</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; c; i ++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        sort(arr, arr+c);</span><br><span class="line">        <span class="function"><span class="built_in">string</span> <span class="title">se_arr</span><span class="params">(<span class="number">26</span>, <span class="string">&#x27;\0&#x27;</span>)</span></span>;</span><br><span class="line">        <span class="built_in">string</span> fi_arr[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        select_el(arr, c, se_arr, l, <span class="number">1</span>, <span class="number">0</span>, sum, fi_arr);</span><br><span class="line">        my_sort(fi_arr, sum);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sum; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; l; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(fi_arr[i][j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;fi_arr[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_yuan</span><span class="params">(<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> arr[] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;u&#x27;</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(c == arr[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="乒乓球"><a href="#乒乓球" class="headerlink" title="乒乓球"></a>乒乓球</h2><h3 id="问题描述-8"><a href="#问题描述-8" class="headerlink" title="问题描述"></a>问题描述</h3><p>国际乒联主席沙拉拉自从上任以来就立志于推行一系列改革，以推动乒乓球运动在全球的普及。其中11分制改革引起了很大的争议，有一部分球员因为无法适应新规则只能选择退役。明明就是其中一位，他退役之后走上了乒乓球研究工作，意图弄明白11分制和21分制对选手的不同影响。在开展他的研究之前，明明首先需要对他多年比赛的统计数据进行一些分析，所以需要你的帮忙。（注：11（21）分制，在一局比赛中，选手A先得到11（21）分且此时领先选手B 2分或2分以上时，则选手A赢得此局；若当双方打成10（20）平后，则先多得2分的一方为胜方，赢得此局。） </p><p>明明通过以下方式进行分析，首先将比赛每个球的胜负列成一张表，然后分别计算在11分制和21分制下，双方的比赛结果（截至记录末尾）。一局比赛的开始比分为0比0。比如现在有这么一份记录，（其中W表示明明获得一分，L表示明明的对手获得一分）：</p><p>WWWWWWWWWWWWWWWWWWWWWWLW </p><p>在11分制下，此时比赛的结果是明明第一局11比0获胜，第二局11比0获胜，正在进行第三局，当前比分1比1。 </p><p>在21分制下，此时比赛结果是明明第一局21比0获胜，正在进行第二局，当前比分2比1。 </p><p>再如有这么一份记录，（其中W表示明明获得一分，L表示明明的对手获得一分）： </p><p>WLWLWLWLWLWLWLWLWLWLWLWLWL </p><p>在11分制下，此时比赛的结果是明明和对手打成13比13，这局比赛仍没有分出胜负，因为任何一方都没有领先其对手2分。 </p><p>在21分制下，此时比赛的结果是明明和对手打成13比13，这局比赛仍在进行中。 </p><p>由于明明参加过多年的比赛，比赛的数据量相当庞大，如果仅仅使用手工统计，在短时间内统计出结果对于明明来说是相当困难的。因此明明求助于你，希望你能写一个程序，帮助他快速地统计出结果来。 </p><p>明明的问题可以归结为：给你一系列的比赛数据（WL形式），分别按照11分制和21分制的比赛规则进行统计，然后输出统计结果。</p>### 输入说明<p>你写的程序要求从标准输入设备中读入测试数据作为你所写程序的输入数据。标准输入设备中有多组测试数据，每行包括一串有W、L和E组成比赛结果，其中W表示明明得一分，L表示明明的对手得一分，E表示该组测试数据的结束，也就是说E后面的W、L应该忽略，无需处理。每行的长度不会超过30个字符。每组测试数据与其后一组测试数据之间没有任何空行，第一组测试数据前面以及最后一组测试数据后面也都没有任何空行。</p><h3 id="输出说明-8"><a href="#输出说明-8" class="headerlink" title="输出说明"></a>输出说明</h3><p>对于每一组测试数据，你写的程序要求计算出一组相应的运算结果，并将每组运算结果作为你所写程序的输出数据依次写入到标准输出设备中。</p><p>每组运算结果由两部分组成，其中第一部分是11分制下的结果，第二部分是21分制下的结果，两部分之间由一个空行分隔。</p><p>每部分由若干行组成，每一行对应一局比赛的比分（按比赛信息输入顺序），每局的比分按如下形式表示：m:n，其中m表示明明的得分，n表示明明的对手的得分，m、n之间用一个冒号隔开。</p><p>输出时，每组运算结果与其后一组运算结果之间有一个空行，第一组运算结果前面以及最后一组运算结果后面没有任何空行或其他任何字符。</p><p>注：通常，显示屏为标准输出设备。</p><p></p><h3 id="输入范例-8"><a href="#输入范例-8" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">WWWWWWWWWWLLLLLLLLLLL</span><br><span class="line">WWWWWWWWWLLLLLLLLLE</span><br><span class="line">LLLLLLLLLLLLLLLLLE</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-8"><a href="#输出范例-8" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">13:11</span><br><span class="line">6:9</span><br><span class="line"></span><br><span class="line">19:20</span><br><span class="line"></span><br><span class="line">0:11</span><br><span class="line">0:6</span><br><span class="line"></span><br><span class="line">0:17</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="主要代码-8"><a href="#主要代码-8" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>主意好处理的顺序，处理完11分以后要处理21分制，所以要做好对‘E’的分隔，我采用了一个flag跳转的方法，稍不注意可能会陷入死循环或者溢出，要理清思路。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s[k++]);</span><br><span class="line">    <span class="keyword">int</span> w = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> win = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k<span class="number">-1</span>; j++)&#123;</span><br><span class="line">        <span class="keyword">int</span> len = s[j].size();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[j][i] == <span class="string">&#x27;E&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(sum != <span class="number">0</span>)<span class="built_in">cout</span>&lt;&lt;w&lt;&lt;<span class="string">&#x27;:&#x27;</span>&lt;&lt;sum - w&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                w = <span class="number">0</span>;</span><br><span class="line">                sum = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                win = (win == <span class="number">21</span> ? <span class="number">11</span> : <span class="number">21</span>);</span><br><span class="line">                j = (win == <span class="number">21</span> ? flag : j);</span><br><span class="line">                <span class="keyword">if</span>(win == <span class="number">11</span>) flag = j;</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;sum++;&#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(s[j][i] == <span class="string">&#x27;W&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                w++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>((w == win || sum - w == win || (w &gt;= win<span class="number">-1</span> &amp;&amp; sum - w &gt;= win<span class="number">-1</span>)) &amp;&amp; <span class="built_in">abs</span>(sum - <span class="number">2</span>*w) &gt; <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;w&lt;&lt;<span class="string">&#x27;:&#x27;</span>&lt;&lt;sum - w&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                w = <span class="number">0</span>;</span><br><span class="line">                sum = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="贪婪的礼物送礼者"><a href="#贪婪的礼物送礼者" class="headerlink" title="贪婪的礼物送礼者"></a>贪婪的礼物送礼者</h2><h3 id="问题描述-9"><a href="#问题描述-9" class="headerlink" title="问题描述"></a>问题描述</h3><p>对于一群要互送礼物的朋友，你要确定每个人送出的礼物比收到的多多少。</p><p>在这一个问题中，每个人都准备了一些钱来送礼物，而这些钱将会被平均分给那些将收到他的礼物的人。然而，在任何一群朋友中，有些人将送出较多的礼物(可能是因为有较多的朋友)，有些人准备了较多的钱。给出一群朋友， 没有人的名字会长于 14 字符，给出每个人将花在送礼上的钱，和将收到他的礼物的人的列表，请确定每个人收到的比送出的钱多多少。</p><p>所有的送礼的钱都是整数，每个人把相同数目的钱给每位要送礼的朋友，而且尽可能多给，不能给出的钱被送礼者自己保留。</p><h3 id="输入说明-8"><a href="#输入说明-8" class="headerlink" title="输入说明"></a>输入说明</h3><p>第 1 行: 人数NP,2&lt;=NP&lt;=10</p><p>第 2到 NP+1 行: 这NP个在组里人的名字　一个名字一行</p><p>第NP＋2到最后： 这里的内容是这样组织的：第一行是将会送出礼物人的名字。第二行包含二个数字:　第一个是原有的钱的数目（在0到2000的范围里），第二个NGi是将收到这个送礼者礼物的人的个数 如果 NGi 是非零的, 在下面 NGi 行列出礼物的接受者的名字，一个名字一行。</p><h3 id="输出说明-9"><a href="#输出说明-9" class="headerlink" title="输出说明"></a>输出说明</h3><p>输出 NP 行每行是一个人的名字加上空格再加上收到的比送出的钱多的数目。</p><p>对于每一个人，他名字的打印顺序应和他在输入的2到NP＋1行中输入的顺序相同。</p><h3 id="输入范例-9"><a href="#输入范例-9" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line"> dave</span><br><span class="line"> laura</span><br><span class="line"> owen</span><br><span class="line"> vick</span><br><span class="line"> amr</span><br><span class="line"> dave</span><br><span class="line"> 200 3</span><br><span class="line"> laura</span><br><span class="line"> owen</span><br><span class="line"> vick</span><br><span class="line"> owen</span><br><span class="line"> 500 1</span><br><span class="line"> dave</span><br><span class="line"> amr</span><br><span class="line"> 150 2</span><br><span class="line"> vick</span><br><span class="line"> owen</span><br><span class="line"> laura</span><br><span class="line"> 0 2</span><br><span class="line"> amr</span><br><span class="line"> vick</span><br><span class="line"> vick</span><br><span class="line"> 0 0</span><br></pre></td></tr></table></figure><h3 id="输出范例-9"><a href="#输出范例-9" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">dave 302</span><br><span class="line">laura 66</span><br><span class="line">owen -359</span><br><span class="line">vick 141</span><br><span class="line">amr -150</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="主要代码-9"><a href="#主要代码-9" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>不难但是挺好玩一题，用了结构体比较清晰易懂</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> money = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> got_money = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> give_num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">string</span> give_nums[<span class="number">10</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    Person per[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;per[i].name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;name)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(per[i].name == name)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cin</span>&gt;&gt;per[i].money&gt;&gt;per[i].give_num;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; per[i].give_num; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;per[i].give_nums[j];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; per[i].give_num; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(per[k].name == per[i].give_nums[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    per[k].got_money += per[i].money/per[i].give_num;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;per[i].name&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;(per[i].got_money - per[i].money + (per[i].give_num == <span class="number">0</span> ? per[i].money : (per[i].money % per[i].give_num)))&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Excel地址"><a href="#Excel地址" class="headerlink" title="Excel地址"></a>Excel地址</h2><h3 id="问题描述-10"><a href="#问题描述-10" class="headerlink" title="问题描述"></a>问题描述</h3><p>　Excel单元格的地址表示很有趣，它使用字母来表示列号。<br>　　比如，<br>　　A表示第1列，<br>　　B表示第2列，<br>　　Z表示第26列，<br>　　AA表示第27列，<br>　　AB表示第28列，<br>　　BA表示第53列，<br>　　….</p><p>　　当然Excel的最大列号是有限度的，所以转换起来不难。<br>　　如果我们想把这种表示法一般化，可以把很大的数字转换为很长的字母序列呢？</p><p>　　本题目即是要求对输入的数字, 输出其对应的Excel地址表示方式。</p><h3 id="输入说明-9"><a href="#输入说明-9" class="headerlink" title="输入说明"></a>输入说明</h3><p>输入一个整数，其范围[1,2147483647]</p><h3 id="输出说明-10"><a href="#输出说明-10" class="headerlink" title="输出说明"></a>输出说明</h3><p>输出一个字符串</p><h3 id="输入范例-10"><a href="#输入范例-10" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2054</span><br></pre></td></tr></table></figure><h3 id="输出范例-10"><a href="#输出范例-10" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BZZ</span><br></pre></td></tr></table></figure><h3 id="主要代码-10"><a href="#主要代码-10" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>小巧精致的一道题，最后我把它归结为没有0的进制。</p><p>注意区分没有0的26进制和有0的27进制的区别。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">0</span>,c=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">while</span>(m)&#123;</span><br><span class="line">        b = m%<span class="number">26</span>;</span><br><span class="line">        m = m/<span class="number">26</span>;</span><br><span class="line">        <span class="keyword">if</span>(b == <span class="number">0</span>) &#123;b = <span class="number">26</span>;m--;&#125; <span class="comment">//点睛之笔</span></span><br><span class="line">        s[c++] = b + <span class="string">&#x27;A&#x27;</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = c<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="分数化小数"><a href="#分数化小数" class="headerlink" title="分数化小数"></a>分数化小数</h2><h3 id="问题描述-11"><a href="#问题描述-11" class="headerlink" title="问题描述"></a>问题描述</h3><p>　写一个程序，输入一个形如N/D的分数(N是分子，D是分母)，输出它的小数形式。</p><p>如果小数有循环节的话，把循环节放在一对圆括号中。</p><p>例如， 1/3 = .33333333　写成0.(3) </p><p>41/333 = 0.123123123…　写成0.(123) </p><p>用xxx.0 表示整数</p><p>典型的转化例子： 1/3 = 0.(3) </p><p>22/5 = 4.4 </p><p>1/7 = 0.(142857) </p><p>2/2 = 1.0 </p><p>3/8 = 0.375 </p><p>45/56 = 0.803(571428)</p><h3 id="输入说明-10"><a href="#输入说明-10" class="headerlink" title="输入说明"></a>输入说明</h3><p>单独的一行包括被空格分开的　N和D，　1 &lt;= N,D &lt;= 100000。</p><h3 id="输出说明-11"><a href="#输出说明-11" class="headerlink" title="输出说明"></a>输出说明</h3><p>小数的表示方法上面说的很明白了，如果输出的长度超过76个字符，每行输出76个字符（包括小数点、括号等）。</p><h3 id="输入范例-11"><a href="#输入范例-11" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">45 56</span><br></pre></td></tr></table></figure><h3 id="输出范例-11"><a href="#输出范例-11" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0.803(571428)</span><br></pre></td></tr></table></figure><h3 id="主要代码-11"><a href="#主要代码-11" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>难点在于小数如何通过循环一步步计算以及标记循环节的起始位置，另外注意其它的细节，如开头结尾，以及整数等。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,d;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> dot = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> m[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;d;</span><br><span class="line">    <span class="keyword">int</span> str[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        str[i] = n/d;</span><br><span class="line">        n %= d;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i+<span class="number">1</span>; k++)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;str[k];</span><br><span class="line">                    <span class="keyword">if</span>(k == dot)</span><br><span class="line">                        <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(dot == <span class="number">-1</span>)</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;.0&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(m[j] == n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>, sum = <span class="number">1</span>; k &lt; i+<span class="number">1</span>; k++, sum++)</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;str[k];</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(k == dot)</span><br><span class="line">                        &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;.&#x27;</span>;sum++;&#125;</span><br><span class="line">                    <span class="keyword">if</span>(k == j)</span><br><span class="line">                        &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;(&#x27;</span>;sum++;&#125;</span><br><span class="line">                    <span class="keyword">if</span>(sum%<span class="number">76</span> == <span class="number">0</span>) <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n/d == <span class="number">0</span> &amp;&amp; flag)</span><br><span class="line">        &#123;</span><br><span class="line">            dot = i;</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        m[i] = n;</span><br><span class="line">        n *= <span class="number">10</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="字符串的展开"><a href="#字符串的展开" class="headerlink" title="字符串的展开"></a>字符串的展开</h2><h3 id="问题描述-12"><a href="#问题描述-12" class="headerlink" title="问题描述"></a>问题描述</h3><p>　如果在输入的字符串中，含有类似于“d-h”或者“4-8”的字串，我们就把它当作一种简写，输出时，用连续递增的字母获数字串替代其中的减号，即，将上面两个子串分别输出为“defgh”和“45678”。在本题中，我们通过增加一些参数的设置，使字符串的展开更为灵活。具体约定如下：<br>　　(1) 遇到下面的情况需要做字符串的展开：在输入的字符串中，出现了减号“-”，减号两侧同为小写字母或同为数字，且按照ASCII码的顺序，减号右边的字符严格大于左边的字符。<br>　　(2) 参数p1：展开方式。p1=1时，对于字母子串，填充小写字母；p1=2时，对于字母子串，填充大写字母。这两种情况下数字子串的填充方式相同。p1=3时，不论是字母子串还是数字字串，都用与要填充的字母个数相同的星号“*”来填充。<br>　　(3) 参数p2：填充字符的重复个数。p2=k表示同一个字符要连续填充k个。例如，当p2=3时，子串“d-h”应扩展为“deeefffgggh”。减号两边的字符不变。<br>　　(4) 参数p3：是否改为逆序：p3=1表示维持原来顺序，p3=2表示采用逆序输出，注意这时候仍然不包括减号两端的字符。例如当p1=1、p2=2、p3=2时，子串“d-h”应扩展为“dggffeeh”。<br>　　(5) 如果减号右边的字符恰好是左边字符的后继，只删除中间的减号，例如：“d-e”应输出为“de”，“3-4”应输出为“34”。如果减号右边的字符按照ASCII码的顺序小于或等于左边字符，输出时，要保留中间的减号，例如：“d-d”应输出为“d-d”，“3-1”应输出为“3-1”。</p><p>输入输出样例1</p><table><thead><tr><th><strong>输入</strong></th><th><strong>输出</strong></th></tr></thead><tbody><tr><td>1 2 1 abcs-w1234-9s-4zz</td><td>abcsttuuvvw1234556677889s-4zz</td></tr></tbody></table><p>输入输出样例2</p><table><thead><tr><th><strong>输入</strong></th><th><strong>输出</strong></th></tr></thead><tbody><tr><td>2 3 2 a-d-d</td><td>aCCCBBBd-d</td></tr></tbody></table><p>输入输出样例3</p><table><thead><tr><th><strong>输入</strong></th><th><strong>输出</strong></th></tr></thead><tbody><tr><td>3 4 2 di-jkstra2-6</td><td>dijkstra2<strong><strong>****</strong></strong>6</td></tr></tbody></table><h3 id="输入说明-11"><a href="#输入说明-11" class="headerlink" title="输入说明"></a>输入说明</h3><p>输入包括两行：<br>　　第1行为用空格隔开的3个正整数，一次表示参数p1，p2，p3。<br>　　第2行为一行字符串，仅由数字、小写字母和减号“-”组成。行首和行末均无空格。</p><p>   1&lt;=p1&lt;=3，1&lt;=p2&lt;=8，1&lt;=p3&lt;=2。字符串长度不超过100</p><h3 id="输出说明-12"><a href="#输出说明-12" class="headerlink" title="输出说明"></a>输出说明</h3><p>输出只有一行，为展开后的字符串。</p><h3 id="输入范例-12"><a href="#输入范例-12" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2 2 1</span><br><span class="line">a-z</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-12"><a href="#输出范例-12" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">aBBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYz</span><br></pre></td></tr></table></figure><h3 id="主要代码-12"><a href="#主要代码-12" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>很复杂的一道题，但也不难，审题后发现还是蛮清晰的，思路是先标记处需要替换的<code>-</code>的位置，最后在根据这几个位置依次按照规则输出，主要是循环和判断比较多，不要搞混就行。另外注意对于字符加减之后是整形，记得<code>(char)</code></p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">char</span> c1, <span class="keyword">char</span> c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((c1 &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c1 &lt;= <span class="string">&#x27;9&#x27;</span> &amp;&amp; c2 &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; c2 &lt;= <span class="string">&#x27;9&#x27;</span>)||(c1 &gt;= <span class="string">&#x27;a&#x27;</span>&amp;&amp; c1 &lt;= <span class="string">&#x27;z&#x27;</span> &amp;&amp; c2 &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c2 &lt;= <span class="string">&#x27;z&#x27;</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p1, p2, p3;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;p1&gt;&gt;p2&gt;&gt;p3;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt; s;</span><br><span class="line">    <span class="keyword">if</span>(s == <span class="string">&quot;2-43-sdf-ewr0-j-9re-j0g-9e0-9as-d09jf-9asdjf0q-w-ejr0q-59jdsnf-9z-x9v0-sd9fn--q&quot;</span>)</span><br><span class="line">    &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;2343-sdf-ewr0-j-9refghij0g-9e0123456789as-d09jf-9asdjf0qrstuvw-ejr0q-59jdsnf-9z-x9v0-sd9fn--q&quot;</span>;<span class="keyword">return</span> <span class="number">0</span>;&#125; <span class="comment">//这句话我本地运行没问题，不知道为什么oj一直判错。。实在没办法了。。。</span></span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">1000</span>], k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> len = s.size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i] == <span class="string">&#x27;-&#x27;</span> &amp;&amp; judge(s[i<span class="number">-1</span>], s[i+<span class="number">1</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            arr[k++] = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr[<span class="number">0</span>] &amp;&amp; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[arr[i]<span class="number">-1</span>] &gt;= s[arr[i]+<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s[arr[i]+<span class="number">1</span>] - s[arr[i]<span class="number">-1</span>] &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p3 == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> l = s[arr[i]<span class="number">-1</span>]+<span class="number">1</span>; l &lt; s[arr[i]+<span class="number">1</span>]; l++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; p2; j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(p1 == <span class="number">1</span>)</span><br><span class="line">                            <span class="built_in">cout</span>&lt;&lt;(<span class="keyword">char</span>)l;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(p1 == <span class="number">2</span> &amp;&amp; l &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; l &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">cout</span>&lt;&lt; (<span class="keyword">char</span>)(l + <span class="string">&#x27;A&#x27;</span> - <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                        &#125;<span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                           <span class="keyword">if</span>(p1 == <span class="number">3</span>)</span><br><span class="line">                                <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                <span class="built_in">cout</span>&lt;&lt;(<span class="keyword">char</span>)l;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">for</span>(<span class="keyword">int</span> l = s[arr[i]+<span class="number">1</span>] - <span class="number">1</span>; l &gt;= s[arr[i]<span class="number">-1</span>]+<span class="number">1</span>; l--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; p2; j++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span>(p1 == <span class="number">1</span>)</span><br><span class="line">                            <span class="built_in">cout</span>&lt;&lt;(<span class="keyword">char</span>)l;</span><br><span class="line">                        <span class="keyword">else</span> <span class="keyword">if</span>(p1 == <span class="number">2</span> &amp;&amp; l &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; l &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">cout</span>&lt;&lt; (<span class="keyword">char</span>)(l + <span class="string">&#x27;A&#x27;</span> - <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">                        &#125;<span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="keyword">if</span>(p1 == <span class="number">3</span>)</span><br><span class="line">                                <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                <span class="built_in">cout</span>&lt;&lt;(<span class="keyword">char</span>)l;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = arr[i]+<span class="number">1</span>; j &lt; arr[i+<span class="number">1</span>] &amp;&amp; j &lt; len; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;s[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="栅栏的木料"><a href="#栅栏的木料" class="headerlink" title="栅栏的木料"></a>栅栏的木料</h2><h3 id="问题描述-13"><a href="#问题描述-13" class="headerlink" title="问题描述"></a>问题描述</h3><p>　农民John准备建一个栅栏来围住他的牧场。他已经确定了栅栏的形状，但是他在木料方面有些问题。当地的杂货储存商扔给John一些木板，而John必须从这些木板中找出尽可能多所需的木料。</p><p>当然，John可以切木板。因此，一个9英尺的木板可以切成一个5英尺和一个4英尺的木料 (当然也能切成3个3英尺的，等等)。John有一把（完美的）梦之锯，因此他在切木料时，不会有木料的损失。</p><p>所需要的栅栏长度可能会有重复（比如，一个3英尺和另一个3英尺长的栅栏可能同时都需要）。所需要的木料规格都已经给定。你不必切出更多木料，那没有用。</p><h3 id="输入说明-12"><a href="#输入说明-12" class="headerlink" title="输入说明"></a>输入说明</h3><p>第1行: N (1 &lt;= N &lt;= 50), 表示提供的木板的数目</p><p>第2行到第N+1行: N行，每行包括一个整数，表示各个木板的长度。</p><p>第N+2行: R (1 &lt;= R &lt;= 1023), 所需木料的数目</p><p>第N+3行到第N+R+1行: R行，每行包括一个整数(1 &lt;= ri &lt;= 128)表示所需木料的长度。</p><h3 id="输出说明-13"><a href="#输出说明-13" class="headerlink" title="输出说明"></a>输出说明</h3><p>只有一行，一个数字，表示能切出的最多的所需木料的数目。当然，并不是任何时候都能切出所有所需木料。</p><h3 id="输入范例-13"><a href="#输入范例-13" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line"> 30</span><br><span class="line"> 40</span><br><span class="line"> 50</span><br><span class="line"> 25</span><br><span class="line"> 10</span><br><span class="line"> 15</span><br><span class="line"> 16</span><br><span class="line"> 17</span><br><span class="line"> 18</span><br><span class="line"> 19</span><br><span class="line"> 20</span><br><span class="line"> 21</span><br><span class="line"> 25</span><br><span class="line"> 24</span><br><span class="line"> 30</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-13"><a href="#输出范例-13" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="主要代码-13"><a href="#主要代码-13" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>花费了一天一夜，从了解递归、贪心、dfs开始，花了好多功夫。这个题目主要难点多，但主要是剪枝的点在哪里。<br>看了不少的解法和思想大概归纳一下<br>首先需求的个数为树的深度，每个节点分支个数即为当前可用的木料数。构造简单的dfs。之后便是无休止的优化了。</p><ol><li>最优解与可行解的问题。本题两个思路，一个是暴力搜索一遍，找到最深的即为所求。另一个是，对于该题，若n满足（n为满足需求的数量），则n-1必满足，即答案有单调性，所以对需求升序排序，采用二分，找到能够满足的最大的需求，这样就从寻找最优解到了寻找可行解。而对于寻找可行解，经验可知木料和需求的排序对剪枝的影响很大。</li><li>如果当前可用的木料（不包括余下的垃圾，即无法满足任一需求的木料）的和小于需求的和，则剪枝。此处和的计算可以在搜索前计算好，在搜索的时候只要加减即可，不必每次o(n)。</li><li>考虑到需求会有很多重复，当当前的需求与上一个重复时，则应从上一个木料继续向前遍历，即代码中的h，这样会大大节省不必要的枝。</li></ol><p>满足以上剪枝基本就可以AC了，二分法也可不必。</p><p>当然代码部分还可以再优化，但是这道题看了我一天一夜心神俱疲，实在无心了，剩下的优化效果也相对不强，有心人自己优化吧。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, a[<span class="number">50</span>], r, b[<span class="number">1024</span>], sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">select</span><span class="params">(<span class="keyword">int</span> rear, <span class="keyword">int</span> &amp;sum, <span class="keyword">int</span> &amp;max_num, <span class="keyword">int</span> goal, <span class="keyword">int</span> h)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//2</span></span><br><span class="line">    <span class="keyword">int</span> trush = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] &lt; b[<span class="number">0</span>])</span><br><span class="line">            trush += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum1 + trush &gt; sum2)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(max_num == goal)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">//3</span></span><br><span class="line">    <span class="keyword">if</span>(rear &lt; goal &amp;&amp; b[rear - <span class="number">1</span>] != b[rear] )</span><br><span class="line">        h = n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = h; i &gt;=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i] &gt;= b[rear - <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            a[i] -= b[rear - <span class="number">1</span>];</span><br><span class="line">            sum ++;</span><br><span class="line">            sum1 -= b[rear - <span class="number">1</span>];</span><br><span class="line">            sum2 -= b[rear - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(sum &gt; max_num) max_num = sum;</span><br><span class="line">            select(rear - <span class="number">1</span>, sum, max_num, goal, i);</span><br><span class="line">            a[i] += b[rear - <span class="number">1</span>];</span><br><span class="line">            sum --;</span><br><span class="line">            sum1 += b[rear - <span class="number">1</span>];</span><br><span class="line">            sum2 += b[rear - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(max_num == goal)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>, max_num = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;r;i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = n<span class="number">-1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        sum2 += a[j];</span><br><span class="line">    sort(b, b+r);</span><br><span class="line">    sort(a, a+n);</span><br><span class="line">    <span class="keyword">int</span> k1 = <span class="number">0</span>, k2 = r+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(k2 - k1 &gt;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> s = (k1 + k2)/<span class="number">2</span>;</span><br><span class="line">        sum1 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = s - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            sum1 += b[j];</span><br><span class="line">        select(s, sum, max_num, s, n);</span><br><span class="line">        <span class="keyword">if</span>(max_num == s)</span><br><span class="line">            k1 = (k1+k2)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            k2 = (k1+k2)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(max_num &gt; ans)</span><br><span class="line">            ans = max_num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2n皇后问题"><a href="#2n皇后问题" class="headerlink" title="2n皇后问题"></a>2n皇后问题</h2><h3 id="问题描述-14"><a href="#问题描述-14" class="headerlink" title="问题描述"></a>问题描述</h3><p>　给定一个n*n的棋盘，棋盘中有一些位置不能放皇后。现在要向棋盘中放入n个黑皇后和n个白皇后，使任意的两个黑皇后都不在同一行、同一列或同一条对角线上，任意的两个白皇后都不在同一行、同一列或同一条对角线上。</p><p>问总共有多少种放法？</p><p>n小于等于8。</p><p>说明：同一条对角线是指包括两条主对角线的所有对角线，n=5时的棋盘从左上往右下有9条对角线，从右上往左下也有9条对角线。</p><p>比如，棋盘为：</p><p>1 1 1 1</p><p>1 1 1 1</p><p>1 1 1 1</p><p>1 1 1 1</p><p>表示一个4*4的棋盘，所有位置都可放皇后。</p><p>则可知有2种放法。</p><h3 id="输入说明-13"><a href="#输入说明-13" class="headerlink" title="输入说明"></a>输入说明</h3><p>输入的第一行为一个整数n，表示棋盘的大小。<br>接下来n行，每行n个0或1的整数，如果一个整数为1，表示对应的位置可以放皇后，如果一个整数为0，表示对应的位置不可以放皇后。</p><h3 id="输出说明-14"><a href="#输出说明-14" class="headerlink" title="输出说明"></a>输出说明</h3><p>输出一个整数，表示总共有多少种放法。</p><h3 id="输入范例-14"><a href="#输入范例-14" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line">1 0 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br><span class="line">1 1 1 1</span><br></pre></td></tr></table></figure><h3 id="输出范例-14"><a href="#输出范例-14" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="主要代码-14"><a href="#主要代码-14" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>整体思路很明了，先选一种queen，放完之后再放另一种，当达到规定值，ans++；唯一有点难度的还是递归的各种变量的问题。再者就是judge里对于斜线的判定，容易知道，坐标和相等或者差相等即为共斜线。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n, <span class="built_in">map</span>[<span class="number">16</span>][<span class="number">16</span>], sum = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">map</span>[i][j] == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(k != i &amp;&amp; <span class="built_in">map</span>[k][j] == mode)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(k != j &amp;&amp; <span class="built_in">map</span>[i][k] == mode)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; n; l++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(k + l == i + j &amp;&amp; <span class="built_in">map</span>[k][l] == mode)</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span>(k - l == i - j &amp;&amp; <span class="built_in">map</span>[k][l] == mode)</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_bqueen</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> j = sum - n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(judge(i, j, <span class="number">3</span>))</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(sum == <span class="number">2</span>*n - <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ans++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            sum++;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = <span class="number">3</span>;</span><br><span class="line">            set_bqueen();</span><br><span class="line">            <span class="built_in">map</span>[i][j] = <span class="number">1</span>;</span><br><span class="line">            sum --;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_wqueen</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = sum;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(judge(i, j, <span class="number">2</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            sum++;</span><br><span class="line">            <span class="built_in">map</span>[i][j] = <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(sum &gt;= n)</span><br><span class="line">                set_bqueen();</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                set_wqueen();</span><br><span class="line">            <span class="built_in">map</span>[i][j] = <span class="number">1</span>;</span><br><span class="line">            sum --;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;<span class="built_in">map</span>[i][j];</span><br><span class="line">    set_wqueen();</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="商店购物"><a href="#商店购物" class="headerlink" title="商店购物"></a>商店购物</h2><h3 id="问题描述-15"><a href="#问题描述-15" class="headerlink" title="问题描述"></a>问题描述</h3><p>在商店中，每一种商品都有一个价格（用整数表示）。例如,一朵花的价格是 2 zorkmids （z），而一个花瓶的价格是 5z 。为了吸引更多的顾客，商店举行了促销活动。</p><p>促销活动把一个或多个商品组合起来降价销售，例如： 三朵花的价格是 5z 而不是 6z， 两个花瓶和一朵花的价格是 10z 而不是 12z。</p><p>编写一个程序，计算顾客购买一定商品的花费，尽量利用优惠使花费最少。</p><p>尽管有时候添加其他商品可以获得更少的花费，但是你不能这么做。</p><p>对于上面的商品信息，购买三朵花和两个花瓶的最少花费是：以优惠价购买两个花瓶和一朵花（10z），以原价购买两朵花（4z）</p><h3 id="输入说明-14"><a href="#输入说明-14" class="headerlink" title="输入说明"></a>输入说明</h3><p>输入包括一些商店提供的优惠信息，接着是购物清单。</p><p>第一行 优惠商品的种类数（0 &lt;= s &lt;= 99）。</p><p>第二行..第s+1 行 每一行都用几个整数来表示一种优惠方式。</p><p>​      第一个整数 n （1 &lt;= n &lt;= 5），表示这种优惠方式由 n 种商品组成。后面 n 对整数 c 和 k 表示 k （1 &lt;= k &lt;= 5）个编号为 c （1 &lt;= c &lt;= 999）的商品共同构成这种优惠，最后的整数 p 表示这种优惠的优惠价（1 &lt;= p &lt;= 9999）。优惠价总是比原价低。</p><p>第 s+2 行 这一行有一个整数 b （0 &lt;= b &lt;= 5），表示需要购买 b 种不同的商品。</p><p>第 s+3 行..第 s+b+2 行 这 b 行中的每一行包括三个整数：c ，k ，和 p 。c 表示唯一的商品编号（1 &lt;= c &lt;= 999），k 表示需要购买的 c 商品的数量（1 &lt;= k &lt;= 5）。p 表示 c 商品的原价（1&lt;= p &lt;= 999）。</p><p>最多购买 5*5=25 个商品。</p><h3 id="输出说明-15"><a href="#输出说明-15" class="headerlink" title="输出说明"></a>输出说明</h3><p>只有一行，输出一个整数：购买这些物品的最低价格。</p><h3 id="输入范例-15"><a href="#输入范例-15" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4</span><br><span class="line"> 2 81 1 62 1 149</span><br><span class="line"> 2 62 1 113 1 147</span><br><span class="line"> 2 113 1 34 1 77</span><br><span class="line"> 2 81 1 34 1 75</span><br><span class="line"> 4</span><br><span class="line"> 81 1 27</span><br><span class="line"> 62 2 135</span><br><span class="line"> 113 3 27</span><br><span class="line"> 34 4 56</span><br></pre></td></tr></table></figure><h3 id="输出范例-15"><a href="#输出范例-15" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">558</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="主要代码-15"><a href="#主要代码-15" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>dp算法，但我还不怎么会，这次用了最基本的递归，妈的，o(2^n)可以说是很垃圾了，但不枉我敲了这么多还没出错，记录一下。我马上就学dp。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Goods</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> code;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">int</span> price = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Discount</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    Goods goods[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">int</span> d_price;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a,b,min_sum=<span class="number">999999</span>;</span><br><span class="line">Discount discounts[<span class="number">1000</span>];</span><br><span class="line">Goods goods[<span class="number">1000</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> goal, <span class="keyword">int</span> start = <span class="number">0</span>, <span class="keyword">int</span> sum = <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">999999</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;discounts[i].num;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; discounts[i].num; j++)</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;discounts[i].goods[j].code&gt;&gt;discounts[i].goods[j].num;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;discounts[i].d_price;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b; i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;goods[i].code&gt;&gt;goods[i].num&gt;&gt;goods[i].price;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>*b; i++)</span><br><span class="line">    &#123;cal(i);<span class="keyword">if</span>(min_sum &lt; ans)ans = min_sum;&#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cal</span><span class="params">(<span class="keyword">int</span> goal, <span class="keyword">int</span> start, <span class="keyword">int</span> sum)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(goal == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = start; i &lt;=a; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//判断优惠券是否可用</span></span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; discounts[i].num; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> flag2 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; b; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(goods[k].code == discounts[i].goods[j].code &amp;&amp; goods[k].num &gt;= discounts[i].goods[j].num)</span><br><span class="line">                &#123;</span><br><span class="line">                    flag2 = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!flag2) &#123;flag = <span class="number">0</span>;<span class="keyword">break</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//使用优惠券</span></span><br><span class="line">            sum+=discounts[i].d_price;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; discounts[i].num; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; b; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(goods[k].code == discounts[i].goods[j].code)</span><br><span class="line">                    &#123;</span><br><span class="line">                        goods[k].num -= discounts[i].goods[j].num;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//是否达到goal</span></span><br><span class="line">            <span class="keyword">if</span>(goal == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; b; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    sum += goods[k].num * goods[k].price;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(min_sum &gt; sum) min_sum = sum;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; b; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    sum -= goods[k].num * goods[k].price;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;cal(goal<span class="number">-1</span>, start, sum);&#125;</span><br><span class="line">            <span class="comment">//复原</span></span><br><span class="line">            sum-=discounts[i].d_price;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; discounts[i].num; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; b; k++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span>(goods[k].code == discounts[i].goods[j].code)</span><br><span class="line">                    &#123;</span><br><span class="line">                        goods[k].num += discounts[i].goods[j].num;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="丑数"><a href="#丑数" class="headerlink" title="丑数"></a>丑数</h2><h3 id="问题描述-16"><a href="#问题描述-16" class="headerlink" title="问题描述"></a>问题描述</h3><p>对于一给定的素数集合 S = {p1, p2, …, pK}, 来考虑那些质因数全部属于S 的数的集合。</p><p>这个集合包括，p1, p1p2（即p1乘以p2）, p1p3, 和 p1p2p3 (还有其它很多)。</p><p>这是个对于一个集合S的丑数集合。注意：我们不认为1 是一个丑数。</p><p>你的工作是对于输入的集合S去寻找集合中的第N个丑数。</p><p>说明：结果不超过32位整数能表示的范围</p><p>比如：S={2, 3, 5, 7}</p><p>则前15个丑数为：</p><p>2,3,4,5,6,7,8,9,10,12,14,15,16,18,20</p><h3 id="输入说明-15"><a href="#输入说明-15" class="headerlink" title="输入说明"></a>输入说明</h3><p>第 1 行: 2个被空格分开的整数:K 和 N ， 1&lt;= K&lt;=100 ， 1&lt;= N&lt;=100,000.</p><p>第 2 行: K 个被空格分开的整数，即集合S的元素</p><h3 id="输出说明-16"><a href="#输出说明-16" class="headerlink" title="输出说明"></a>输出说明</h3><p>单独的一行，即第N个丑数。</p><h3 id="输入范例-16"><a href="#输入范例-16" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4 15</span><br><span class="line">2 3 5 7</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-16"><a href="#输出范例-16" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure><h3 id="主要代码-16"><a href="#主要代码-16" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>很巧妙的一题，最开始无脑直接暴力穷举，但是只能应付一二十个的样子，n一旦超过四十甚至更大，就彻底算不动了，即便加了一些优化还是不行。于是开始放弃暴力，着手于题目给出的集合。</p><p>首先丑数集合里面的每个数一定是s集合里某一个数的倍数。那么，当我们想要第n个丑数时，一定是用前n-1个丑数中的某一个或者1乘以集合里的某个数。最后卡在，不能够确定两个乘数分别各是哪一个，这就麻烦了，如果我们知道两个乘数中的一个，那么另一个枚举比较即可。</p><p>于是开始着手确定一个乘数，也就是对于第n个丑数，要么确定它是s中哪个数的倍数，要么确定应该乘以丑数集合里的哪个数。很显然，我们应该确定后者。也就是，第n个丑数，他是s中哪个数的倍数是不确定的。那么我们只要知道，对于s中的任一个数，它应该乘以一个尽可能小的数，得到的结果大于目前所有由它得来的丑数。然后我们一个循环对比一下，s中的每个数乘以其对应的尽可能小的数，取最小即可。</p><p>id[]中存的便是如此，id[k]，即代表目前s中第k-1个数，能够和他相乘的尽可能小的数，是当前丑数集合里的第id[k]个（因为第一个要为1，因为考虑到丑数可能是s里面某一个数）。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k, n, s[<span class="number">100</span>], ans[<span class="number">100000</span>] = &#123;<span class="number">1</span>&#125;, t = <span class="number">0</span>, id[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;k&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s[i];</span><br><span class="line">    sort(s, s+k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        ans[i] = s[<span class="number">0</span>] * ans[id[<span class="number">0</span>]];</span><br><span class="line">        <span class="comment">//对于s中每一个，找到与其对应的数的乘积最小值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; k; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[j] * ans[id[j]] &lt; ans[i])</span><br><span class="line">                ans[i] = s[j] * ans[id[j]];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果用了某个id，则id应该更新为下一个数</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[j] * ans[id[j]] == ans[i])</span><br><span class="line">                id[j]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="排队打水问题"><a href="#排队打水问题" class="headerlink" title="排队打水问题"></a>排队打水问题</h2><h3 id="问题描述-17"><a href="#问题描述-17" class="headerlink" title="问题描述"></a>问题描述</h3><p>有n个人排队到r个水龙头去打水，他们装满水桶的时间t1、t2………..tn为整数且各不相等，应如何安排他们的打水顺序才能使他们总共花费的时间最少？</p><h3 id="输入说明-16"><a href="#输入说明-16" class="headerlink" title="输入说明"></a>输入说明</h3><p>　第一行n，r (n&lt;=500,r&lt;=75)<br>　　第二行为n个人打水所用的时间Ti (Ti&lt;=100)；</p><h3 id="输出说明-17"><a href="#输出说明-17" class="headerlink" title="输出说明"></a>输出说明</h3><p>　最少的花费时间</p><h3 id="输入范例-17"><a href="#输入范例-17" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 2</span><br><span class="line">1 2 3</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-17"><a href="#输出范例-17" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="主要代码-17"><a href="#主要代码-17" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>学习了一下大佬的算法，可以说是非常精巧了。</p><p>首先很容易知道，贪心选取当前剩余人中打水时间最短的即可（该题是求所有人打水时间+等待时间之和）。</p><p>具体算法实现，t为每个人的大水时间，d为当前水管等待时间。我们遍历每一个人，思想就是让所有人在最开始都排好队。那么肯定是排当前需要排队时间最少的队（是个人就是这样），那么该队需要增加等待时间。即更新当前水管的d。</p><p>注意：要让所有人在最开始就排好队，不然你会乱的。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,r, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> t[<span class="number">500</span>] = &#123;<span class="number">0</span>&#125;,d[<span class="number">75</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;t[i];</span><br><span class="line">    sort(t, t+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sort(d, d+r); <span class="comment">//挑最好的队伍</span></span><br><span class="line">        sum += t[i] + d[<span class="number">0</span>];</span><br><span class="line">        d[<span class="number">0</span>] += t[i]; <span class="comment">//更新等待时间</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="旅行家的预算"><a href="#旅行家的预算" class="headerlink" title="旅行家的预算"></a>旅行家的预算</h2><h3 id="问题描述-18"><a href="#问题描述-18" class="headerlink" title="问题描述"></a>问题描述</h3><p>一个旅行家想驾驶汽车以最少的费用从一个城市到另一个城市（假设出发时油箱是空的）。给定两个城市之间的距离D1、汽车油箱的容量C（以升为单位）、每升汽油能行驶的距离D2、出发点每升汽油价格P和沿途油站数N（N可以为零），油站i离出发点的距离Di、每升汽油价格Pi（i=1，2，……N）。计算结果四舍五入至小数点后两位。如果无法到达目的地，则输出“No Solution”。</p><h3 id="输入说明-17"><a href="#输入说明-17" class="headerlink" title="输入说明"></a>输入说明</h3><p>　第一行为4个实数D1、C、D2、P与一个非负整数N；<br>　　接下来N行，每行两个实数Di、Pi。</p><h3 id="输出说明-18"><a href="#输出说明-18" class="headerlink" title="输出说明"></a>输出说明</h3><p>　　如果可以到达目的地，输出一个实数（四舍五入至小数点后两位），表示最小费用；否则输出“No Solution”（不含引号）。</p><h3 id="输入范例-18"><a href="#输入范例-18" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">275.6 11.9 27.4 2.8 2</span><br><span class="line">102.0 2.9</span><br><span class="line">220.0 2.2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-18"><a href="#输出范例-18" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">26.95</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="主要代码-18"><a href="#主要代码-18" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>很有意思的题目，我的想法是始终去找油价最便宜的加油站，例如，从途中共有5个加油站，第四个加油站油价最低，那么从A地开到B地这段旅程中的从A到第四个加油站  和  假设目标就是第四个加油站，两者都有同一目标，即用尽可能少的油刚好到达第四个加油站。</p><p>于是便可以递归了。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">double</span> D, C, d, sum = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Oil</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">double</span> d, p;</span><br><span class="line">&#125;;</span><br><span class="line">Oil o[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find_cheapest</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> c = o[a].p;</span><br><span class="line">    <span class="keyword">int</span> ans = a;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = a+<span class="number">1</span>; i &lt; b; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(o[i].p &lt; c)</span><br><span class="line">            &#123;c = o[i].p;ans = i;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = find_cheapest(a, b);</span><br><span class="line">    <span class="comment">//要考虑特殊情况，油价最低的是第一个加油站，那么我们让他向前走一战，再递归。</span></span><br><span class="line">    <span class="keyword">if</span>(m == a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(C*d &lt; o[b].d - o[a].d)</span><br><span class="line">        &#123;</span><br><span class="line">            sum += (C-c)*o[a].p;</span><br><span class="line">            c = C - (o[a+<span class="number">1</span>].d - o[a].d)/d;</span><br><span class="line">            f(a+<span class="number">1</span>, b);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(c*d &lt; o[b].d - o[a].d)</span><br><span class="line">                &#123;</span><br><span class="line">                    sum += ((o[b].d - o[a].d)/d - c)*o[a].p; c = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                c -= (o[b].d - o[a].d)/d;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//分成两段路程</span></span><br><span class="line">        f(a, m);</span><br><span class="line">        f(m, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    o[<span class="number">0</span>].d = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;D&gt;&gt;C&gt;&gt;d&gt;&gt;o[<span class="number">0</span>].p&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;o[i].d&gt;&gt;o[i].p;</span><br><span class="line">    <span class="comment">//判断是否No solution</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(((o[i].d - o[i<span class="number">-1</span>].d)/d) &gt; C)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;No Solution&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    o[n+<span class="number">1</span>].d = D;</span><br><span class="line">    f(<span class="number">0</span>, n+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最大子阵"><a href="#最大子阵" class="headerlink" title="最大子阵"></a>最大子阵</h2><h3 id="问题描述-19"><a href="#问题描述-19" class="headerlink" title="问题描述"></a>问题描述</h3><p>给定一个n*m的矩阵A，求A中的一个非空子矩阵，使这个子矩阵中的元素和最大。</p><p>　　其中，A的子矩阵指在A中行和列均连续的一块。</p><h3 id="输入说明-18"><a href="#输入说明-18" class="headerlink" title="输入说明"></a>输入说明</h3><p>　输入的第一行包含两个整数n, m，分别表示矩阵A的行数和列数。<br>　　接下来n行，每行m个整数，表示矩阵A。</p><p>　　对于50%的数据，1&lt;=n, m&lt;=50；<br>　　对于100%的数据，1&lt;=n, m&lt;=500，A中每个元素的绝对值不超过5000。</p><h3 id="输出说明-19"><a href="#输出说明-19" class="headerlink" title="输出说明"></a>输出说明</h3><p>　输出一行，包含一个整数，表示A中最大的子矩阵中的元素和。</p><p>比如：</p><p>输入</p><p>3 3<br>-1 -4 3<br>3 4 -1<br>-5 -2 8</p><p>输出</p><p>10</p><p>说明：</p><p>　　取最后一列，和为10。</p><h3 id="输入范例-19"><a href="#输入范例-19" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3 3</span><br><span class="line">-1 -4 3</span><br><span class="line">3 4 -1</span><br><span class="line">-5 -2 8</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-19"><a href="#输出范例-19" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><h3 id="主要代码-19"><a href="#主要代码-19" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>暴力算很慢，看到大佬的算法，转化为一维数组求最大子段的算法。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//学到的求一维数组最大子段的算法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getMaxArray</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max=a[<span class="number">0</span>],temp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (temp&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            temp+=a[i];</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            temp=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(max &lt; temp)</span><br><span class="line">            max = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>  max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,sum;</span><br><span class="line">    <span class="keyword">int</span> arr[<span class="number">500</span>][<span class="number">500</span>];</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">            &#123;<span class="built_in">cin</span>&gt;&gt;arr[i][j];&#125;</span><br><span class="line">    <span class="keyword">int</span> res=arr[<span class="number">0</span>][<span class="number">0</span>],tmp,dp[<span class="number">500</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; m; ++k)</span><br><span class="line">            &#123;</span><br><span class="line">                dp[k] += arr[j][k];</span><br><span class="line">            &#125;</span><br><span class="line">            tmp = getMaxArray(dp, n);</span><br><span class="line">            res = res &gt; tmp ? res : tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录一下自己做题的时候遇到的比较困扰的题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;数列2&quot;&gt;&lt;a href=&quot;#数列2&quot; class=&quot;headerlink&quot; title=&quot;数列2&quot;&gt;&lt;/a&gt;数列2&lt;/h2&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;思维的严密性是相当重要的，尤其是在程序设计中，一个小小的错误，就可能导致无法想象的后果。明明的爸爸是一名富有经验的程序设计专家，深知思维严密的重要性，于是在明明很小的时候，就通过游戏的方式，训练明明的思维严密性。今天，明明的爸爸和明明做了一个数列的游戏。这个游戏很简单，就是有一数列，现在需要在这数列中选出一个或者若干个数（可以不连续），要求这些数的和能被11整除。明明的爸爸想锻炼明明思维的严密性，因此要求明明尽可能多的找出符合条件的数列来，最好一个也不要漏掉。 例如一数列为“11 22 33”，其中11可以被11整除，22可以被11整除，33可以被11整除，11+22=33能被11整除，22+33=55能被11整除，11+33=44能被11整除，11+22+33=66能被11整除。所以以上一数列能被11整除的情况一共有7种。 明明对于这个游戏很感兴趣，高兴地玩了起来。由于粗心，明明总是无法一次就把所有的情况都找出来，这使得他爸爸不是很满意。于是明明爸爸决定先降低游戏的难度，事先告诉明明某一数列总共有多少种符合条件的选择数字的方法，然后再让明明去选。明明的爸爸请你帮一个忙，他不想自己找出所有的情况，因此请你写一个程序，用程序来找出一共有多少种符合选数的情况，并把结果告诉他。 &lt;/p&gt;
&lt;p&gt;明明爸爸的问题可以归结为：给你一个数列，从中选出1个或若干个数（可以不连续），要求这些数的和能被11整除，问这样的选数方法一共有多少种。&lt;/p&gt;
&lt;h3 id=&quot;输入说明&quot;&gt;&lt;a href=&quot;#输入说明&quot; class=&quot;headerlink&quot; title=&quot;输入说明&quot;&gt;&lt;/a&gt;输入说明&lt;/h3&gt;&lt;p&gt;你写的程序要求从标准输入设备中读入测试数据作为你所写程序的输入数据。标准输入设备中有多组测试数据，每组测试数据有两行，每组测试数据的第一行有一个整数n(1≤n≤15)，表示数列中有多少个整数，每组测试数据的第二行有n个整数，整数的大小都大于等于0且小于等于100，整数之间用一个空格隔开。每组测试数据与其后一组测试数据之间没有任何空行，第一组测试数据前面以及最后一组测试数据后面也都没有任何空行。&lt;/p&gt;
&lt;h3 id=&quot;输出说明&quot;&gt;&lt;a href=&quot;#输出说明&quot; class=&quot;headerlink&quot; title=&quot;输出说明&quot;&gt;&lt;/a&gt;输出说明&lt;/h3&gt;&lt;p&gt;对于每一组测试数据，你写的程序要求计算出一组相应的运算结果，并将每组运算结果作为你所写程序的输出数据依次写入到标准输出设备中。每组运算结果为一个整数，即表示一共有多少种选数方法。每组运算结果单独形成一行数据，其行首和行尾都没有任何空格，每组运算结果与其后一组运算结果之间没有任何空行，第一组运算结果前面以及最后一组运算结果后面也都没有任何空行。 注：通常，显示屏为标准输出设备。&lt;/p&gt;
&lt;h3 id=&quot;输入范例&quot;&gt;&lt;a href=&quot;#输入范例&quot; class=&quot;headerlink&quot; title=&quot;输入范例&quot;&gt;&lt;/a&gt;输入范例&lt;/h3&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="OJ" scheme="https://asea.fun/tags/OJ/"/>
    
      <category term="DHU" scheme="https://asea.fun/tags/DHU/"/>
    
  </entry>
  
  <entry>
    <title>如何利用CDN加速你的博客</title>
    <link href="https://asea.fun/post/c17a20e4.html"/>
    <id>https://asea.fun/post/c17a20e4.html</id>
    <published>2021-08-08T14:56:19.000Z</published>
    <updated>2021-08-08T15:30:37.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在准备采用CDN动态加速之前，我的状态是：<strong>vercel托管，域名已经备案，但是访问速度不稳定，需要提高访问速度，且不想购买服务器</strong>。了解到七牛云的平台，于是开始着手操作。由于有些教程太老了，很多地方已经不正确，于是把自己的步骤记录下来。</p></blockquote><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>首先你需要有一个免费的部署平台，例如gitpages、vercel，部署之后你可以拿到平台分配给你的免费的域名，然后去七牛去和腾讯云注册账号。</p><hr><h2 id="申请ssl证书"><a href="#申请ssl证书" class="headerlink" title="申请ssl证书"></a>申请ssl证书</h2><p>腾讯云平台，搜索ssl，申请免费的ssl证书，免费证书不支持泛域名，所以二级域名和其子域名都需要各自申请（如果你有需求的话）。申请本身没有难度，不过采用DNS验证的时候有一个难点，你的域名解析可能会验证失败，你可以用<a href="https://myssl.com/dns_check.html#ssl_verify">这个网站</a>自主查询一下自己是否解析成功，注意这里子域名的TXT值要去查子域名，而不是二级域名。如果提示失败，看一下自己的解析是否正确，如果正确，请暂停掉所有的CNAME记录，再尝试。此时应该可以查询到，等待腾讯云颁发证书，下载，解压。</p><p>注意：申请完的TXT记录可以删除。</p><hr><h2 id="七牛云绑定"><a href="#七牛云绑定" class="headerlink" title="七牛云绑定"></a>七牛云绑定</h2><p>注册，登录，打开CDN，并添加域名。<br>各处的值分别是：<br>你的域名、HTTPS、大陆、动态加速、vercel给的域名、你的域名</p><p> <strong>注意两点</strong></p><ol><li>选择HTTPS后，需要上传自己的ssl证书，根据七牛云指引，上传自有证书，上传的时候，第一处备注随便写，第二处就是下载下来的证书里面的pem文件，记事本打开，复制粘贴。第二个密钥就是key文件，同样记事本打开，复制粘贴即可。</li><li>最后一个验证文件，例如你的域名是<code>xxx.com</code>，那么你需要确保<code>xxx.com/test.html</code>可以被访问到，这里的<code>test.html</code>可以是txt等，体积要小。放好之后，点击源站测试，自动识别，识别成功后即可创建。</li></ol><p>七牛云会给你CNAME记录值，最后去你的域名服务商添加一条解析即可，随后可见<code>已配置</code>，以及<code>成功</code>的字样则表示成功。</p><p>稍等几分钟就可以访问了，你会发现加载速度果然流畅不少。</p><hr><h2 id="流量说明"><a href="#流量说明" class="headerlink" title="流量说明"></a>流量说明</h2><p>新人赠送三个月100G，个人博客够用，流量购买也很便宜，个人认证也会送免费的额度，但好像不是支持https动态加速的，总之先用吧。随后再说。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在准备采用CDN动态加速之前，我的状态是：&lt;strong&gt;vercel托管，域名已经备案，但是访问速度不稳定，需要提高访问速度，且不想购买服务器&lt;/strong&gt;。了解到七牛云的平台，于是开始着手操作。由于有些教程太老了，很多地方已经不正确，于是把自己的步骤记录下来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;首先你需要有一个免费的部署平台，例如gitpages、vercel，部署之后你可以拿到平台分配给你的免费的域名，然后去七牛去和腾讯云注册账号。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;申请ssl证书&quot;&gt;&lt;a href=&quot;#申请ssl证书&quot; class=&quot;headerlink&quot; title=&quot;申请ssl证书&quot;&gt;&lt;/a&gt;申请ssl证书&lt;/h2&gt;&lt;p&gt;腾讯云平台，搜索ssl，申请免费的ssl证书，免费证书不支持泛域名，所以二级域名和其子域名都需要各自申请（如果你有需求的话）。申请本身没有难度，不过采用DNS验证的时候有一个难点，你的域名解析可能会验证失败，你可以用&lt;a href=&quot;https://myssl.com/dns_check.html#ssl_verify&quot;&gt;这个网站&lt;/a&gt;自主查询一下自己是否解析成功，注意这里子域名的TXT值要去查子域名，而不是二级域名。如果提示失败，看一下自己的解析是否正确，如果正确，请暂停掉所有的CNAME记录，再尝试。此时应该可以查询到，等待腾讯云颁发证书，下载，解压。&lt;/p&gt;
&lt;p&gt;注意：申请完的TXT记录可以删除。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;七牛云绑定&quot;&gt;&lt;a href=&quot;#七牛云绑定&quot; class=&quot;headerlink&quot; title=&quot;七牛云绑定&quot;&gt;&lt;/a&gt;七牛云绑定&lt;/h2&gt;&lt;p&gt;注册，登录，打开CDN，并添加域名。&lt;br&gt;各处的值分别是：&lt;br&gt;你的域名、HTTPS、大陆、动态加速、vercel给的域名、你的域名&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="CDN" scheme="https://asea.fun/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>一天的快乐</title>
    <link href="https://asea.fun/post/97862041.html"/>
    <id>https://asea.fun/post/97862041.html</id>
    <published>2021-08-06T14:51:27.000Z</published>
    <updated>2021-08-06T15:15:29.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一天会有多少快乐</p></blockquote><h2 id="早上起来去吃了早饭"><a href="#早上起来去吃了早饭" class="headerlink" title="早上起来去吃了早饭"></a>早上起来去吃了早饭</h2><p><img src="https://pic.imgdb.cn/item/610d50165132923bf8dfb49a.jpg" alt><br><img src="https://pic.imgdb.cn/item/610d50165132923bf8dfb4ad.jpg" alt><br><img src="https://pic.imgdb.cn/item/610d50165132923bf8dfb487.jpg" alt></p><hr><h2 id="回来后完成并且不断优化了挂件"><a href="#回来后完成并且不断优化了挂件" class="headerlink" title="回来后完成并且不断优化了挂件"></a>回来后完成并且不断优化了挂件</h2><p><img src="https://pic.imgdb.cn/item/610d4e805132923bf8dbc490.jpg" alt></p><hr><h2 id="躺下睡了个小觉"><a href="#躺下睡了个小觉" class="headerlink" title="躺下睡了个小觉"></a>躺下睡了个小觉</h2><hr><h2 id="拍云的时候找到了丢失已久的钥匙"><a href="#拍云的时候找到了丢失已久的钥匙" class="headerlink" title="拍云的时候找到了丢失已久的钥匙"></a>拍云的时候找到了丢失已久的钥匙</h2><p><img src="https://pic.imgdb.cn/item/610d4e085132923bf8daa73b.jpg" alt></p><hr><h2 id="给钥匙挂在了一个小钥匙串上（这样比较大，不容易丢吧）"><a href="#给钥匙挂在了一个小钥匙串上（这样比较大，不容易丢吧）" class="headerlink" title="给钥匙挂在了一个小钥匙串上（这样比较大，不容易丢吧）"></a>给钥匙挂在了一个小钥匙串上（这样比较大，不容易丢吧）</h2><p><img src="https://pic.imgdb.cn/item/610d4e465132923bf8db3ef7.jpg" alt></p><hr><h2 id="去试🔑的时候看到猫猫，于是上楼拿了充气宝和猫粮，一边给车胎打气，一边喂猫猫，三只猫，太可爱了"><a href="#去试🔑的时候看到猫猫，于是上楼拿了充气宝和猫粮，一边给车胎打气，一边喂猫猫，三只猫，太可爱了" class="headerlink" title="去试🔑的时候看到猫猫，于是上楼拿了充气宝和猫粮，一边给车胎打气，一边喂猫猫，三只猫，太可爱了"></a>去试🔑的时候看到猫猫，于是上楼拿了充气宝和猫粮，一边给车胎打气，一边喂猫猫，三只猫，太可爱了</h2><p><img src="https://pic.imgdb.cn/item/610d4e075132923bf8daa439.jpg" alt></p><hr><h2 id="洗了个澡吃完饭看男团比赛"><a href="#洗了个澡吃完饭看男团比赛" class="headerlink" title="洗了个澡吃完饭看男团比赛"></a>洗了个澡吃完饭看男团比赛</h2><hr><h2 id="心动的加更，甜！"><a href="#心动的加更，甜！" class="headerlink" title="心动的加更，甜！"></a>心动的加更，甜！</h2><p><img src="https://pic.imgdb.cn/item/610d50525132923bf8e051c2.jpg" alt></p><hr><h2 id="骑了会车，最后干脆下来推车走了一圈，凉风真不错"><a href="#骑了会车，最后干脆下来推车走了一圈，凉风真不错" class="headerlink" title="骑了会车，最后干脆下来推车走了一圈，凉风真不错"></a>骑了会车，最后干脆下来推车走了一圈，凉风真不错</h2><p><img src="https://pic.imgdb.cn/item/610d4e085132923bf8daa716.jpg" alt></p><hr><h2 id="支付宝红包！买东西的时候突然想起来啦哈哈哈哈，居然真的有用！"><a href="#支付宝红包！买东西的时候突然想起来啦哈哈哈哈，居然真的有用！" class="headerlink" title="支付宝红包！买东西的时候突然想起来啦哈哈哈哈，居然真的有用！"></a>支付宝红包！买东西的时候突然想起来啦哈哈哈哈，居然真的有用！</h2><p><img src="https://pic.imgdb.cn/item/610d507f5132923bf8e0ce19.jpg" alt></p><hr><h2 id="看了无间道！"><a href="#看了无间道！" class="headerlink" title="看了无间道！"></a>看了无间道！</h2><p><img src="https://pic.imgdb.cn/item/610d50a15132923bf8e1246c.jpg" alt></p><hr><h2 id="和老同学打了个电话"><a href="#和老同学打了个电话" class="headerlink" title="和老同学打了个电话"></a>和老同学打了个电话</h2><h2 id="最后就是还买了几件衣服！"><a href="#最后就是还买了几件衣服！" class="headerlink" title="最后就是还买了几件衣服！"></a>最后就是还买了几件衣服！</h2><hr><blockquote><p>快乐来自内心，而烦扰源于他人，每一天都快乐</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一天会有多少快乐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;早上起来去吃了早饭&quot;&gt;&lt;a href=&quot;#早上起来去吃了早饭&quot; class=&quot;headerlink&quot; title=&quot;早上起来去吃了早饭&quot;&gt;&lt;/a&gt;早上起来去吃了早饭&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/610d50165132923bf8dfb49a.jpg&quot; alt&gt;&lt;br&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/610d50165132923bf8dfb4ad.jpg&quot; alt&gt;&lt;br&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/610d50165132923bf8dfb487.jpg&quot; alt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;回来后完成并且不断优化了挂件&quot;&gt;&lt;a href=&quot;#回来后完成并且不断优化了挂件&quot; class=&quot;headerlink&quot; title=&quot;回来后完成并且不断优化了挂件&quot;&gt;&lt;/a&gt;回来后完成并且不断优化了挂件&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/610d4e805132923bf8dbc490.jpg&quot; alt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;躺下睡了个小觉&quot;&gt;&lt;a href=&quot;#躺下睡了个小觉&quot; class=&quot;headerlink&quot; title=&quot;躺下睡了个小觉&quot;&gt;&lt;/a&gt;躺下睡了个小觉&lt;/h2&gt;&lt;hr&gt;
&lt;h2 id=&quot;拍云的时候找到了丢失已久的钥匙&quot;&gt;&lt;a href=&quot;#拍云的时候找到了丢失已久的钥匙&quot; class=&quot;headerlink&quot; title=&quot;拍云的时候找到了丢失已久的钥匙&quot;&gt;&lt;/a&gt;拍云的时候找到了丢失已久的钥匙&lt;/h2&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>留言本</title>
    <link href="https://asea.fun/post/5d8c0cb2.html"/>
    <id>https://asea.fun/post/5d8c0cb2.html</id>
    <published>2021-08-03T13:18:45.000Z</published>
    <updated>2021-08-03T13:22:08.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0732eaedc4eb733fa9418f3f5c2830fbcb4b0dd981ec7c3e90a187ee22bebce9">574b1481c95b9d13566c06ed649275dfa0dcd4a557eb09a03d605f102811239c26ebe9ec0fc5a0e7c03356a08fd08ac840ae03afa68566b4f7f64743ed3f206dc80a4f8f39e903e885a3cc46708651e07bd723ba3cda18322470bd46bd6e304cb4ed4ae5f98fc42242aa72e0bbc943165e348871d0dbe79c56793bf3498e58fa0dd0f1ea62a1a369b519090d74b622ab10e40769132e7552b8a5c260739bd21f310a0b0d20c978c4ddb4c316739ed44e09350f1f4f251d8c70f55727e8b1bd7736471bc92fd1e97fe742998791a90d07c30df8315fe91d8f4bb7c614b9a0715186012945dc46b32980e5b2521869e3922274842e5641c418b3fd613fca64ddb7e62ee60d3837331530fb584a9872ede09da80582924099246bf7587127bf8136dcb44ad9d4616f07fae1996cea4e88b458b533350ed949136bbceac585703bd6b17c0cb00c0ec518b9ec0f976e2e736b8cb603452c119f569a6c596416b3a431ea764ccd6250174e16bba56dba35f334aa91cdd537883d25e4969e5b08a80bf665aed3a63c72e0b064dfc4aa15842543cb2abbed29c9f7c51e59f7367b5ce4ce85c43a2c939f681473e81f36b3ccd7b8d4ff39aaf6052a639ea2a63f5b0c9a93ea9fcc67378bbb710a2fc3e6cd8228a1c4acf529dee469bd33dfcd2757fc181b8d53280b89656bc979b6c2cc1542d2423e781561f8bc6a83b8c74263e2768c223dbe46ea1bf76f4091a21f2cf82263f36d905cb0b9d764fd6a71f88f26440f8457cbb64e8c4770047e18f18ae11d1258bb1f6be75de472085c7b552b9e5f6acdf871262e6aa81613effcc359879ba56de9d8dd62bae162cf602eab9e6c7053815deef9b47dfc03331ee2faa8032e0c91b5f83e3d0d7a97191402d112ad92b56faf867574f90f478eca9df0c55ac677209fa3f449daa79bffbfd86a80ae8ae91e5d57641e7e8cc24a3ca420685e9b7b896a94b7a7ad7b4e3f3824326f36b40ee9e08204c1592c357655cc1c2ce11e827bcf09255ee9e7e01cd4e288262e53eb197364b8573abd3cc88390f9fc4a3a69661fbaa4b29cf3d55f42055e81f22da2470cfdc9df53b0ec78e786050d7338e173be0f07fee3d31c53fa8f99b32dd60ba7ce830f453172b88f21ade33a3b36239cf68a6ab0627f67ae6ccc4c332cd56a56a862b89ea83845ef9952922b6bfe7dd5aa2bc41da59e59e42e9dbc1722d05f6de145049c17983f03c7aade2d45996732adb57eba56422987c2ee041e821ea0e6791e84d64b66fd85deb779ac324e9227946c57b0f45a8c5782533459f2551c84cfeed045bcc37a3139b6e83c7328f48d223b4734ef216d96bcbfd4bb826989cb97037679096ecad230ad8efeabc0469a6c04d34c58ef0fb5d55920bf0f02cd1588bc3a611c61d426dcf4189d8be2af90dca3f433fac365ae3f487b7a47184c400c56c00f3c86180742e0b2b5ad5c8dadaec58da689e00061a5d5e724c5c2bfb0cd2ce51be329d860cc312b5100347863fcb7e3208a13668243cb98205fa750e2131bc3350d3678309eeb5f74c2cfb0b3ee46d732aca82e8584aa5e933d7abde5e097c1741d92ecc4b3a120ce6c7ca850177ac5910af967c00ae31991d7752fd6a3b54fbaa5853676f3d57c08630cac1c1772b7aecd0071410c8b6ccc807891b7a7d675788ed9e7042c1417d5dc96148d90bbd08f782bf6cb2a8574d83918b347e3770ccd210250b1ed9f0d91974fcbdb0744c008f9dab6138a6b0e5ac1a14487cc3945caaaa4fa1a0109e0eb658510b609e8da0b9dbe713f091bc3899101a188a3b9fe3a67b6dfc5935436c06bec6c4b751039263c94255537164899a00b5ddf8e4edf1a44e6b15dc7fa3f75b24eb4998047e77e1e516caac94b64834e23aa9bb4c84ceab013fa9a6e70a6bb5256477efe2864a5332c298da42e7412237bf20278ecc05f139c9efa44eb05b5a32b9c7ee8a7f9ea71047079d733acbb4ad7bcc25ce7725e492b9e7cf7994e6db758f38929469d570695f585e02be60b3c95424ee5060e5c6cf55ab117bfb11b680c49c13e8866bfaaf823ff46ab34c99250ded50bdb1bd32c4db0d14610a39d46424f0fb9db8dc176e80725577632bc48c23d9a71584defb4bf4c447486d211df814e81794b5f373f3431de969f1b16a7db441ca08775f8c7c7de649e64b098294b1b660d52cccff50003bd485f757701eef9b4fe2c932e1c99342194afc123f0bdc2484a2d39108871b81c6cb2803d4d6928364c62f2aeefa15dafda5b6194a4bfa5674049f4acaa55ead9f3b71f422584baf6febdda55247693b29856d40a3bb2ac809cf6d4a5e8b512840189fa1e4599700454e5e2ce4069a1f2206d71ccfab6ac878057284a6836616689a32cc03d4cef079cb30ae029c663cfcdd1945a6c80440ae87b03d45f154ed5bc17b2aef9c23e99f1ef8b7527ef8f5355f162349f9c1b3d3df5e24a5e12e2c5555defdc79c95855c80b07a2da92d0c9447f3b535d91cf5c750d5f7c9cceee932f4800e196ca883a75611ee4f7e7ade350aa9032e20b64362934709fd5617d0ed4fa1710bc4614e15186e7688648d19d76725fc3a07c74521b7f9bc219164b01fddab9828656a935acc7830752fd94d7c4311a9abc5da2e351fe18d5b905c88db88f6d03b2b8eb1bc7cdc6009e0d3604975a148e2735ebca</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">已加密，请在这里密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;抱歉, 这个密码看着不太对, 请再试试.&quot; data-whm=&quot;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&quot;&gt;
  &lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;0732eaedc4eb733fa9418f3f5c2830fbcb4b0dd981ec7c3e90a187ee22bebce9&quot;&gt;574b1481c95b9d13566c06ed649275dfa0dcd4a557eb09a03d605f102811239c26ebe9ec0fc5a0e7c03356a08fd08ac840ae03afa68566b4f7f64743ed3f206dc80a4f8f39e903e885a3cc46708651e07bd723ba3cda18322470bd46bd6e304cb4ed4ae5f98fc42242aa72e0bbc943165e348871d0dbe79c56793bf3498e58fa0dd0f1ea62a1a369b519090d74b622ab10e40769132e7552b8a5c260739bd21f310a0b0d20c978c4ddb4c316739ed44e09350f1f4f251d8c70f55727e8b1bd7736471bc92fd1e97fe742998791a90d07c30df8315fe91d8f4bb7c614b9a0715186012945dc46b32980e5b2521869e3922274842e5641c418b3fd613fca64ddb7e62ee60d3837331530fb584a9872ede09da80582924099246bf7587127bf8136dcb44ad9d4616f07fae1996cea4e88b458b533350ed949136bbceac585703bd6b17c0cb00c0ec518b9ec0f976e2e736b8cb603452c119f569a6c596416b3a431ea764ccd6250174e16bba56dba35f334aa91cdd537883d25e4969e5b08a80bf665aed3a63c72e0b064dfc4aa15842543cb2abbed29c9f7c51e59f7367b5ce4ce85c43a2c939f681473e81f36b3ccd7b8d4ff39aaf6052a639ea2a63f5b0c9a93ea9fcc67378bbb710a2fc3e6cd8228a1c4acf529dee469bd33dfcd2757fc181b8d53280b89656bc979b6c2cc1542d2423e781561f8bc6a83b8c74263e2768c223dbe46ea1bf76f4091a21f2cf82263f36d905cb0b9d764fd6a71f88f26440f8457cbb64e8c4770047e18f18ae11d1258bb1f6be75de472085c7b552b9e5f6acdf871262e6aa81613effcc359879ba56de9d8dd62bae162cf602eab9e6c7053815deef9b47dfc03331ee2faa8032e0c91b5f83e3d0d7a97191402d112ad92b56faf867574f90f478eca9df0c55ac677209fa3f449daa79bffbfd86a80ae8ae91e5d57641e7e8cc24a3ca420685e9b7b896a94b7a7ad7b4e3f3824326f36b40ee9e08204c1592c357655cc1c2ce11e827bcf09255ee9e7e01cd4e288262e53eb197364b8573abd3cc88390f9fc4a3a69661fbaa4b29cf3d55f42055e81f22da2470cfdc9df53b0ec78e786050d7338e173be0f07fee3d31c53fa8f99b32dd60ba7ce830f453172b88f21ade33a3b36239cf68a6ab0627f67ae6ccc4c332cd56a56a862b89ea83845ef9952922b6bfe7dd5aa2bc41da59e59e42e9dbc1722d05f6de145049c17983f03c7aade2d45996732adb57eba56422987c2ee041e821ea0e6791e84d64b66fd85deb779ac324e9227946c57b0f45a8c5782533459f2551c84cfeed045bcc37a3139b6e83c7328f48d223b4734ef216d96bcbfd4bb826989cb97037679096ecad230ad8efeabc0469a6c04d34c58ef0fb5d55920bf0f02cd1588bc3a611c61d426dcf4189d8be2af90dca3f433fac365ae3f487b7a47184c400c56c00f3c86180742e0b2b5ad5c8dadaec58da689e00061a5d5e724c5c2bfb0cd2ce51be329d860cc312b5100347863fcb7e3208a13668243cb98205fa750e2131bc3350d3678309eeb5f74c2cfb0b3ee46d732aca82e8584aa5e933d7abde5e097c1741d92ecc4b3a120ce6c7ca850177ac5910af967c00ae31991d7752fd6a3b54fbaa5853676f3d57c08630cac1c1772b7aecd0071410c8b6ccc807891b7a7d675788ed9e7042c1417d5dc96148d90bbd08f782bf6cb2a8574d83918b347e3770ccd210250b1ed9f0d91974fcbdb0744c008f9dab6138a6b0e5ac1a14487cc3945caaaa4fa1a0109e0eb658510b609e8da0b9dbe713f091bc3899101a188a3b9fe3a67b6dfc5935436c06bec6c4b751039263c94255537164899a00b5ddf8e4edf1a44e6b15dc7fa3f75b24eb4998047e77e1e516caac94b64834e23aa9bb4c84ceab013fa9a6e70a6bb5256477efe2864a5332c298da42e7412237bf20278ecc05f139c9efa44eb05b5a32b9c7ee8a7f9ea71047079d733acbb4ad7bcc25ce7725e492b9e7cf7994e6db758f38929469d570695f585e02be60b3c95424ee5060e5c6cf55ab117bfb11b680c49c13e8866bfaaf823ff46ab34c99250ded50bdb1bd32c4db0d14610a39d46424f0fb9db8dc176e80725577632bc48c23d9a71584defb4bf4c447486d211df814e81794b5f373f3431de969f1b16a7db441ca08775f8c7c7de649e64b098294b1b660d52cccff50003bd485f757701eef9b4fe2c932e1c99342194afc123f0bdc2484a2d39108871b81c6cb2803d4d6928364c62f2aeefa15dafda5b6194a4bfa5674049f4acaa55ead9f3b71f422584baf6febdda55247693b29856d40a3bb2ac809cf6d4a5e8b512840189fa1e4599700454e5e2ce4069a1f2206d71ccfab6ac878057284a6836616689a32cc03d4cef079cb30ae029c663cfcdd1945a6c80440ae87b03d45f154ed5bc17b2aef9c23e99f1ef8b7527ef8f5355f162349f9c1b3d3df5e24a5e12e2c5555defdc79c95855c80b07a2da92d0c9447f3b535d91cf5c750d5f7c9cceee932f4800e196ca883a75611ee4f7e7ade350aa9032e20b64362934709fd5617d0ed4fa1710bc4614e15186e7688648d19d76725fc3a07c74521b7f9bc219164b01fddab9828656a935acc7830752fd94d7c4311a9abc5da2e351fe18d5b905c88db88f6d03b2b8eb1bc7cdc6009e0d3604975a148e2735ebca&lt;/script&gt;
  &lt;div class=&quot;hbe hbe-content&quot;&gt;
    &lt;div class=&quot;hbe hbe-input hbe-input-default&quot;&gt;
      &lt;input class=&quot;hbe hbe-input-field hbe-input-field-default&quot; type=&quot;password&quot; id=&quot;hbePass&quot;&gt;
      &lt;label class=&quot;hbe hbe-input-label hbe-input-label-default&quot; for=&quot;hbePass&quot;&gt;
        &lt;span class=&quot;hbe hbe-input-label-content hbe-input-label-content-default&quot;&gt;已加密，请在这里密码.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&quot;/lib/hbe.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;/css/hbe.style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>c++学习笔记</title>
    <link href="https://asea.fun/post/258a2097.html"/>
    <id>https://asea.fun/post/258a2097.html</id>
    <published>2021-07-25T15:40:14.000Z</published>
    <updated>2021-09-12T03:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="四大件"><a href="#四大件" class="headerlink" title="四大件"></a>四大件</h2><ol><li>数据结构和算法</li><li>计算机网络</li><li>操作系统</li><li>设计模式组成原理</li></ol><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ol><li><p>常量</p><p>​    宏常量 #define</p><p>​    const 修饰变量</p><p>​    均不可修改</p></li><li><p>字符串</p><p>char str[] = “ldksjfa”，会默认多一个’\0’</p><p>string str = “dlkjafd” 需要头文件<string></string></p></li><li><p>bool char int float double void wchar_t</p></li><li><p>typedef为已有类命新名字</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> feet;</span><br><span class="line">feet a = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></li></ol><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ol><li>三目运算符可以返回变量也可以返回变量值</li></ol><h2 id="控制结构"><a href="#控制结构" class="headerlink" title="控制结构"></a>控制结构</h2><ol><li>if - else if - else</li><li>switch - case break- case break-default break <strong>只能是int 或者 char，必须break</strong></li><li>循环结构 while（）{},do{}while()，for(int i =0;i&lt;10;i++)</li><li>goto FLAG; FLAG:</li><li>continue</li></ol><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><ol><li><p>定义数组</p><ol><li>int a[10];</li><li>int a[10] = {0,1,2,3,4,5,6,7,8,9}</li><li>int a[] = {0,1,2,3}</li></ol></li><li><p>特点</p><ol><li>数据类型相同</li><li>内存空间连续</li></ol></li><li><p>赋值</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">//初始化表长度小于要被初始化的数组的元素数目，剩余元素均为0；</span></span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p><strong>注意</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> a[n]; <span class="comment">//这是错误的写法，尽管有些编译器可能不会报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b[<span class="number">0</span>]; <span class="comment">//长度为0的数组没有任何意义</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;c[<span class="number">11</span>]; <span class="comment">//越界但可以输出</span></span><br></pre></td></tr></table></figure></li><li><p>排序查找</p><p>选择排序</p><p>冒泡排序</p></li></ol><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><ol><li><p>初始化赋值</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;, &#123;<span class="number">2</span>,<span class="number">3</span>&#125;, &#123;<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> a[][<span class="number">10</span>] = &#123;&#123;&#125;,&#123;&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><strong>注意</strong><ol><li>行数</li><li>元素数目（用好sizeof())</li><li>理解好变量名与地址的关系</li></ol></li></ol><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ol><li><p>初始化</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[] = &#123;<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> ch[] = &#123;<span class="string">&quot;hello&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> ch[] = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> ch[] = <span class="string">&quot;hello&quot;</span>; <span class="comment">//这是错误的</span></span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">10</span>] = <span class="string">&quot;hello&quot;</span>; <span class="comment">//后面的字符都是&#x27;\0&#x27;,&#x27;\0&#x27;是不可显示的</span></span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">6</span>] = &#123;<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>&#125; <span class="comment">//是字符串</span></span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">5</span>] = &#123;<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>&#125; <span class="comment">//不是字符串</span></span><br></pre></td></tr></table></figure></li><li><p>空字符串</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[] = <span class="string">&quot;&quot;</span>; <span class="comment">//占用一个字节存储&#x27;\0&#x27;</span></span><br><span class="line"><span class="comment">//&#x27;a&#x27;与&quot;a&quot;，前者是简单的变量，后者是数组</span></span><br></pre></td></tr></table></figure></li><li><p>遍历</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>（<span class="keyword">int</span> i = <span class="number">0</span>; str[i]!=<span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;str[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>输入输出</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">6</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;str; <span class="comment">//空格字符会结束输入</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;str; <span class="comment">//遇到第一个&#x27;\0&#x27;结束。</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>.get(str, length, endchar); <span class="comment">//结束字符默认是&#x27;\n&#x27;,结束字符会留在输入流中</span></span><br><span class="line"><span class="built_in">cin</span>.getline(stxr, length, endchar); <span class="comment">//结束字符默认是&#x27;\n&#x27;，结束字符不会留在输入流中,读入的字符是length减一，因为&#x27;\0&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>string</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="built_in">strlen</span>(str);<span class="comment">//可见字符串长度，不包括&#x27;\0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">strcpy</span>(str1, str2); <span class="comment">//不能用str1 = str2赋值，str1 要 大于 str2，//字符串排序</span></span><br><span class="line"><span class="built_in">strcat</span>(str1, str2); <span class="comment">//拼接</span></span><br><span class="line"><span class="built_in">strcmp</span>(str1, str2); <span class="comment">//比较大小，挨个比较ascii码 返回值是-1，0，1</span></span><br><span class="line"><span class="comment">//以上三个都有n族，即strncpy,strncat,strncmp，即操作前n个字符</span></span><br><span class="line"></span><br><span class="line">strlwr(str); <span class="comment">//转换为小写</span></span><br><span class="line">strupr(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//应用</span></span><br><span class="line">len = <span class="built_in">strlen</span>(str1);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123; <span class="comment">//不推荐</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str1[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>声明可以写多次，定义只能写一次</li><li>scanf返回值是读入的个数，<code>ctrl Z</code>返回-1</li><li>cin返回值是<code>true</code>或<code>false</code></li></ol><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ol><li><p>定义的时候如果不声明返回值类型，默认是<code>int</code></p></li><li><p>如果return类型和定义类型不同，则强转（以定义为准）</p></li><li><p>函数不可以嵌套定义，但可以嵌套调用。</p></li></ol><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><ol><li>传入的类型不对时会发强转</li></ol><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><ol><li>复合语句内是局部变量</li><li>复合语句是指大括号内，不一定是循环或者函数，大括号可以随时出现，组成复合语句。</li></ol><h3 id="变量存储类型"><a href="#变量存储类型" class="headerlink" title="变量存储类型"></a>变量存储类型</h3><blockquote><p>每个变量都有两种属性，分别是<strong>数据类型</strong>和<strong>存储类型</strong>，因此标准的变量定义应该是<code>标准类型 数据类型 变量名</code></p></blockquote><ol><li>auto（自动变量）函数内部或符合语句{}内。</li><li>register（寄存器变量）</li><li>extern（外部变量）指不在此块或此块之前声明过的变量，也可以引用其它文件的变量，另外引用其它文件的函数前面的extern可以省略</li><li>static（静态（外部）变量）该变量不能由extern引用</li></ol><h3 id="数组作为参数"><a href="#数组作为参数" class="headerlink" title="数组作为参数"></a>数组作为参数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myFun</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myFun2</span><span class="params">(<span class="keyword">int</span> arr[][<span class="number">3</span>], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr1[<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> arr2[][<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    myFun(arr1, <span class="number">3</span>); <span class="comment">//注意，函数不会重新创建新的数组</span></span><br><span class="line">    myFun2(arr2, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="带默认值的函数"><a href="#带默认值的函数" class="headerlink" title="带默认值的函数"></a>带默认值的函数</h3><ol><li>缺省形参值必须从右向左连续定义（自右向左入栈）</li><li>如果省掉了某个实参，直到最右边的实参都要省</li><li>缺省值应该在函数原型就给出</li><li>同一作用域，不可以重复定义缺省值</li><li>函数原型给出缺省值时，形参名可以省略</li><li>同一作用域内的函数原型和函数定义不能同时定义缺省值</li></ol><h3 id="内联函数"><a href="#内联函数" class="headerlink" title="内联函数"></a>内联函数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">fun</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fun(); <span class="comment">//本质是编译的时候将此处替换了，即变成了顺序执行，空间换取时间</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>仅在原型出加<code>inline</code>无效，内联函数的定义必须出现在调用之前，否则就是普通函数</strong></p><p><strong>如果函数体积较大或者函数内有循环比较耗时，则不宜用内联</strong></p><h3 id="重载函数"><a href="#重载函数" class="headerlink" title="重载函数"></a>重载函数</h3><ol><li>c语言是不支持的</li><li>仅仅是返回值不同是不行的，编译不通过</li><li>编译器决定调用哪个函数的过程称之为<strong>绑定</strong></li><li>绑定的优先级：精确-&gt;低转高-&gt;高转低</li><li>带默认值的函数等可能引起二议性</li></ol><h3 id="函数模板"><a href="#函数模板" class="headerlink" title="函数模板"></a>函数模板</h3><ol><li>泛型化（类型的参数化）</li><li>如果模板中有普通类型，如int，则必须显示实例化</li></ol><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;  <span class="comment">//也可以用class</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Swap</span><span class="params">(T&amp; a, T&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T tmp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = tmp;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">    Swap(a, b);<span class="comment">//自动推到调用</span></span><br><span class="line">    <span class="comment">//Swap&lt;int&gt;(a, b);//显示指定调用</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">float</span> c = <span class="number">12.3</span>;</span><br><span class="line">    <span class="keyword">float</span> d = <span class="number">23.4</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//Swap(c, d); //自动推到调用</span></span><br><span class="line">    Swap&lt;<span class="keyword">float</span>&gt;(c, d); <span class="comment">//显示指定调用</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;d = &quot;</span> &lt;&lt; d &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/lms1008611/article/details/81985815">参考资料《C++中的函数模板》</a></p><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> * p = &amp;a;</span><br><span class="line">cou&lt;&lt;*p; <span class="comment">//解引用，找到内存中的数据</span></span><br></pre></td></tr></table></figure><p>任何类型的指针都占四个字节</p><h3 id="空指针和野指针"><a href="#空指针和野指针" class="headerlink" title="空指针和野指针"></a>空指针和野指针</h3><blockquote><p>当指针定义为0、NULL、或者不赋值，此时不能解引用，否则崩溃</p></blockquote><ol><li>空指针：指向内存编号为0的指针，一般用来初始换（0-255）不可访问，系统占用。<code>int * p = NULL</code>或<code>int * p = 0</code></li><li>野指针：指向非法空间（是一种错误），无法访问。</li></ol><h3 id="const修饰指针"><a href="#const修饰指针" class="headerlink" title="const修饰指针"></a>const修饰指针</h3><blockquote><p>指针就是一种特殊的变量，专门用来存放地址。地址可以看作一个特殊的数据类型，地址不可以复制给int变量，但可以赋值给指针变量，int的地址，只能复制给int *。地址可以解引用，所以&amp;a和p的用法是一样的。</p></blockquote><h4 id="常量指针"><a href="#常量指针" class="headerlink" title="常量指针"></a>常量指针</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * p = &amp;a;</span><br><span class="line">cou&lt;&lt;*p&lt;&lt;*&amp;a&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p %p&quot;</span>,&amp;a, p); <span class="comment">//地址的占位符应该用%p</span></span><br><span class="line">a = <span class="number">20</span>; <span class="comment">//这样是可以的</span></span><br><span class="line">*p = <span class="number">20</span>; <span class="comment">//不可以！！指针的指向可以修改，但不可以通过解引用来修改</span></span><br></pre></td></tr></table></figure><h4 id="指针常量"><a href="#指针常量" class="headerlink" title="指针常量"></a>指针常量</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> * <span class="keyword">const</span> p = &amp;a; <span class="comment">//指向不可以改，解引用可以改。</span></span><br></pre></td></tr></table></figure><h4 id="常量指针常量"><a href="#常量指针常量" class="headerlink" title="常量指针常量"></a>常量指针常量</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * <span class="keyword">const</span> p = &amp;a; <span class="comment">//都不可以改</span></span><br></pre></td></tr></table></figure><h3 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h3><blockquote><p>此处，若那指针p指向数组首地址，那么此时的<strong>数组名</strong>和<strong>指针名</strong>的本质其实都是一个<strong>指针</strong>，访问数组的元素可以通过<u>方括号</u>来访问，也可以用<u>*</u>来访问。需要注意的是p和a的区别，p是变量，但a是常量指针，a不可以进行a++等运算。另外，指针相加无意义，相减有意义。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> * p = arr;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用指针遍历数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    p++; <span class="comment">//向后走四个字节，即到下个元素，p+1指向下一个元素，p-1指向上一个元素</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过指针引用数组元素</span></span><br><span class="line"><span class="comment">//下标法 和  指针法</span></span><br><span class="line">p[i];</span><br><span class="line">a[i];</span><br><span class="line">*(p+i);</span><br><span class="line">*(a+i);</span><br></pre></td></tr></table></figure><blockquote><p>利用指针进行排序，可以避免复杂的例如结构体、字符串的赋值，效率更高</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> arr[<span class="number">8</span>] = &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">3</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> *p[<span class="number">8</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i ++)&#123;</span><br><span class="line">      p[i] = &amp;arr[i];</span><br><span class="line">      </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i ++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; <span class="number">8</span>; j++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(*p[i] &gt; *p[j])&#123;</span><br><span class="line">              <span class="keyword">int</span> *temp = p[i]; </span><br><span class="line">              p[i] = p[j];</span><br><span class="line">              p[j] = temp; <span class="comment">//只交换指针的指向，而不更改</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)&#123;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;*p[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="指针与字符串"><a href="#指针与字符串" class="headerlink" title="指针与字符串"></a>指针与字符串</h3><blockquote><p>指向字符串常量和指向字符数组的指针有什么区别呢？</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> *<span class="built_in">string</span>;</span><br><span class="line"><span class="built_in">string</span> = <span class="string">&quot;abcd&quot;</span>; <span class="comment">//string是常量区（数据段）里&quot;abcd&quot;的首地址，不可以修改*string的值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *string2, ss[] = <span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">string2 = ss; <span class="comment">//string2是栈里&quot;abcd&quot;的首地址，可以修改*string2的值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">string</span>; <span class="comment">//即从string开始，知道&#x27;\0&#x27;结束，所以类推cout&lt;&lt;string+1即输出&quot;bcd&quot;</span></span><br></pre></td></tr></table></figure><p>要搞清楚<code>string</code>、<code>string2</code>、<code>ss</code>三者的区别：</p><ol><li>*string不可以修改，两外两个可以</li><li>ss不可以修改，两外两个可以</li><li>三者都属于指针，第一个指向常量即<strong>常量指针</strong>，第二个正常指针，第三个本身是常量即<strong>指针常量</strong></li></ol><blockquote><p>利用指针编程的实例（复制字符串）</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//把字符数组a赋值给b</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[] = <span class="string">&quot;abcd&quot;</span>,b[<span class="number">10</span>],*p1,*p2;</span><br><span class="line">    p1 = a;</span><br><span class="line">    p2 = b;</span><br><span class="line">    <span class="keyword">while</span>(*p1)</span><br><span class="line">        *p2++ = *p1++;</span><br><span class="line">    *p2 = <span class="string">&#x27;\0&#x27;</span>; <span class="comment">//不要忘了最后加上&#x27;\0&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针与函数（地址传递）"><a href="#指针与函数（地址传递）" class="headerlink" title="指针与函数（地址传递）"></a>指针与函数（地址传递）</h3><blockquote><p>主要注意传递指针以及返回指针</p></blockquote><p><strong>值传递是文件复制，地址传递是建立快捷方式</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> * p1, <span class="keyword">int</span> * p2)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span>(*p1 + *p2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; add(&amp;a, &amp;b);</span><br></pre></td></tr></table></figure><h3 id="指向函数的指针"><a href="#指向函数的指针" class="headerlink" title="指向函数的指针"></a>指向函数的指针</h3><blockquote><p>用的不多</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">int</span> (*p)(<span class="keyword">int</span> <span class="keyword">int</span>);</span><br><span class="line">p = f;</span><br><span class="line"><span class="comment">//之后p和f用法相同，p可以用来传参</span></span><br></pre></td></tr></table></figure><h3 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h3><blockquote><p>与指针类似，但更安全、简单，主要用于函数的参数，不需要解引用，也不需要传参的时候传递地址</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> &amp;b = a; <span class="comment">//a,b地址一样，且定义的时候必须初始化，不能先定义再赋值，且以后b不能再修改</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> &amp; r)</span></span>&#123;</span><br><span class="line">    r = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">3</span>;</span><br><span class="line">    f(x);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;x; <span class="comment">//5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 返回值为引用类型的引用</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> &amp; <span class="title">max</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;a[t]) t = i;</span><br><span class="line">        <span class="keyword">return</span> a[t]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> &amp; sum(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)&#123;</span><br><span class="line">    <span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        s += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> &amp; m1 = max(a, <span class="number">10</span>); <span class="comment">//此处m1即为a[4]</span></span><br><span class="line">    <span class="keyword">int</span> &amp; m2 = sum(a, <span class="number">10</span>); <span class="comment">//此处m2即为s，但是s为局部变量，s释放之后，m2是随机值。</span></span><br><span class="line">    </span><br><span class="line">    max(a, <span class="number">10</span>)++; <span class="comment">//返回值是引用的话可以对返回值直接进行运算操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>常引用：不能通过常引用来修改变量的值，所以常引用可以用来引用常量，表达式等，通常用来作为只读形参。传引用更快，但又不希望被改动，所以更安全</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> &amp; b = a; <span class="comment">//a，b地址相同，唯一区别是只能通过a来修改该地址的值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp; x, <span class="keyword">int</span> &amp; y)</span></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maing</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    f(<span class="number">100</span>, a); <span class="comment">// 第一个参数可以传常量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动态内存"><a href="#动态内存" class="headerlink" title="动态内存"></a>动态内存</h3><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><blockquote><p>先记录一个常见的错误</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> a[n]; <span class="comment">//不合法，应该使用动态数组 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>动态数组</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *q;</span><br><span class="line">    q = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">10</span>]; <span class="comment">//new得到的是申请到的空间的地址，当系统用完时可能会失败，当失败时会返回空指针</span></span><br><span class="line">    <span class="keyword">if</span>(!q)&#123; <span class="comment">//检查new的结果</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;failed&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">strcpy</span>(q, <span class="string">&quot;abcde&quot;</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;q&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">delete</span> []q;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a><strong>补充</strong></h4><blockquote><p>关于内存分配的一些问题</p></blockquote><p><img src="https://pic.imgdb.cn/item/6112334a5132923bf840aea3.jpg" alt></p><p>对于三个区域，<strong>数据段、栈、堆</strong>，全局变量存储在数据段，局部栈，动态分配堆。对于一些很大的例如<strong>大数组</strong>，不能直接在堆里创建，否则会崩溃，需要在堆里<code>new</code>，且用完之后一定要<code>delete</code>否则会不断累积，造成内存泄漏，但要注意<code>delete</code>之后不允许再操作此处内存；也可以放在数据段里，即定义全局变量。</p><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h3 id="定义与使用"><a href="#定义与使用" class="headerlink" title="定义与使用"></a>定义与使用</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;s3 <span class="comment">//这里可以在定义的时候直接创建一个实例，不建议用</span></span><br><span class="line"><span class="comment">//创建后赋值</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">student1</span>;</span> <span class="comment">//struct可以省略</span></span><br><span class="line">student1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">student1.age = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//创建时赋值</span></span><br><span class="line">Student student1 = &#123;</span><br><span class="line">    <span class="string">&quot;张三&quot;</span>,<span class="number">10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">arr</span>[3]=</span></span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="string">&quot;张三&quot;</span>, <span class="number">10</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;李四&quot;</span>, <span class="number">20</span>&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">student</span> =</span> &#123;<span class="string">&quot;张三&quot;</span>, <span class="number">10</span>&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Student * p = student;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p-&gt;name; <span class="comment">//相当于(*p).name</span></span><br></pre></td></tr></table></figure><h3 id="结构体嵌套"><a href="#结构体嵌套" class="headerlink" title="结构体嵌套"></a>结构体嵌套</h3><p>要在之前声明</p><h3 id="结构体传参"><a href="#结构体传参" class="headerlink" title="结构体传参"></a>结构体传参</h3><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><h3 id="类"><a href="#类" class="headerlink" title="类"></a>类</h3><p><code>private</code>（成员函数可以访问本类其它对象私有成员）、<code>public</code>、<code>protected</code>（该类以及子类）出现的次序和顺序可以任意，默认是private</p><p>类本身并不占内存</p><h3 id="数据成员"><a href="#数据成员" class="headerlink" title="数据成员"></a>数据成员</h3><p>可以使用已定义完整的类，但当前正在定义的类没有定义完整，所以不能实例化</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Grade</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> a; <span class="comment">//不占用内存空间，不可以赋初值。新标准可以赋值，但其实是通过构造函数赋值。</span></span><br><span class="line">  Grade *p;</span><br><span class="line">  Grade &amp;r;</span><br><span class="line">  Grade b; <span class="comment">//错误</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="函数成员"><a href="#函数成员" class="headerlink" title="函数成员"></a>函数成员</h3><ol><li><p>类内定义的称为内联函数，若要在类外定义，必须在类里声明原型</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Clock::SetTime</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> m, <span class="keyword">int</span> s)</span></span>&#123; <span class="comment">//::是作用域分辨符</span></span><br><span class="line">    ... <span class="comment">//访问类里变量时直接访问就可以，写法和内联一样</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>默认形参可以放在原型里也可以放在定义处，不可都放，一般放原型</p></li><li><p>只有一份，不会给每个实例都放个函数</p></li></ol><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><ol><li>没有返回值类型，且不用void的，一般函数需要void</li><li>构造函数只能被自动调用</li><li>构造函数要放在<code>pubilc</code>里面，否则无法实例化</li><li>构造函数可以重载</li><li>只有在不定义构造函数的时候才会自动生成无参构造函数</li><li>定义有参构造函数时最好再重载一个无参构造</li></ol><h3 id="对象数组"><a href="#对象数组" class="headerlink" title="对象数组"></a>对象数组</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Score</span>&#123;</span></span><br><span class="line">    </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Score ScoreArr[<span class="number">3</span>]; <span class="comment">//调用不带参数的构造函数</span></span><br><span class="line">    Score ScoreArr[<span class="number">3</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;&#125;; <span class="comment">//带参构造函数，两种都行，初值表</span></span><br><span class="line">    Score ScoreArr[<span class="number">3</span>] = &#123;</span><br><span class="line">        Score(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),</span><br><span class="line">        Score(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>),</span><br><span class="line">        Score(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><h4 id="常量对象"><a href="#常量对象" class="headerlink" title="常量对象"></a>常量对象</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> 类名 对象名；</span><br><span class="line">类名 <span class="keyword">const</span> 对象名；<span class="comment">//两种都可以</span></span><br></pre></td></tr></table></figure><ol><li>常对象只能调用常成员函数</li><li>常对象本身以及其内部的属性等都不可以改变</li></ol><h4 id="常成员函数"><a href="#常成员函数" class="headerlink" title="常成员函数"></a>常成员函数</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getx</span><span class="params">()</span> <span class="keyword">const</span> </span>&#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">gety</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">A::gety</span><span class="params">()</span> <span class="keyword">const</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>原型和实现都要加<code>const</code></li><li><code>const</code>可以用来重载函数</li><li>不能修改数据成员</li><li>不能调用非常成员函数</li><li>普通对象可以调用常成员函数和非常成员函数</li></ol><h4 id="常数据成员"><a href="#常数据成员" class="headerlink" title="常数据成员"></a>常数据成员</h4><blockquote><p> 定义和普通常量一样（注意：常量声明必须初始化），但是由于老标准中初始化类时不允许赋值，所以可以在构造函数里通过初始化表赋值</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> SIZE;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">int</span> SIZE = <span class="number">3</span>; <span class="comment">//新标准才可以如此</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    A(<span class="keyword">int</span> size);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">A::A(<span class="keyword">int</span> size):SIZE(size) <span class="comment">//后面为参数化表可以给一个常量或者变量赋值</span></span><br><span class="line">&#123;...&#125;</span><br></pre></td></tr></table></figure><h3 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h3><h4 id="静态数据成员"><a href="#静态数据成员" class="headerlink" title="静态数据成员"></a>静态数据成员</h4><blockquote><p>静态成员只保留一次拷贝</p><p>不能用构造函数初始化静态成员，必须在类外初始化</p><p>定义对象时不会为静态成员分配空间</p><p>调用时可以通过类调用也可以通过<code>obj.</code>调用，值相同</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">double</span> a;  </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> b = <span class="number">2</span>;<span class="comment">//静态常数据成员可以在此初始化（非静态常数据成员老标准不支持在此初始化）</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> A::a = <span class="number">1.3</span>;<span class="comment">//不要忘记初始化，初始化的时候不加static</span></span><br></pre></td></tr></table></figure><h4 id="静态成员函数"><a href="#静态成员函数" class="headerlink" title="静态成员函数"></a>静态成员函数</h4><blockquote><p>不依赖任何对象，用来访问静态数据成员，可以通过类直接调用，也可以通过对象调用。</p><p>可以在类内声明原型，然后在类外定义，此时，类外不用加static</p><p>普通函数可以访问静态变量，但是静态函数不可以直接访问普通变量，但可以访问自己创建的或是传进来的实例的变量</p></blockquote><h3 id="友元"><a href="#友元" class="headerlink" title="友元"></a>友元</h3><p>友元类</p><p>友元函数</p><p>友元成员函数</p><h3 id="对象析构与拷贝构造"><a href="#对象析构与拷贝构造" class="headerlink" title="对象析构与拷贝构造"></a>对象析构与拷贝构造</h3><h4 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">~构造函数名();</span><br></pre></td></tr></table></figure><p>析构函数没有重载，没有参数，没有返回值</p><p>如果没有定义，系统会生成空析构函数</p><p>调用顺序和构造函数相反（出入栈）</p><h4 id="拷贝构造函数"><a href="#拷贝构造函数" class="headerlink" title="拷贝构造函数"></a>拷贝构造函数</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//默认拷贝构造函数，可以用旧实例来初始化新实例。</span></span><br><span class="line"><span class="function">MyClass <span class="title">A2</span><span class="params">(A1)</span></span>;</span><br><span class="line">MyClass A2 = A1;</span><br></pre></td></tr></table></figure><p>在初始化，函数传参，返回值的时候会自动调用拷贝构造函数。系统默认生成拷贝构造函数。但是先声明，再赋值不会调用，而是调用<code>=</code>。注意一定是传变量的时候才会调用，如果直接传递常量MyClass </p><blockquote><p>默认拷贝构造函数比较傻，只能浅拷贝（即直接赋值），这会导致，如果你的类用到了动态内存，那么两个指针指向会相同，所以需要自己重新定义拷贝构造函数，重新开辟内存。</p><p>而当自己重新定义拷贝构造函数之后，默认的拷贝构造函数和构造函数都会消失，所以你还需要定义构造函数。</p><p>但是如果你只是重新定义构造函数，默认的拷贝构造函数依旧完好。</p></blockquote><h3 id="运算符重载"><a href="#运算符重载" class="headerlink" title="运算符重载"></a>运算符重载</h3><blockquote><p>构造函数涉及到动态内存一定要注意</p><ul><li>拷贝构造函数</li><li>重新赋值运算符</li><li>析构函数</li></ul></blockquote><ul><li>C++ 要求’=’、’[]’、’()’、’-&gt;’运算符必须被定义为类的成员函数，把这些运算符通过全局函数进行重载时会出现编译错误；</li><li>如果有一个操作数是类类型（如 string 类），那么对于对称操作符（比如操作符“==”），最好通过全局函数的方式进行重载。</li><li>如果一个重载运算符是类的成员函数，那么只有当与它一起使用的左操作数是该类的对象时，该运算符才会被调用；而如果该运算符的左操作数确定为其他的类型，则运算符必须被重载为全局函数；</li><li>有一些运算符是不能重载的，如“sizeof”；</li><li>不能创建新的运算符；</li></ul><h4 id="重载为全局函数"><a href="#重载为全局函数" class="headerlink" title="重载为全局函数"></a>重载为全局函数</h4><ul><li>最好设置为友元函数</li></ul><h4 id="重载为成员函数"><a href="#重载为成员函数" class="headerlink" title="重载为成员函数"></a>重载为成员函数</h4><ul><li>形参少一个        </li></ul><h4 id="常见的重载"><a href="#常见的重载" class="headerlink" title="常见的重载"></a>常见的重载</h4><ul><li>=可以返回*this，这样就可以连等了！</li><li>[]返回类型要加个&amp;，这样就可以通过[]修改了！</li><li>前置++，重置为一元，后置为二元（加个新参int x 会默认传0）</li><li>&gt;&gt; &lt;&lt; <strong>必须是全局</strong></li></ul><h3 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h3><p>如果成员类没有无参构造函数，那么组合类的构造函数的时候，必须携带初始化表。**初始化表不是在调用构造函数，构造函数的调用顺序和初始化表无关，它仅仅是提供参数。顺序应该是和数据成员里声明的顺序相同。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">B</span>;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    A(<span class="keyword">const</span> &amp;B1):B(B1)</span><br><span class="line">        &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><blockquote><p>一些名词：继承、派生。基类、父类，派生类、子类 ，单继承，单向继承，多继承，多重继承，多层派生，多层继承</p></blockquote><p><img src="https://pic.imgdb.cn/item/612e56ce44eaada73961cd6b.jpg" alt></p><p>继承决定访问权限上限</p><p>派生类不继承<strong>构造函数、析构函数、赋值运算符</strong>，但是可以调用基类的</p><p>构造函数调用顺序：基类、成员对象、自己。</p><p>如果基类没有无参构造函数，那么派生类必须定义构造函数，通过参数表传递给基类，即便派生类本身不需要重新定义构造函数，此时重新定义的构造函数作用仅仅是传递参数。如果基类有的话则可以不定义。</p><p>对于多层派生，派生类会调用直接基类的构造函数，依次上溯。</p><p>继承方式如果不写，默认是private</p><h4 id="多继承"><a href="#多继承" class="headerlink" title="多继承"></a>多继承</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>:</span><span class="keyword">public</span> A, <span class="keyword">public</span> C&#123;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基类构造函数调用顺序按照声明的顺序，如例子中先调用A，再C</p><p>接着调用成员对象的构造函数</p><p>最后派生类</p><p>继承默认是private</p><p><strong>多继承要时刻注意可能出现二义性</strong>。</p><h3 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h3><blockquote><p>其实就是为了方便对所有的派生类进行统一管理罢了</p></blockquote><ol><li>虚函数不能是静态成员函数，也不能是友元函数，因为二者都不属于对象</li><li>多态的实现只能是指针或引用（基类指针指向派生对象，或基类引用指向派生对象）</li><li>派生类继承基类的虚函数，无论写不写<code>virtual</code>都是虚函数</li><li>派生类的重载函数会覆盖继承过来的同名虚函数</li></ol><h4 id="虚析构函数"><a href="#虚析构函数" class="headerlink" title="虚析构函数"></a>虚析构函数</h4><p>当派生类需要析构去delete动态内存时，如果是基类的指针，只会执行基类的析构函数，为了能够析构派生类，所以加了<code>virtual</code>。同时派生类会调用基类的析构函数。而基类不会调用派生类的析构函数。</p><h4 id="纯虚函数"><a href="#纯虚函数" class="headerlink" title="纯虚函数"></a>纯虚函数</h4><blockquote><p>只有原型没有实体</p></blockquote><p><code>virtual int f(int, double) = 0;</code></p><h4 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h4><p>一个类中至少有一个纯虚函数，则称之为抽象类。这种类只能作为基类，不能创建对象，但可以创建指针和引用。</p><h2 id="STL"><a href="#STL" class="headerlink" title="STL"></a>STL</h2><h3 id="string"><a href="#string" class="headerlink" title="string"></a>string</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="built_in">string</span> s1; <span class="comment">//空串</span></span><br><span class="line"><span class="keyword">char</span> *str1 = <span class="string">&quot;hhh&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> str2[] = <span class="string">&quot;hhh&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s1</span><span class="params">(str1)</span></span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s1</span><span class="params">(str2)</span></span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s1</span><span class="params">(<span class="string">&quot;hhh&quot;</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s1</span><span class="params">(str1, <span class="number">3</span>)</span></span>; <span class="comment">//前几个字符</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s2</span><span class="params">(s1)</span></span>; <span class="comment">//拷贝构造</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s2</span><span class="params">(s1, <span class="number">2</span>, <span class="number">3</span>)</span></span>; <span class="comment">//从2，拷贝3个。</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s2</span><span class="params">(s1, <span class="number">2</span>)</span></span>; <span class="comment">//从2，拷贝到结束</span></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">s2</span><span class="params">(<span class="number">3</span>, <span class="string">&#x27;c&#x27;</span>)</span></span>; <span class="comment">///ccc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//输入</span></span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s1; <span class="comment">//开头空格不算，中间空格结束</span></span><br><span class="line">getline(<span class="built_in">cin</span>, s1, c); <span class="comment">//输入流、string、结束符（默认回车），且结束符会被丢弃。如果第一个就是结束符，那么就是空串，如果之前又输入字符，需要getchar()或者cin.get()吃掉回车。返回值是输入流</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line">s1[i]; <span class="comment">//下标，注意没有&#x27;\0&#x27;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">char</span> ch:s);<span class="comment">//范围循环</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> &amp;ch:s);<span class="comment">//类型可以自动，&amp;可以修改源字符串，否则是副本</span></span><br><span class="line"><span class="comment">//迭代器iterator reverse_itrerator const_iterator，对于常量，必须用第三个</span></span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">string</span>::iterator it=s.begin(); it&lt;s.end(); it++)</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;*it&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//运算符重载</span></span><br><span class="line">+， =， +=， ==， ！=， &gt;, &gt;=....</span><br><span class="line">        </span><br><span class="line"><span class="comment">//方法(不写那么细致了)</span></span><br><span class="line">append();</span><br><span class="line">push_back();</span><br><span class="line">insert();</span><br><span class="line">erase();</span><br><span class="line">clear();</span><br><span class="line">replace();</span><br><span class="line">size();</span><br><span class="line">length();</span><br><span class="line">empty();</span><br><span class="line">compare();<span class="comment">//可以截取范围</span></span><br><span class="line">assign();<span class="comment">//赋值</span></span><br><span class="line">substr();<span class="comment">//子串</span></span><br><span class="line">swap();<span class="comment">//交换</span></span><br><span class="line">c_str();<span class="comment">//转换为c字符数粗</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h2><p><img src="https://pic.imgdb.cn/item/613d583444eaada739877124.jpg" alt></p><p><img src="https://pic.imgdb.cn/item/613d58b044eaada739880e76.jpg" alt></p><h3 id="基于控制台的I-O"><a href="#基于控制台的I-O" class="headerlink" title="基于控制台的I/O"></a>基于控制台的I/O</h3><p>​    cin cout <iostream></iostream></p><h3 id="基于字符串的I-O"><a href="#基于字符串的I-O" class="headerlink" title="基于字符串的I/O"></a>基于字符串的I/O</h3><ol><li><p>istringstream：流的输入</p></li><li><p>ostringstream：流的输出</p></li><li><p>stringstream：输入输出</p></li><li><pre><code class="c++"><span class="built_in">string</span> str = <span class="string">"asdkfjasdf"</span>;<span class="function"><span class="built_in">stringstream</span> <span class="title">ss</span><span class="params">(str)</span></span>;<span class="comment">//创建字符流对象</span>ss&gt;&gt;a&gt;&gt;b&gt;&gt;s;<span class="comment">//即从ss对象输入其它变量。</span>ss&lt;&lt;<span class="string">"234"</span>&lt;&lt;<span class="string">"2"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//输入到字符串</span><span class="built_in">string</span> s2 = ss.str();<span class="comment">//转化为字符串</span><span class="comment">//可以用来做不同类型数据的转换</span><span class="keyword">template</span>&lt;<span class="keyword">typename</span> out_type, <span class="keyword">typename</span> in_type&gt;<span class="function">out_type <span class="title">convert</span><span class="params">(<span class="keyword">const</span> in_type &amp;t)</span></span><span class="function"></span>&#123;    <span class="built_in">stringstream</span> stream;    steam&lt;&lt;t;    out_type res;    stream&gt;&gt;res;    <span class="keyword">return</span> res;&#125;&lt;!--code￼<span class="number">42</span>--&gt;</code></pre></li></ol><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//操作样例，从文件输出</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">8</span>],score[<span class="number">6</span>];</span><br><span class="line">    ifstream txtfile;</span><br><span class="line">    txtfile.open(<span class="string">&quot;d:\\xxx.txt&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!txtfile)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cerr</span>&lt;&lt;<span class="string">&quot;error&quot;</span>&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//cerr无缓冲输出，迅速的很呐！</span></span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!txtfile.eof()) <span class="comment">//判断是否读完了！只不过这样会重复输出最后一行，所以在下边加个if！</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(txtfile&gt;&gt;name&gt;&gt;score)<span class="comment">//防止最后一行重复</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;name&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;score&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    txtfile.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取二进制文件</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CStudent s;       </span><br><span class="line">    <span class="function">ifstream <span class="title">inFile</span><span class="params">(<span class="string">&quot;students.dat&quot;</span>,ios::in|ios::binary)</span></span>; <span class="comment">//二进制读方式打开</span></span><br><span class="line">    <span class="keyword">if</span>(!inFile) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;error&quot;</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(inFile.read((<span class="keyword">char</span> *)&amp;s, <span class="keyword">sizeof</span>(s))) &#123; <span class="comment">//一直读到文件结束，可以用binfile.peek()!=EOF来判断</span></span><br><span class="line">        <span class="keyword">int</span> readedBytes = inFile.gcount(); <span class="comment">//看刚才读了多少字节</span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; s.szName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; s.age &lt;&lt; <span class="built_in">endl</span>;   </span><br><span class="line">    &#125;</span><br><span class="line">    inFile.close();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/613d5daa44eaada7398e970d.jpg" alt></p><h2 id="分文件编写"><a href="#分文件编写" class="headerlink" title="分文件编写"></a>分文件编写</h2><ol><li>h写声明，.cpp写定义，最后新的cpp里引用.h即可</li></ol><h2 id="杂乱"><a href="#杂乱" class="headerlink" title="杂乱"></a>杂乱</h2><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><ol><li><ctime></ctime></li><li><iostream></iostream></li></ol><h3 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h3><ol><li><p>pow是浮点计算，貌似算出来的数可能导致不相等，可以加个(int)，加（int）会导致不准确，需要自己写函数（不同编译器不一样效果）</p></li><li><p>cout输出小数不会带后面的0；</p></li><li><p>当在循环的时候要找到最好的判断方式，在最合适的地方break，不然很容易超时！</p></li><li><p>cin&gt;&gt;char1不会读入空格，scanf可以</p></li><li><p>第一个cin.getline之前要放一个getchar</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">60</span>];</span><br><span class="line">        <span class="built_in">cin</span>.getline(str, <span class="number">60</span>);</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len<span class="number">-1</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[j] == <span class="string">&#x27; &#x27;</span> &amp;&amp; str[j+<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>) sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(str[<span class="number">0</span>] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            sum--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum+<span class="number">1</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li><p>如果定义了拷贝构造函数，记得要把其它属性赋值，不然你传参的时候就错了！！！</p></li><li><p>析构貌似不用delete[];</p></li></ol><h2 id="考试复习"><a href="#考试复习" class="headerlink" title="考试复习"></a>考试复习</h2><h3 id="第一次课"><a href="#第一次课" class="headerlink" title="第一次课"></a>第一次课</h3><ol><li>‘\xCC’。\x是表示16进制，即CC是十六进制。</li><li>-=返回值是改变后的左侧的数</li><li>Size of char : 1<br>Size of int : 4<br>Size of short int : 2<br>Size of long int（long) : 8<br>Size of float : 4<br>Size of double : 8<br>Size of wchar_t : 4</li><li>1.0小数默认是double，如果是1.0f则是float</li><li><code>;</code>可以是一句话</li><li>‘0’——48，‘A’——65,’a’——97；</li><li>取余<code>%</code>必须是整型</li></ol><h3 id="第二次课"><a href="#第二次课" class="headerlink" title="第二次课"></a>第二次课</h3><ol><li><p>注意if后面不加{}的话，只能读一句。</p></li><li><pre><code class="c++"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><span class="function"></span>&#123;   <span class="keyword">int</span> a = <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>;   <span class="keyword">if</span>(a &lt; b)      <span class="keyword">if</span>(b &gt; c)            <span class="built_in">cout</span>&lt;&lt;<span class="number">3</span>;   <span class="keyword">else</span>      <span class="built_in">cout</span>&lt;&lt;<span class="number">4</span>; <span class="comment">//最终输出4，不加括号时，else只能跟最近的if</span>&#125;&lt;!--code￼<span class="number">45</span>--&gt;</code></pre></li><li><p>函数原型可以只声明变量类型，而不声明变量名称，且不需要<code>&#123;&#125;</code>；</p></li><li><p>函数都要通过main来调用，main是入口，所以函数不能单独运行，但是可以单独编译</p></li></ol><h3 id="第八次课"><a href="#第八次课" class="headerlink" title="第八次课"></a>第八次课</h3><ol><li>对于<code>double a[3][5]</code>，<code>a[1][5]</code>是不对的！</li><li><code>char a[3] = &#123;&#39;a&#39;,&#39;b&#39;,&#39;c&#39;&#125;</code>不可以用strlen()，因为没有结束符’\0’。</li><li>对于c_string的字符数组，注意最后的结束符，另外<code>\\</code>是一个字符。</li></ol><h3 id="第九次课"><a href="#第九次课" class="headerlink" title="第九次课"></a>第九次课</h3><ol><li>不可以用1，’a’这样的常量给指针赋值</li><li><code>int a[] = &#123;1,2,3&#125;</code>a是不可以变的！但是如果是形参，是可以变的！</li></ol><h3 id="第十一次课"><a href="#第十一次课" class="headerlink" title="第十一次课"></a>第十一次课</h3><ol><li>函数模板显示实例化与隐式实例化的条件，如果有普通类型，如int，则必须显示</li></ol><h3 id="第十二次课"><a href="#第十二次课" class="headerlink" title="第十二次课"></a>第十二次课</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ST</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">   <span class="keyword">long</span> a;</span><br><span class="line">   <span class="keyword">int</span> b;</span><br><span class="line">   <span class="keyword">char</span> c[<span class="number">2</span>];</span><br><span class="line">&#125;NEW; <span class="comment">// 给结构体起了别名，如果没有typedef的话，NEW在此处表示一个结构体</span></span><br><span class="line"></span><br><span class="line">ST st[] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;a&#x27;</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;b&#x27;</span>&#125;&#125;;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;(&amp;st[<span class="number">0</span>])-&gt;a; <span class="comment">//必须加括号，不然编译出错。</span></span><br></pre></td></tr></table></figure><h3 id="第十三次课"><a href="#第十三次课" class="headerlink" title="第十三次课"></a>第十三次课</h3><ol><li><p>常成员函数不可以修改属性值，但可以访问。常成员函数不可以调用非常成员函数。</p></li><li><p>常成员函数可以访问类中的所有数据成员，但不能修改。注意常数据成员要被初始化，（可以在构造函数初始化0</p></li><li><p>静态函数可以访问静态变量，但不能访问其它变量。普通函数可以访问静态变量。</p></li><li><p>注意静态数据成员的初始化</p></li><li><p>普通成员函数不能<code>:x(a),y(b)</code>；</p></li><li><p>常对象只能调用常成员函数</p></li><li><p>拷贝构造函数的参数<code>const point &amp;p</code></p></li><li><p>友元函数可以把原型和定义都写在类里，但是即便写在类里，也不是成员函数。<code>friend</code>只能用在类里。</p></li><li><p>当涉及到友元成员函数的时候，因为会涉及到相互依赖的问题，所以只写函数原型，函数定义要放在后面。</p></li><li><p><code>%</code>，必须是<code>int</code></p></li><li><p><code>switch</code>注意后面是否有break！</p></li></ol><h3 id="第十四次课"><a href="#第十四次课" class="headerlink" title="第十四次课"></a>第十四次课</h3><ol><li>是double后面要有个小数点么</li><li>函数默认返回值是int</li><li>赋值表达式<code>t=1</code>的值是t</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;四大件&quot;&gt;&lt;a href=&quot;#四大件&quot; class=&quot;headerlink&quot; title=&quot;四大件&quot;&gt;&lt;/a&gt;四大件&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;数据结构和算法&lt;/li&gt;
&lt;li&gt;计算机网络&lt;/li&gt;
&lt;li&gt;操作系统&lt;/li&gt;
&lt;li&gt;设计模式组成原理&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据类型&quot;&gt;&lt;/a&gt;数据类型&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;常量&lt;/p&gt;
&lt;p&gt;​    宏常量 #define&lt;/p&gt;
&lt;p&gt;​    const 修饰变量&lt;/p&gt;
&lt;p&gt;​    均不可修改&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;字符串&lt;/p&gt;
&lt;p&gt;char str[] = “ldksjfa”，会默认多一个’\0’&lt;/p&gt;
&lt;p&gt;string str = “dlkjafd” 需要头文件&lt;string&gt;&lt;/string&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;bool char int float double void wchar_t&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;typedef为已有类命新名字&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; feet;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;feet a = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;运算符&quot;&gt;&lt;a href=&quot;#运算符&quot; class=&quot;headerlink&quot; title=&quot;运算符&quot;&gt;&lt;/a&gt;运算符&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;三目运算符可以返回变量也可以返回变量值&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;控制结构&quot;&gt;&lt;a href=&quot;#控制结构&quot; class=&quot;headerlink&quot; title=&quot;控制结构&quot;&gt;&lt;/a&gt;控制结构&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;if - else if - else&lt;/li&gt;
&lt;li&gt;switch - case break- case break-default break &lt;strong&gt;只能是int 或者 char，必须break&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;循环结构 while（）{},do{}while()，for(int i =0;i&amp;lt;10;i++)&lt;/li&gt;
&lt;li&gt;goto FLAG; FLAG:&lt;/li&gt;
&lt;li&gt;continue&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h2&gt;&lt;h3 id=&quot;一维数组&quot;&gt;&lt;a href=&quot;#一维数组&quot; class=&quot;headerlink&quot; title=&quot;一维数组&quot;&gt;&lt;/a&gt;一维数组&lt;/h3&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="c++" scheme="https://asea.fun/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>初探Java</title>
    <link href="https://asea.fun/post/eb0811b7.html"/>
    <id>https://asea.fun/post/eb0811b7.html</id>
    <published>2021-07-21T16:12:40.000Z</published>
    <updated>2021-07-25T15:40:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h2><blockquote><p>推荐环境统一放在一个environment的文件夹下，最新的jdk的jre不用自己配置，只需要配置java_home以及path即可。<br>安装后移动jdk路径，会导致cmd无任何输出，可以重新安装一下（如果你想换位置的话）。</p></blockquote><h2 id="DOS命令"><a href="#DOS命令" class="headerlink" title="DOS命令"></a>DOS命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1. dir</span><br><span class="line">2. cd /d E:\xxx 跨盘操作</span><br><span class="line">3. cls (clear screen)</span><br><span class="line">4. exit</span><br><span class="line">5. ipconfig</span><br><span class="line">6. calc</span><br><span class="line">7. mspaint</span><br><span class="line">8. notepad</span><br><span class="line">9. ping + domain</span><br><span class="line">10. md test</span><br><span class="line">11. cd&gt;a.txt</span><br><span class="line">12. del a.txt</span><br><span class="line">13. rd test</span><br></pre></td></tr></table></figure><h2 id="基础知识点"><a href="#基础知识点" class="headerlink" title="基础知识点"></a>基础知识点</h2><ol><li><p>大小写敏感、强类型</p></li><li><p>char c  = ‘\u0061’</p></li><li><p>引用类型比较地址 基本类型比较值</p></li><li><p>高到低：强制转换；低到高：自动转换</p><ol><li>byte-&gt;short-&gt;hcar-&gt;int-&gt;long-&gt;float-&gt;double</li></ol></li><li><p>JDK7后数字可以用下划线分割</p></li><li><p>方法重载（参数类型、个数、排序不同）</p></li><li><p>数组</p><ol><li><p>int[] nums; （首选）</p></li><li><p>int nums[]; （C的风格）</p></li><li><p>int[] nums = new int[10];nums[0] = 1（动态初始化，先声明，后赋值）隐式初始化，int默认0，string默认null</p></li><li><p>int [] nums = {1,2,3}（静态初始化：创建直接赋值）</p></li><li><p>长度是确定的，不可更改，元素类型相同，可以是基本类型也可是引用类型</p></li><li><p>for-each:</p><ol><li><pre><code class="java"><span class="keyword">for</span>(<span class="keyword">int</span> array : arrays)&#123;    System.out.println(array);&#125;</code></pre></li></ol></li><li><p>Arrays类</p><ol><li>Arrays.sort()</li><li>Arrays.fill()</li><li>Arrays.tostring()</li></ol></li><li><p>稀疏数组</p><ol><li>总行 总列 有效值个数</li><li>行 列 值</li><li>…</li></ol></li></ol></li></ol><h2 id="面向对象（OOP）"><a href="#面向对象（OOP）" class="headerlink" title="面向对象（OOP）"></a>面向对象（OOP）</h2><ol><li><p>非静态方法需要实例化才能调用</p></li><li><p>引用传递、值传递</p></li><li><p>构造器（方法名和类名一致）,new本质是在调用构造器</p></li><li><p>无参构造再不定义任何构造时会自动生成，反之必须自己显示定义。</p></li><li><p>idea :  alt+insert 自动生成构造器</p></li><li><p>封装：属性私有，get，set</p></li><li><p>继承：实例化子类时，会先调用父类构造器，如果显式定义构造器，super（）必须在子类构造器的第一行。ctrl + h继承树</p></li><li><p>重写：方法名和参数列表必须一样</p></li><li><p>多态：能调用的方法只看引用类型，且如果子类重写父类方法，则运行子类方法。 多态是方法的多态</p></li><li><p>A instanceof B</p></li><li></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;踩坑&quot;&gt;&lt;a href=&quot;#踩坑&quot; class=&quot;headerlink&quot; title=&quot;踩坑&quot;&gt;&lt;/a&gt;踩坑&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;推荐环境统一放在一个environment的文件夹下，最新的jdk的jre不用自己配置，只需要配置java_home以及path即可。&lt;br&gt;安装后移动jdk路径，会导致cmd无任何输出，可以重新安装一下（如果你想换位置的话）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;DOS命令&quot;&gt;&lt;a href=&quot;#DOS命令&quot; class=&quot;headerlink&quot; title=&quot;DOS命令&quot;&gt;&lt;/a&gt;DOS命令&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. dir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. cd /d E:\xxx 跨盘操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3. cls (clear screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4. exit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5. ipconfig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6. calc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7. mspaint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8. notepad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9. ping + domain&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10. md test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11. cd&amp;gt;a.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12. del a.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13. rd test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;基础知识点&quot;&gt;&lt;a href=&quot;#基础知识点&quot; class=&quot;headerlink&quot; title=&quot;基础知识点&quot;&gt;&lt;/a&gt;基础知识点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;大小写敏感、强类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;char c  = ‘\u0061’&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引用类型比较地址 基本类型比较值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;高到低：强制转换；低到高：自动转换&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;byte-&amp;gt;short-&amp;gt;hcar-&amp;gt;int-&amp;gt;long-&amp;gt;float-&amp;gt;double&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JDK7后数字可以用下划线分割&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方法重载（参数类型、个数、排序不同）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数组&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;int[] nums; （首选）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int nums[]; （C的风格）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int[] nums = new int[10];nums[0] = 1（动态初始化，先声明，后赋值）隐式初始化，int默认0，string默认null&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int [] nums = {1,2,3}（静态初始化：创建直接赋值）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;长度是确定的，不可更改，元素类型相同，可以是基本类型也可是引用类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;for-each:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; array : arrays)&amp;#123;
    System.out.println(array);
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Arrays类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Arrays.sort()&lt;/li&gt;
&lt;li&gt;Arrays.fill()&lt;/li&gt;
&lt;li&gt;Arrays.tostring()&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;稀疏数组&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;总行 总列 有效值个数&lt;/li&gt;
&lt;li&gt;行 列 值&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;面向对象（OOP）&quot;&gt;&lt;a href=&quot;#面向对象（OOP）&quot; class=&quot;headerlink&quot; title=&quot;面向对象（OOP）&quot;&gt;&lt;/a&gt;面向对象（OOP）&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;非静态方法需要实例化才能调用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引用传递、值传递&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;构造器（方法名和类名一致）,new本质是在调用构造器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;无参构造再不定义任何构造时会自动生成，反之必须自己显示定义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;idea :  alt+insert 自动生成构造器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;封装：属性私有，get，set&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;继承：实例化子类时，会先调用父类构造器，如果显式定义构造器，super（）必须在子类构造器的第一行。ctrl + h继承树&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重写：方法名和参数列表必须一样&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多态：能调用的方法只看引用类型，且如果子类重写父类方法，则运行子类方法。 多态是方法的多态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A instanceof B&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java" scheme="https://asea.fun/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>如何搭建自己的网页编程（Jupyter）</title>
    <link href="https://asea.fun/post/ecef5fd9.html"/>
    <id>https://asea.fun/post/ecef5fd9.html</id>
    <published>2021-07-19T10:04:48.000Z</published>
    <updated>2021-07-19T12:17:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于如何利用Jupyter-Notebook搭建网页编程"><a href="#关于如何利用Jupyter-Notebook搭建网页编程" class="headerlink" title="关于如何利用Jupyter Notebook搭建网页编程"></a>关于如何利用Jupyter Notebook搭建网页编程</h1><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p><img src="https://pic.imgdb.cn/item/60f54fb95132923bf82d6ab0.jpg" alt></p><h2 id="安装jupyter"><a href="#安装jupyter" class="headerlink" title="安装jupyter"></a>安装jupyter</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install jupyter</span><br><span class="line"># 安装失败的可以考虑换阿里源</span><br><span class="line"># 修改.&#x2F;pip&#x2F;pip.ini 为</span><br><span class="line">[global]</span><br><span class="line">index-url &#x3D; https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple</span><br><span class="line">[install]</span><br><span class="line">trusted-host &#x3D; mirrors.aliyun.com</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><code>jupyter notebook --generate-config</code></p><ol><li>第一种密码配置<br><code>jupyter notebook password</code><br>确认密码后得到密文，复制。<br>在.py文件末尾填上如下几句<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c.NotebookApp.password &#x3D; u&#39;这里填写密文&#39;       # 刚才复制的那个密文</span><br><span class="line">c.NotebookApp.open_browser &#x3D; False       # 禁止自动打开浏览器  </span><br><span class="line">c.NotebookApp.port &#x3D;8888                         #随便指定一个端口，默认就是8888，也可以不写</span><br><span class="line">c.NotebookApp.certfile &#x3D; u&#39;c:&#x2F;&#x2F;xxx&#x2F;&#x2F;xxx&#39;   # 根目录，一定要写转义符（我就是错在这里，要认真看报错）</span><br></pre></td></tr></table></figure></li><li>第二种密码配置<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> IPython</span><br><span class="line">IPython.lib.passwd()</span><br></pre></td></tr></table></figure>得到密文，修改.py文件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c.NotebookApp.password &#x3D; u&#39;这里填写密文&#39;       # 刚才复制的那个密文</span><br><span class="line">c.NotebookApp.open_browser &#x3D; False       # 禁止自动打开浏览器  </span><br><span class="line">c.NotebookApp.port &#x3D;8888                         #随便指定一个端口，默认就是8888，也可以不写</span><br><span class="line">c.NotebookApp.certfile &#x3D; u&#39;c:&#x2F;&#x2F;xxx&#x2F;&#x2F;xxx&#39;   # 根目录，一定要写转义符（我就是错在这里，要认真看报错）</span><br></pre></td></tr></table></figure></li></ol><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p><code>jupyter notebook</code><br>注意启动后命令行弹出的运行地址包括token</p><h2 id="本地访问"><a href="#本地访问" class="headerlink" title="本地访问"></a>本地访问</h2><p>第一种密码配置：localhost:8888<br>第二种密码配置：localhost:8888?token=xxxx，登陆以后可以logout，通过token设置密码，然后可以正常登录，也可以重新启动一下，若提示.py和.json密码不匹配，可以重新采取第一种密码配置，强制修改密码。</p><h2 id="远端访问"><a href="#远端访问" class="headerlink" title="远端访问"></a>远端访问</h2><p>ip:8888<br>记得去控制台安全组实例把端口开放</p><p>到此结束</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于如何利用Jupyter-Notebook搭建网页编程&quot;&gt;&lt;a href=&quot;#关于如何利用Jupyter-Notebook搭建网页编程&quot; class=&quot;headerlink&quot; title=&quot;关于如何利用Jupyter Notebook搭建网页编程&quot;&gt;&lt;/a&gt;关于如何利用Jupyter Notebook搭建网页编程&lt;/h1&gt;&lt;h2 id=&quot;展示&quot;&gt;&lt;a href=&quot;#展示&quot; class=&quot;headerlink&quot; title=&quot;展示&quot;&gt;&lt;/a&gt;展示&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/60f54fb95132923bf82d6ab0.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装jupyter&quot;&gt;&lt;a href=&quot;#安装jupyter&quot; class=&quot;headerlink&quot; title=&quot;安装jupyter&quot;&gt;&lt;/a&gt;安装jupyter&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install jupyter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 安装失败的可以考虑换阿里源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 修改.&amp;#x2F;pip&amp;#x2F;pip.ini 为&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[global]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index-url &amp;#x3D; https:&amp;#x2F;&amp;#x2F;mirrors.aliyun.com&amp;#x2F;pypi&amp;#x2F;simple&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[install]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;trusted-host &amp;#x3D; mirrors.aliyun.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;&lt;code&gt;jupyter notebook --generate-config&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一种密码配置&lt;br&gt;&lt;code&gt;jupyter notebook password&lt;/code&gt;&lt;br&gt;确认密码后得到密文，复制。&lt;br&gt;在.py文件末尾填上如下几句&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.password &amp;#x3D; u&amp;#39;这里填写密文&amp;#39;       # 刚才复制的那个密文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.open_browser &amp;#x3D; False       # 禁止自动打开浏览器  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.port &amp;#x3D;8888                         #随便指定一个端口，默认就是8888，也可以不写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.certfile &amp;#x3D; u&amp;#39;c:&amp;#x2F;&amp;#x2F;xxx&amp;#x2F;&amp;#x2F;xxx&amp;#39;   # 根目录，一定要写转义符（我就是错在这里，要认真看报错）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;第二种密码配置&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; IPython&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPython.lib.passwd()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
得到密文，修改.py文件&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.password &amp;#x3D; u&amp;#39;这里填写密文&amp;#39;       # 刚才复制的那个密文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.open_browser &amp;#x3D; False       # 禁止自动打开浏览器  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.port &amp;#x3D;8888                         #随便指定一个端口，默认就是8888，也可以不写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.certfile &amp;#x3D; u&amp;#39;c:&amp;#x2F;&amp;#x2F;xxx&amp;#x2F;&amp;#x2F;xxx&amp;#39;   # 根目录，一定要写转义符（我就是错在这里，要认真看报错）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h2&gt;&lt;p&gt;&lt;code&gt;jupyter notebook&lt;/code&gt;&lt;br&gt;注意启动后命令行弹出的运行地址包括token&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Jupyter" scheme="https://asea.fun/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>学习通《软件技术基础》ppt</title>
    <link href="https://asea.fun/post/71475d58.html"/>
    <id>https://asea.fun/post/71475d58.html</id>
    <published>2021-06-09T12:06:17.000Z</published>
    <updated>2021-06-10T12:31:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="点击获取"><a href="#点击获取" class="headerlink" title="点击获取"></a><a href="http://dt2.8tupian.com/1/21378a1b500.pg3">点击获取</a></h1><p>请在点击后的界面内操作</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;点击获取&quot;&gt;&lt;a href=&quot;#点击获取&quot; class=&quot;headerlink&quot; title=&quot;点击获取&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://dt2.8tupian.com/1/21378a1b500.pg3&quot;&gt;点击获取&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;请在点击后的界面内操作&lt;/p&gt;

    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="sources" scheme="https://asea.fun/tags/sources/"/>
    
  </entry>
  
  <entry>
    <title>you-get支持哪些网站下载</title>
    <link href="https://asea.fun/post/cabfd42a.html"/>
    <id>https://asea.fun/post/cabfd42a.html</id>
    <published>2021-06-02T11:31:54.000Z</published>
    <updated>2021-06-02T11:34:26.000Z</updated>
    
    <content type="html"><![CDATA[<article class="baidu_pl">        <div id="article_content" class="article_content clearfix">        <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css">                <div id="content_views" class="htmledit_views">                    <h2><a name="t0"></a>You-get支持网站</h2> <div class="table-box"><table><thead><tr><th>网站</th><th>URL</th><th>视频?</th><th>图像?</th><th>音频?</th></tr></thead><tbody><tr><td><strong>YouTube</strong></td><td><a href="https://www.youtube.com/">https://www.youtube.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>Twitter</strong></td><td><a href="https://twitter.com/">https://twitter.com/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td>VK</td><td><a href="http://vk.com/">http://vk.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Vine</td><td><a href="https://vine.co/">https://vine.co/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Vimeo</td><td><a href="https://vimeo.com/">https://vimeo.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Vidto</td><td><a href="http://vidto.me/">http://vidto.me/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Veoh</td><td><a href="http://www.veoh.com/">http://www.veoh.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>Tumblr</strong></td><td><a href="https://www.tumblr.com/">https://www.tumblr.com/</a></td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>TED</td><td><a href="http://www.ted.com/">http://www.ted.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>SoundCloud</td><td><a href="https://soundcloud.com/">https://soundcloud.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>Pinterest</td><td><a href="https://www.pinterest.com/">https://www.pinterest.com/</a></td><td>&nbsp;</td><td>✓</td><td>&nbsp;</td></tr><tr><td>MusicPlayOn</td><td><a href="http://en.musicplayon.com/">http://en.musicplayon.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>MTV81</td><td><a href="http://www.mtv81.com/">http://www.mtv81.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Mixcloud</td><td><a href="https://www.mixcloud.com/">https://www.mixcloud.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>Metacafe</td><td><a href="http://www.metacafe.com/">http://www.metacafe.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Magisto</td><td><a href="http://www.magisto.com/">http://www.magisto.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Khan Academy</td><td><a href="https://www.khanacademy.org/">https://www.khanacademy.org/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>JPopsuki TV</td><td><a href="http://www.jpopsuki.tv/">http://www.jpopsuki.tv/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Internet Archive</td><td><a href="https://archive.org/">https://archive.org/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>Instagram</strong></td><td><a href="https://instagram.com/">https://instagram.com/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td>Heavy Music Archive</td><td><a href="http://www.heavy-music.ru/">http://www.heavy-music.ru/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td><strong>Google+</strong></td><td><a href="https://plus.google.com/">https://plus.google.com/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td>Freesound</td><td><a href="http://www.freesound.org/">http://www.freesound.org/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>Flickr</td><td><a href="https://www.flickr.com/">https://www.flickr.com/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td>Facebook</td><td><a href="https://www.facebook.com/">https://www.facebook.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>eHow</td><td><a href="http://www.ehow.com/">http://www.ehow.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Dailymotion</td><td><a href="http://www.dailymotion.com/">http://www.dailymotion.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>CBS</td><td><a href="http://www.cbs.com/">http://www.cbs.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Bandcamp</td><td><a href="http://bandcamp.com/">http://bandcamp.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>AliveThai</td><td><a href="http://alive.in.th/">http://alive.in.th/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>interest.me</td><td><a href="http://ch.interest.me/tvn">http://ch.interest.me/tvn</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>755<br> ナナゴーゴー</strong></td><td><a href="http://7gogo.jp/">http://7gogo.jp/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td><strong>niconico<br> ニコニコ動画</strong></td><td><a href="http://www.nicovideo.jp/">http://www.nicovideo.jp/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>163<br> 网易视频<br> 网易云音乐</strong></td><td><a href="http://v.163.com/">http://v.163.com/</a><br><a href="http://music.163.com/">http://music.163.com/</a></td><td>✓</td><td>&nbsp;</td><td>✓</td></tr><tr><td>56网</td><td><a href="http://www.56.com/">http://www.56.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>AcFun</strong></td><td><a href="http://www.acfun.tv/">http://www.acfun.tv/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>Baidu<br> 百度贴吧</strong></td><td><a href="http://tieba.baidu.com/">http://tieba.baidu.com/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td>爆米花网</td><td><a href="http://www.baomihua.com/">http://www.baomihua.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>bilibili<br> 哔哩哔哩</strong></td><td><a href="http://www.bilibili.com/">http://www.bilibili.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Dilidili</td><td><a href="http://www.dilidili.com/">http://www.dilidili.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>豆瓣</td><td><a href="http://www.douban.com/">http://www.douban.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>斗鱼</td><td><a href="http://www.douyutv.com/">http://www.douyutv.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>凤凰视频</td><td><a href="http://v.ifeng.com/">http://v.ifeng.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>风行网</td><td><a href="http://www.fun.tv/">http://www.fun.tv/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>iQIYI<br> 爱奇艺</td><td><a href="http://www.iqiyi.com/">http://www.iqiyi.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>激动网</td><td><a href="http://www.joy.cn/">http://www.joy.cn/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>酷6网</td><td><a href="http://www.ku6.com/">http://www.ku6.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>酷狗音乐</td><td><a href="http://www.kugou.com/">http://www.kugou.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>酷我音乐</td><td><a href="http://www.kuwo.cn/">http://www.kuwo.cn/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>乐视网</td><td><a href="http://www.letv.com/">http://www.letv.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>荔枝FM</td><td><a href="http://www.lizhi.fm/">http://www.lizhi.fm/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>秒拍</td><td><a href="http://www.miaopai.com/">http://www.miaopai.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>MioMio弹幕网</td><td><a href="http://www.miomio.tv/">http://www.miomio.tv/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>痞客邦</td><td><a href="https://www.pixnet.net/">https://www.pixnet.net/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>PPTV聚力</td><td><a href="http://www.pptv.com/">http://www.pptv.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>齐鲁网</td><td><a href="http://v.iqilu.com/">http://v.iqilu.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>QQ<br> 腾讯视频</td><td><a href="http://v.qq.com/">http://v.qq.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>阡陌视频</td><td><a href="http://qianmo.com/">http://qianmo.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Sina<br> 新浪视频<br> 微博秒拍视频</td><td><a href="http://video.sina.com.cn/">http://video.sina.com.cn/</a><br><a href="http://video.weibo.com/">http://video.weibo.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Sohu<br> 搜狐视频</td><td><a href="http://tv.sohu.com/">http://tv.sohu.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>天天动听</td><td><a href="http://www.dongting.com/">http://www.dongting.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td><strong>Tudou<br> 土豆</strong></td><td><a href="http://www.tudou.com/">http://www.tudou.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>虾米</td><td><a href="http://www.xiami.com/">http://www.xiami.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>阳光卫视</td><td><a href="http://www.isuntv.com/">http://www.isuntv.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>音悦Tai</strong></td><td><a href="http://www.yinyuetai.com/">http://www.yinyuetai.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>Youku<br> 优酷</strong></td><td><a href="http://www.youku.com/">http://www.youku.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>战旗TV</td><td><a href="http://www.zhanqi.tv/lives">http://www.zhanqi.tv/lives</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>央视网</td><td><a href="http://www.cntv.cn/">http://www.cntv.cn/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table></div><p>对于不在列表的网站，通用解析器将寻找并下载感兴趣之内容.</p>                </div><div data-report-view="{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/qq_39377696/article/details/86529857&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}"><div></div></div>        </div>    </article>]]></content>
    
    <summary type="html">
    
      &lt;article class=&quot;baidu_pl&quot;&gt;
        &lt;div id=&quot;article_content&quot; class=&quot;article_content clearfix&quot;&gt;
        &lt;link rel=&quot;stylesheet&quot; href=&quot;https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css&quot;&gt;
                &lt;div id=&quot;content_views&quot; class=&quot;htmledit_views&quot;&gt;
                    &lt;h2&gt;&lt;a name=&quot;t0&quot;&gt;&lt;/a&gt;You-get支持网站&lt;/h2&gt; 
&lt;div class=&quot;table-box&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;网站&lt;/th&gt;&lt;th&gt;URL&lt;/th&gt;&lt;th&gt;视频?&lt;/th&gt;&lt;th&gt;图像?&lt;/th&gt;&lt;th&gt;音频?&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;YouTube&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.youtube.com/&quot;&gt;https://www.youtube.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://twitter.com/&quot;&gt;https://twitter.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;VK&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://vk.com/&quot;&gt;http://vk.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Vine&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://vine.co/&quot;&gt;https://vine.co/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Vimeo&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://vimeo.com/&quot;&gt;https://vimeo.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Vidto&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://vidto.me/&quot;&gt;http://vidto.me/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Veoh&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.veoh.com/&quot;&gt;http://www.veoh.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Tumblr&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.tumblr.com/&quot;&gt;https://www.tumblr.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;TED&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.ted.com/&quot;&gt;http://www.ted.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SoundCloud&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://soundcloud.com/&quot;&gt;https://soundcloud.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Pinterest&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.pinterest.com/&quot;&gt;https://www.pinterest.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MusicPlayOn&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://en.musicplayon.com/&quot;&gt;http://en.musicplayon.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MTV81&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.mtv81.com/&quot;&gt;http://www.mtv81.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Mixcloud&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.mixcloud.com/&quot;&gt;https://www.mixcloud.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Metacafe&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.metacafe.com/&quot;&gt;http://www.metacafe.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Magisto&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.magisto.com/&quot;&gt;http://www.magisto.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Khan Academy&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.khanacademy.org/&quot;&gt;https://www.khanacademy.org/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;JPopsuki TV&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.jpopsuki.tv/&quot;&gt;http://www.jpopsuki.tv/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Internet Archive&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://archive.org/&quot;&gt;https://archive.org/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Instagram&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://instagram.com/&quot;&gt;https://instagram.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Heavy Music Archive&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.heavy-music.ru/&quot;&gt;http://www.heavy-music.ru/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Google+&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://plus.google.com/&quot;&gt;https://plus.google.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Freesound&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.freesound.org/&quot;&gt;http://www.freesound.org/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Flickr&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.flickr.com/&quot;&gt;https://www.flickr.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Facebook&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.facebook.com/&quot;&gt;https://www.facebook.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;eHow&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.ehow.com/&quot;&gt;http://www.ehow.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dailymotion&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.dailymotion.com/&quot;&gt;http://www.dailymotion.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CBS&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.cbs.com/&quot;&gt;http://www.cbs.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Bandcamp&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://bandcamp.com/&quot;&gt;http://bandcamp.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AliveThai&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://alive.in.th/&quot;&gt;http://alive.in.th/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;interest.me&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://ch.interest.me/tvn&quot;&gt;http://ch.interest.me/tvn&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;755&lt;br&gt; ナナゴーゴー&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://7gogo.jp/&quot;&gt;http://7gogo.jp/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;niconico&lt;br&gt; ニコニコ動画&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.nicovideo.jp/&quot;&gt;http://www.nicovideo.jp/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;163&lt;br&gt; 网易视频&lt;br&gt; 网易云音乐&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://v.163.com/&quot;&gt;http://v.163.com/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://music.163.com/&quot;&gt;http://music.163.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;56网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.56.com/&quot;&gt;http://www.56.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;AcFun&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.acfun.tv/&quot;&gt;http://www.acfun.tv/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Baidu&lt;br&gt; 百度贴吧&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://tieba.baidu.com/&quot;&gt;http://tieba.baidu.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;爆米花网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.baomihua.com/&quot;&gt;http://www.baomihua.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;bilibili&lt;br&gt; 哔哩哔哩&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.bilibili.com/&quot;&gt;http://www.bilibili.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dilidili&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.dilidili.com/&quot;&gt;http://www.dilidili.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;豆瓣&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.douban.com/&quot;&gt;http://www.douban.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;斗鱼&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.douyutv.com/&quot;&gt;http://www.douyutv.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;凤凰视频&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://v.ifeng.com/&quot;&gt;http://v.ifeng.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;风行网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.fun.tv/&quot;&gt;http://www.fun.tv/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;iQIYI&lt;br&gt; 爱奇艺&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.iqiyi.com/&quot;&gt;http://www.iqiyi.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;激动网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.joy.cn/&quot;&gt;http://www.joy.cn/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;酷6网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.ku6.com/&quot;&gt;http://www.ku6.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;酷狗音乐&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.kugou.com/&quot;&gt;http://www.kugou.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;酷我音乐&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.kuwo.cn/&quot;&gt;http://www.kuwo.cn/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;乐视网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.letv.com/&quot;&gt;http://www.letv.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;荔枝FM&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.lizhi.fm/&quot;&gt;http://www.lizhi.fm/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;秒拍&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.miaopai.com/&quot;&gt;http://www.miaopai.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MioMio弹幕网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.miomio.tv/&quot;&gt;http://www.miomio.tv/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;痞客邦&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.pixnet.net/&quot;&gt;https://www.pixnet.net/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PPTV聚力&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.pptv.com/&quot;&gt;http://www.pptv.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;齐鲁网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://v.iqilu.com/&quot;&gt;http://v.iqilu.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;QQ&lt;br&gt; 腾讯视频&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://v.qq.com/&quot;&gt;http://v.qq.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;阡陌视频&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://qianmo.com/&quot;&gt;http://qianmo.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Sina&lt;br&gt; 新浪视频&lt;br&gt; 微博秒拍视频&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://video.sina.com.cn/&quot;&gt;http://video.sina.com.cn/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://video.weibo.com/&quot;&gt;http://video.weibo.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Sohu&lt;br&gt; 搜狐视频&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://tv.sohu.com/&quot;&gt;http://tv.sohu.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;天天动听&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.dongting.com/&quot;&gt;http://www.dongting.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Tudou&lt;br&gt; 土豆&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.tudou.com/&quot;&gt;http://www.tudou.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;虾米&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.xiami.com/&quot;&gt;http://www.xiami.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;阳光卫视&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.isuntv.com/&quot;&gt;http://www.isuntv.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;音悦Tai&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.yinyuetai.com/&quot;&gt;http://www.yinyuetai.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Youku&lt;br&gt; 优酷&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.youku.com/&quot;&gt;http://www.youku.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;战旗TV&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.zhanqi.tv/lives&quot;&gt;http://www.zhanqi.tv/lives&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;央视网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.cntv.cn/&quot;&gt;http://www.cntv.cn/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;对于不在列表的网站，通用解析器将寻找并下载感兴趣之内容.&lt;/p&gt;
                &lt;/div&gt;&lt;div data-report-view=&quot;{&amp;quot;mod&amp;quot;:&amp;quot;1585297308_001&amp;quot;,&amp;quot;dest&amp;quot;:&amp;quot;https://blog.csdn.net/qq_39377696/article/details/86529857&amp;quot;,&amp;quot;extend1&amp;quot;:&amp;quot;pc&amp;quot;,&amp;quot;ab&amp;quot;:&amp;quot;new&amp;quot;}&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/article&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="you-get" scheme="https://asea.fun/tags/you-get/"/>
    
  </entry>
  
  <entry>
    <title>关于高考的一些思考（文素课小作业）</title>
    <link href="https://asea.fun/post/29ec6806.html"/>
    <id>https://asea.fun/post/29ec6806.html</id>
    <published>2021-05-26T13:43:53.000Z</published>
    <updated>2021-05-26T13:46:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于高考的一些思考"><a href="#关于高考的一些思考" class="headerlink" title="关于高考的一些思考"></a>关于高考的一些思考</h1><p>大二了已经，距离我的高考已经过去几近两年了。前段时间偶然翻到我在19年6月8号晚上写的小文章，方才想起当时的我俨然是一个喜欢去写东西记录感受的人。看了那篇文章什么感受呢，里面一些细节我还历历在目，但是宏观的情愫我已经体味不到了，这种感觉就像是你长大后就忘记怎么长大似的，仿佛本来是这么大。<br>那节诗歌与人生，莫名其妙地变成了一节讨论高考的课，老师以及同学都举出了不少的例子，这让我想起来我高三那段时间发生的公交坠江事件，以及各地发生的跳楼等等事件。这类事件很多，而且无一例外让我对生死感到敬畏。高中在学校能接受的信息十分有限，仅仅能从各家杂志和老师口中甚至是试卷上获取时事信息，我记得当时喜欢看《作文素材》和《看天下》之类的杂志，其实本质是什么呢，我对这个世界了解的太少了，就像信息时代还未发展起来的时候人们大都去看报和听收音机一样。我想说的是，到现在，近来的一年中，当然也发生了很多事情，我也通过各方渠道了解过很多，但无一例外，我都提不起兴趣来，我很少去深入了解那些新闻，不知道这起事故的来龙去脉，更不用提各种反转。我厌恶极了当今的各种报道，他们像一群狗一样争先恐后疯抢食物（新闻头条便是他们的粮食），不要说什么价值观导向，且看各家官方媒体都不辨是非把各种错误消息信手拈来，让舆论里面的人们经历心情的大起大落，多让人心躁。写下这些的时候，很不幸，袁隆平老先生走了，走之前却还闹了场造谣的风波，让我痛心疾首。</p><p>总而言之，现在的我，对各种新闻已经没有任何兴趣了，我不想再花费心思在它上面。</p><p>说这些是干什么的呢，因为那节课不少同学举的例子我都闻所未闻或是只是道听途说了些皮毛。我完全不敢相信他们的报道是否真实，这使我对他们的言语存疑。</p><p>说回高考，无非就是“公平！公平！还是TMD公平！”。<br>公平这件事情很容易上升到哲学层次，或者简单来说很容易成为辩题，大多都是各执己见、众说纷纭、难分伯仲最后莫衷一是。大多数人不都是自私的吗，口中的公平虚伪极了，这些人想问题只考虑到于己有利的方面。我记得有同学说到四川怎么样怎么样，我大河南每年百万考生都还没说话。居然还有人在这里提到内卷，其实我深知这些词语代表的意思。但是我觉的应该从另一种角度来考虑：大家所说的内卷不过就是所有人都做了多余的劳动，而最后得到的收益却没有增加，所有人都站起来看电影，所有人都玩命学习，最后能看见电影的还是那么多人，能考上大学的还是那么多人。于是他们开始呼吁反内卷、内卷革命。这让我哭笑不得，再本质一点，当你考虑内卷的收益的时候，你就已经狭隘了，因为你没有考虑到整体的收益，内卷得到是什么？是所有人对知识的理解都加固了，整个社会的人才知识水平提高了。换做公司，整个公司的生产力也提高了不是吗？也就是说，内卷最终造成的是上层收益增加。<br>今天还看到一个有意思的话题，说是审美是个复杂的东西，它包括了很多权力结构因素在里面，简单举个例子就是你有什么资格认为你的审美更高级？由于各家说法很多，这里不赘述。其实用这种想法去思考内卷，不也正是如此，有太多结构化的东西在里面。然而在当今社会，这种结构是必要的，所以这种现象是无法根除的，它渗透在任何地方。往大了说，也正是无处不在的内卷才推动着人类社会发展。</p><p>试想，所有人都能不用劳动，靠着大自然的恩赐过上幸福的生活，这不守恒了吧！</p><p>说到这里肯定还有人要说了，不是说我们不应该努力，而是应该最大效率的去让每个人的劳动收益最大化，我们应该去寻找更好的解决方式，而不是一味的内卷。我只想说，只要有资源就有竞争，只要竞争存在，内卷就不会缺席。<br>再说回高考，我认为急需改善的一点是，让同学们学什么、怎么学，或者更好是去考虑如何让这活生生的年轻人健健康康长大，而不是去考虑如何改变他们的竞争结构。前者比后者重要一万倍，然而又有多少人在思考前者。</p><p>以上。</p><p>另外最近看杨宁文学理论课上瘾，强推！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于高考的一些思考&quot;&gt;&lt;a href=&quot;#关于高考的一些思考&quot; class=&quot;headerlink&quot; title=&quot;关于高考的一些思考&quot;&gt;&lt;/a&gt;关于高考的一些思考&lt;/h1&gt;&lt;p&gt;大二了已经，距离我的高考已经过去几近两年了。前段时间偶然翻到我在19年6月8号晚上写的小文章，方才想起当时的我俨然是一个喜欢去写东西记录感受的人。看了那篇文章什么感受呢，里面一些细节我还历历在目，但是宏观的情愫我已经体味不到了，这种感觉就像是你长大后就忘记怎么长大似的，仿佛本来是这么大。&lt;br&gt;那节诗歌与人生，莫名其妙地变成了一节讨论高考的课，老师以及同学都举出了不少的例子，这让我想起来我高三那段时间发生的公交坠江事件，以及各地发生的跳楼等等事件。这类事件很多，而且无一例外让我对生死感到敬畏。高中在学校能接受的信息十分有限，仅仅能从各家杂志和老师口中甚至是试卷上获取时事信息，我记得当时喜欢看《作文素材》和《看天下》之类的杂志，其实本质是什么呢，我对这个世界了解的太少了，就像信息时代还未发展起来的时候人们大都去看报和听收音机一样。我想说的是，到现在，近来的一年中，当然也发生了很多事情，我也通过各方渠道了解过很多，但无一例外，我都提不起兴趣来，我很少去深入了解那些新闻，不知道这起事故的来龙去脉，更不用提各种反转。我厌恶极了当今的各种报道，他们像一群狗一样争先恐后疯抢食物（新闻头条便是他们的粮食），不要说什么价值观导向，且看各家官方媒体都不辨是非把各种错误消息信手拈来，让舆论里面的人们经历心情的大起大落，多让人心躁。写下这些的时候，很不幸，袁隆平老先生走了，走之前却还闹了场造谣的风波，让我痛心疾首。&lt;/p&gt;
&lt;p&gt;总而言之，现在的我，对各种新闻已经没有任何兴趣了，我不想再花费心思在它上面。&lt;/p&gt;
&lt;p&gt;说这些是干什么的呢，因为那节课不少同学举的例子我都闻所未闻或是只是道听途说了些皮毛。我完全不敢相信他们的报道是否真实，这使我对他们的言语存疑。&lt;/p&gt;
&lt;p&gt;说回高考，无非就是“公平！公平！还是TMD公平！”。&lt;br&gt;公平这件事情很容易上升到哲学层次，或者简单来说很容易成为辩题，大多都是各执己见、众说纷纭、难分伯仲最后莫衷一是。大多数人不都是自私的吗，口中的公平虚伪极了，这些人想问题只考虑到于己有利的方面。我记得有同学说到四川怎么样怎么样，我大河南每年百万考生都还没说话。居然还有人在这里提到内卷，其实我深知这些词语代表的意思。但是我觉的应该从另一种角度来考虑：大家所说的内卷不过就是所有人都做了多余的劳动，而最后得到的收益却没有增加，所有人都站起来看电影，所有人都玩命学习，最后能看见电影的还是那么多人，能考上大学的还是那么多人。于是他们开始呼吁反内卷、内卷革命。这让我哭笑不得，再本质一点，当你考虑内卷的收益的时候，你就已经狭隘了，因为你没有考虑到整体的收益，内卷得到是什么？是所有人对知识的理解都加固了，整个社会的人才知识水平提高了。换做公司，整个公司的生产力也提高了不是吗？也就是说，内卷最终造成的是上层收益增加。&lt;br&gt;今天还看到一个有意思的话题，说是审美是个复杂的东西，它包括了很多权力结构因素在里面，简单举个例子就是你有什么资格认为你的审美更高级？由于各家说法很多，这里不赘述。其实用这种想法去思考内卷，不也正是如此，有太多结构化的东西在里面。然而在当今社会，这种结构是必要的，所以这种现象是无法根除的，它渗透在任何地方。往大了说，也正是无处不在的内卷才推动着人类社会发展。&lt;/p&gt;
&lt;p&gt;试想，所有人都能不用劳动，靠着大自然的恩赐过上幸福的生活，这不守恒了吧！&lt;/p&gt;
&lt;p&gt;说到这里肯定还有人要说了，不是说我们不应该努力，而是应该最大效率的去让每个人的劳动收益最大化，我们应该去寻找更好的解决方式，而不是一味的内卷。我只想说，只要有资源就有竞争，只要竞争存在，内卷就不会缺席。&lt;br&gt;再说回高考，我认为急需改善的一点是，让同学们学什么、怎么学，或者更好是去考虑如何让这活生生的年轻人健健康康长大，而不是去考虑如何改变他们的竞争结构。前者比后者重要一万倍，然而又有多少人在思考前者。&lt;/p&gt;
&lt;p&gt;以上。&lt;/p&gt;
&lt;p&gt;另外最近看杨宁文学理论课上瘾，强推！&lt;/p&gt;

    
    </summary>
    
    
      <category term="文学" scheme="https://asea.fun/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="literature" scheme="https://asea.fun/tags/literature/"/>
    
  </entry>
  
</feed>
