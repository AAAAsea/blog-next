<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AseaBlog</title>
  <icon>https://www.gravatar.com/avatar/2ab32513ce6dc86cc9542de0cb40ddbe</icon>
  <subtitle>我的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://asea.fun/"/>
  <updated>2021-04-28T16:31:04.000Z</updated>
  <id>https://asea.fun/</id>
  
  <author>
    <name>Asea</name>
    <email>gyvip001@126.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>水漫二十</title>
    <link href="https://asea.fun/post/42a48ee3.html"/>
    <id>https://asea.fun/post/42a48ee3.html</id>
    <published>2021-04-28T16:31:04.000Z</published>
    <updated>2021-04-28T16:31:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在生日过后记录些"><a href="#在生日过后记录些" class="headerlink" title="在生日过后记录些"></a>在生日过后记录些</h2><p>前两天忽然想起来《毕业缺海》那篇文章，于是又翻出来看了看，其中大概有一成的东西读来仿佛不属于我了，我知道这个比例会越来越大，但相较于其他篇算性能不错了。一晃而过，毕业到现在，还有一个多月便两年了，刚好是我从一个环境到另一个环境所需要的适应的时间。再多一年就会成为心里永远的壁垒了。<br>农历生日过了十几年了，今年单独抽出来过了阳历生日，410总比317好听些，但是317实在太令人熟悉了，条件反射般的让我激灵。2021年的317，算是我主观意义上真正二十了，这一天极为平淡，上午两大节课，电工技术和机械原理都是再前半段集中注意力了，后面逐渐跑神，就再也没能回过来。下午互换性还算勉强抵抗困意，软件技术还是一如往常。这些事情不重要，所以只需要一笔带过。真正想要记录的有一些，例如：阿弥在我生日这天直播，我把qq飞车打上了星耀，买的拖鞋到了，会用浴花起沫洗头，会在vscode使用qq插件，我妈早上给我了500，奶奶在七点多就给我打了个电话（我到晚上才回过去），我爸发的红包里我和我妈抢到的竟然一模一样（这毕竟是我们母子二人的节日），作业基本搞定，两天后要出去玩一下，衣服洗好，床单更换，枕套更换，我对家的理解慢慢改善，家庭关系愈发融洽（我悟出来的解决方法就是像对待朋友一样对待他们）……<br>最近仿佛是在好起来。<br>仿佛我在阳历生日许下的心愿已经完成一二。<br>那这次生日许个什么愿呢，愿望是不能说出来的，但毕竟我写这些东西的时候，已经二十了，所以还是可以说的对吧？<br>所以，我真的希望，现阶段，转专业可以成功吧，之后便是投入计算机的努力（这是最好的结果，尽管可能性不是很大）。</p><p>再说点关于生日的吧，现在除了家人（大鹅也是家人）基本没人会跟我说生日快乐了。可能会有些失落，是不可控的那种失落。我想起来那个up过二十的时候录vlog了，还是很喜欢那样直抒胸臆的措辞和神态的，至少我做不出来，我还是很喜欢看别人快乐。<br>为什么说水漫二十呢，第一是有点上火喝了很多水；第二是水有时候很平静，就像这次的生日；第三是毕业缺海那篇，到现在我也没见到海；第四是过去稀里糊涂，二十算是上岸了吧。<br>太晚了，就不多写了。<br><strong>anyway，goonigh~</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在生日过后记录些&quot;&gt;&lt;a href=&quot;#在生日过后记录些&quot; class=&quot;headerlink&quot; title=&quot;在生日过后记录些&quot;&gt;&lt;/a&gt;在生日过后记录些&lt;/h2&gt;&lt;p&gt;前两天忽然想起来《毕业缺海》那篇文章，于是又翻出来看了看，其中大概有一成的东西读来仿佛不属于我了，我知道这个比例会越来越大，但相较于其他篇算性能不错了。一晃而过，毕业到现在，还有一个多月便两年了，刚好是我从一个环境到另一个环境所需要的适应的时间。再多一年就会成为心里永远的壁垒了。&lt;br&gt;农历生日过了十几年了，今年单独抽出来过了阳历生日，410总比317好听些，但是317实在太令人熟悉了，条件反射般的让我激灵。2021年的317，算是我主观意义上真正二十了，这一天极为平淡，上午两大节课，电工技术和机械原理都是再前半段集中注意力了，后面逐渐跑神，就再也没能回过来。下午互换性还算勉强抵抗困意，软件技术还是一如往常。这些事情不重要，所以只需要一笔带过。真正想要记录的有一些，例如：阿弥在我生日这天直播，我把qq飞车打上了星耀，买的拖鞋到了，会用浴花起沫洗头，会在vscode使用qq插件，我妈早上给我了500，奶奶在七点多就给我打了个电话（我到晚上才回过去），我爸发的红包里我和我妈抢到的竟然一模一样（这毕竟是我们母子二人的节日），作业基本搞定，两天后要出去玩一下，衣服洗好，床单更换，枕套更换，我对家的理解慢慢改善，家庭关系愈发融洽（我悟出来的解决方法就是像对待朋友一样对待他们）……&lt;br&gt;最近仿佛是在好起来。&lt;br&gt;仿佛我在阳历生日许下的心愿已经完成一二。&lt;br&gt;那这次生日许个什么愿呢，愿望是不能说出来的，但毕竟我写这些东西的时候，已经二十了，所以还是可以说的对吧？&lt;br&gt;所以，我真的希望，现阶段，转专业可以成功吧，之后便是投入计算机的努力（这是最好的结果，尽管可能性不是很大）。&lt;/p&gt;
&lt;p&gt;再说点关于生日的吧，现在除了家人（大鹅也是家人）基本没人会跟我说生日快乐了。可能会有些失落，是不可控的那种失落。我想起来那个up过二十的时候录vlog了，还是很喜欢那样直抒胸臆的措辞和神态的，至少我做不出来，我还是很喜欢看别人快乐。&lt;br&gt;为什么说水漫二十呢，第一是有点上火喝了很多水；第二是水有时候很平静，就像这次的生日；第三是毕业缺海那篇，到现在我也没见到海；第四是过去稀里糊涂，二十算是上岸了吧。&lt;br&gt;太晚了，就不多写了。&lt;br&gt;&lt;strong&gt;anyway，goonigh~&lt;/strong&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
      <category term="birthday" scheme="https://asea.fun/tags/birthday/"/>
    
  </entry>
  
  <entry>
    <title>水漫二十</title>
    <link href="https://asea.fun/post/42a48ee3.html"/>
    <id>https://asea.fun/post/42a48ee3.html</id>
    <published>2021-04-28T16:31:04.000Z</published>
    <updated>2021-04-28T16:31:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在生日过后记录些"><a href="#在生日过后记录些" class="headerlink" title="在生日过后记录些"></a>在生日过后记录些</h2><p>前两天忽然想起来《毕业缺海》那篇文章，于是又翻出来看了看，其中大概有一成的东西读来仿佛不属于我了，我知道这个比例会越来越大，但相较于其他篇算性能不错了。一晃而过，毕业到现在，还有一个多月便两年了，刚好是我从一个环境到另一个环境所需要的适应的时间。再多一年就会成为心里永远的壁垒了。<br>农历生日过了十几年了，今年单独抽出来过了阳历生日，410总比317好听些，但是317实在太令人熟悉了，条件反射般的让我激灵。2021年的317，算是我主观意义上真正二十了，这一天极为平淡，上午两大节课，电工技术和机械原理都是再前半段集中注意力了，后面逐渐跑神，就再也没能回过来。下午互换性还算勉强抵抗困意，软件技术还是一如往常。这些事情不重要，所以只需要一笔带过。真正想要记录的有一些，例如：阿弥在我生日这天直播，我把qq飞车打上了星耀，买的拖鞋到了，会用浴花起沫洗头，会在vscode使用qq插件，我妈早上给我了500，奶奶在七点多就给我打了个电话（我到晚上才回过去），我爸发的红包里我和我妈抢到的竟然一模一样（这毕竟是我们母子二人的节日），作业基本搞定，两天后要出去玩一下，衣服洗好，床单更换，枕套更换，我对家的理解慢慢改善，家庭关系愈发融洽（我悟出来的解决方法就是像对待朋友一样对待他们）……<br>最近仿佛是在好起来。<br>仿佛我在阳历生日许下的心愿已经完成一二。<br>那这次生日许个什么愿呢，愿望是不能说出来的，但毕竟我写这些东西的时候，已经二十了，所以还是可以说的对吧？<br>所以，我真的希望，现阶段，转专业可以成功吧，之后便是投入计算机的努力（这是最好的结果，尽管可能性不是很大）。</p><p>再说点关于生日的吧，现在除了家人（大鹅也是家人）基本没人会跟我说生日快乐了。可能会有些失落，是不可控的那种失落。我想起来那个up过二十的时候录vlog了，还是很喜欢那样直抒胸臆的措辞和神态的，至少我做不出来，我还是很喜欢看别人快乐。<br>为什么说水漫二十呢，第一是有点上火喝了很多水；第二是水有时候很平静，就像这次的生日；第三是毕业缺海那篇，到现在我也没见到海；第四是过去稀里糊涂，二十算是上岸了吧。<br>太晚了，就不多写了。<br><strong>anyway，goonigh~</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在生日过后记录些&quot;&gt;&lt;a href=&quot;#在生日过后记录些&quot; class=&quot;headerlink&quot; title=&quot;在生日过后记录些&quot;&gt;&lt;/a&gt;在生日过后记录些&lt;/h2&gt;&lt;p&gt;前两天忽然想起来《毕业缺海》那篇文章，于是又翻出来看了看，其中大概有一成的东西读来仿佛不属于我了，我知道这个比例会越来越大，但相较于其他篇算性能不错了。一晃而过，毕业到现在，还有一个多月便两年了，刚好是我从一个环境到另一个环境所需要的适应的时间。再多一年就会成为心里永远的壁垒了。&lt;br&gt;农历生日过了十几年了，今年单独抽出来过了阳历生日，410总比317好听些，但是317实在太令人熟悉了，条件反射般的让我激灵。2021年的317，算是我主观意义上真正二十了，这一天极为平淡，上午两大节课，电工技术和机械原理都是再前半段集中注意力了，后面逐渐跑神，就再也没能回过来。下午互换性还算勉强抵抗困意，软件技术还是一如往常。这些事情不重要，所以只需要一笔带过。真正想要记录的有一些，例如：阿弥在我生日这天直播，我把qq飞车打上了星耀，买的拖鞋到了，会用浴花起沫洗头，会在vscode使用qq插件，我妈早上给我了500，奶奶在七点多就给我打了个电话（我到晚上才回过去），我爸发的红包里我和我妈抢到的竟然一模一样（这毕竟是我们母子二人的节日），作业基本搞定，两天后要出去玩一下，衣服洗好，床单更换，枕套更换，我对家的理解慢慢改善，家庭关系愈发融洽（我悟出来的解决方法就是像对待朋友一样对待他们）……&lt;br&gt;最近仿佛是在好起来。&lt;br&gt;仿佛我在阳历生日许下的心愿已经完成一二。&lt;br&gt;那这次生日许个什么愿呢，愿望是不能说出来的，但毕竟我写这些东西的时候，已经二十了，所以还是可以说的对吧？&lt;br&gt;所以，我真的希望，现阶段，转专业可以成功吧，之后便是投入计算机的努力（这是最好的结果，尽管可能性不是很大）。&lt;/p&gt;
&lt;p&gt;再说点关于生日的吧，现在除了家人（大鹅也是家人）基本没人会跟我说生日快乐了。可能会有些失落，是不可控的那种失落。我想起来那个up过二十的时候录vlog了，还是很喜欢那样直抒胸臆的措辞和神态的，至少我做不出来，我还是很喜欢看别人快乐。&lt;br&gt;为什么说水漫二十呢，第一是有点上火喝了很多水；第二是水有时候很平静，就像这次的生日；第三是毕业缺海那篇，到现在我也没见到海；第四是过去稀里糊涂，二十算是上岸了吧。&lt;br&gt;太晚了，就不多写了。&lt;br&gt;&lt;strong&gt;anyway，goonigh~&lt;/strong&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
      <category term="birthday" scheme="https://asea.fun/tags/birthday/"/>
    
  </entry>
  
  <entry>
    <title>node学习笔记</title>
    <link href="https://asea.fun/post/129264f1.html"/>
    <id>https://asea.fun/post/129264f1.html</id>
    <published>2021-04-26T13:53:00.000Z</published>
    <updated>2021-04-26T13:53:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node初步学习（后端入门）"><a href="#Node初步学习（后端入门）" class="headerlink" title="Node初步学习（后端入门）"></a>Node初步学习（后端入门）</h1><h2 id="基础入门"><a href="#基础入门" class="headerlink" title="基础入门"></a>基础入门</h2><ol><li>node安装</li><li>node运行js文件<h2 id="模块使用之fs"><a href="#模块使用之fs" class="headerlink" title="模块使用之fs"></a>模块使用之fs</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="comment">// 写文件</span></span><br><span class="line">fs.writeFile(path,data,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 读文件</span></span><br><span class="line">fs.readFile(path,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h2 id="模块使用之http"><a href="#模块使用之http" class="headerlink" title="模块使用之http"></a>模块使用之http</h2><h3 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> server = http.createServer()</span><br><span class="line"><span class="comment">// 绑定事件</span></span><br><span class="line">server.on(<span class="string">&#x27;request&#x27;</span>,<span class="function"><span class="title">funtion</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 根据不同路径返回不同response</span></span><br><span class="line">    <span class="keyword">if</span> (url = <span class="string">&#x27;/index&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res.url)</span><br><span class="line">        <span class="comment">// 需要end结束，不太常用</span></span><br><span class="line">        res.write(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">        res.end</span><br><span class="line">        <span class="comment">// 一般不用write</span></span><br><span class="line">        res.end(<span class="string">&#x27;hhh&#x27;</span>) <span class="comment">// 只能是字符串，可以用json. stringify()</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 绑定端口号，启动服务器</span></span><br><span class="line">server.listen()</span><br></pre></td></tr></table></figure><h3 id="关于content-type"><a href="#关于content-type" class="headerlink" title="关于content-type"></a>关于content-type</h3><p><code>res.setHeader(&#39;Content-Type&#39;,&#39;text/plain;charset-utf-8&#39;)</code><br>具体类型可参照<a href="https://tool.oschina.net/commons">此处链接</a></p><h2 id="引用自己的模块"><a href="#引用自己的模块" class="headerlink" title="引用自己的模块"></a>引用自己的模块</h2><!-- 核心模块os不讲了 --><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 自制模块，需要用到exports对象，设定不同的属性值达到跨文件引用变量目的</span></span><br><span class="line"><span class="built_in">exports</span>.name = <span class="string">&#x27;Doge&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引用模块</span></span><br><span class="line"><span class="keyword">var</span> myModule = <span class="built_in">require</span>(<span class="string">&#x27;./a.js&#x27;</span>) <span class="comment">// 后缀可以省略</span></span><br><span class="line"><span class="built_in">console</span>.log(a.name) <span class="comment">// 输出Dog</span></span><br></pre></td></tr></table></figure><h2 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h2><ol><li>JavaScript Style要求tab两个空格</li><li>一般结尾不加<code>;</code> 某些特殊情况要加（很不常见）</li></ol><h2 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h2><p><strong>art-template</strong><br><code>npm install art-template</code><br><strong>暂时跳过</strong></p><h2 id="渲染模式"><a href="#渲染模式" class="headerlink" title="渲染模式"></a>渲染模式</h2><ul><li>服务端渲染（服务端使用模板引擎）<br>SEO优化</li><li>客户端渲染<br>请求更快，但不利于SEO</li></ul><h2 id="静态资源案例"><a href="#静态资源案例" class="headerlink" title="静态资源案例"></a>静态资源案例</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"></span><br><span class="line">http <span class="comment">//简写方式，默认绑定request</span></span><br><span class="line">  .creatServer(<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    res.end(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  .listen(<span class="number">3000</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;runing&#x27;</span>) </span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node初步学习（后端入门）&quot;&gt;&lt;a href=&quot;#Node初步学习（后端入门）&quot; class=&quot;headerlink&quot; title=&quot;Node初步学习（后端入门）&quot;&gt;&lt;/a&gt;Node初步学习（后端入门）&lt;/h1&gt;&lt;h2 id=&quot;基础入门&quot;&gt;&lt;a href=&quot;#基础入门&quot; class=&quot;headerlink&quot; title=&quot;基础入门&quot;&gt;&lt;/a&gt;基础入门&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;node安装&lt;/li&gt;
&lt;li&gt;node运行js文件&lt;h2 id=&quot;模块使用之fs&quot;&gt;&lt;a href=&quot;#模块使用之fs&quot; class=&quot;headerlink&quot; title=&quot;模块使用之fs&quot;&gt;&lt;/a&gt;模块使用之fs&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fs = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;fs&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 写文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fs.writeFile(path,data,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 读文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fs.readFile(path,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err,data&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;模块使用之http&quot;&gt;&lt;a href=&quot;#模块使用之http&quot; class=&quot;headerlink&quot; title=&quot;模块使用之http&quot;&gt;&lt;/a&gt;模块使用之http&lt;/h2&gt;&lt;h3 id=&quot;基本使用方法&quot;&gt;&lt;a href=&quot;#基本使用方法&quot; class=&quot;headerlink&quot; title=&quot;基本使用方法&quot;&gt;&lt;/a&gt;基本使用方法&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; http = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;http&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; server = http.createServer()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 绑定事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server.on(&lt;span class=&quot;string&quot;&gt;&amp;#x27;request&amp;#x27;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;funtion&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req,res&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 根据不同路径返回不同response&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (url = &lt;span class=&quot;string&quot;&gt;&amp;#x27;/index&amp;#x27;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(res.url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 需要end结束，不太常用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.write(&lt;span class=&quot;string&quot;&gt;&amp;#x27;hello&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 一般不用write&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.end(&lt;span class=&quot;string&quot;&gt;&amp;#x27;hhh&amp;#x27;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 只能是字符串，可以用json. stringify()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 绑定端口号，启动服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server.listen()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;关于content-type&quot;&gt;&lt;a href=&quot;#关于content-type&quot; class=&quot;headerlink&quot; title=&quot;关于content-type&quot;&gt;&lt;/a&gt;关于content-type&lt;/h3&gt;&lt;p&gt;&lt;code&gt;res.setHeader(&amp;#39;Content-Type&amp;#39;,&amp;#39;text/plain;charset-utf-8&amp;#39;)&lt;/code&gt;&lt;br&gt;具体类型可参照&lt;a href=&quot;https://tool.oschina.net/commons&quot;&gt;此处链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;引用自己的模块&quot;&gt;&lt;a href=&quot;#引用自己的模块&quot; class=&quot;headerlink&quot; title=&quot;引用自己的模块&quot;&gt;&lt;/a&gt;引用自己的模块&lt;/h2&gt;&lt;!-- 核心模块os不讲了 --&gt;

&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 自制模块，需要用到exports对象，设定不同的属性值达到跨文件引用变量目的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.name = &lt;span class=&quot;string&quot;&gt;&amp;#x27;Doge&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="notes" scheme="https://asea.fun/tags/notes/"/>
    
      <category term="node" scheme="https://asea.fun/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>node学习笔记</title>
    <link href="https://asea.fun/post/129264f1.html"/>
    <id>https://asea.fun/post/129264f1.html</id>
    <published>2021-04-26T13:53:00.000Z</published>
    <updated>2021-04-26T13:53:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Node初步学习（后端入门）"><a href="#Node初步学习（后端入门）" class="headerlink" title="Node初步学习（后端入门）"></a>Node初步学习（后端入门）</h1><h2 id="基础入门"><a href="#基础入门" class="headerlink" title="基础入门"></a>基础入门</h2><ol><li>node安装</li><li>node运行js文件<h2 id="模块使用之fs"><a href="#模块使用之fs" class="headerlink" title="模块使用之fs"></a>模块使用之fs</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="comment">// 写文件</span></span><br><span class="line">fs.writeFile(path,data,<span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 读文件</span></span><br><span class="line">fs.readFile(path,<span class="function"><span class="keyword">function</span>(<span class="params">err,data</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><h2 id="模块使用之http"><a href="#模块使用之http" class="headerlink" title="模块使用之http"></a>模块使用之http</h2><h3 id="基本使用方法"><a href="#基本使用方法" class="headerlink" title="基本使用方法"></a>基本使用方法</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> server = http.createServer()</span><br><span class="line"><span class="comment">// 绑定事件</span></span><br><span class="line">server.on(<span class="string">&#x27;request&#x27;</span>,<span class="function"><span class="title">funtion</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 根据不同路径返回不同response</span></span><br><span class="line">    <span class="keyword">if</span> (url = <span class="string">&#x27;/index&#x27;</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(res.url)</span><br><span class="line">        <span class="comment">// 需要end结束，不太常用</span></span><br><span class="line">        res.write(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">        res.end</span><br><span class="line">        <span class="comment">// 一般不用write</span></span><br><span class="line">        res.end(<span class="string">&#x27;hhh&#x27;</span>) <span class="comment">// 只能是字符串，可以用json. stringify()</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 绑定端口号，启动服务器</span></span><br><span class="line">server.listen()</span><br></pre></td></tr></table></figure><h3 id="关于content-type"><a href="#关于content-type" class="headerlink" title="关于content-type"></a>关于content-type</h3><p><code>res.setHeader(&#39;Content-Type&#39;,&#39;text/plain;charset-utf-8&#39;)</code><br>具体类型可参照<a href="https://tool.oschina.net/commons">此处链接</a></p><h2 id="引用自己的模块"><a href="#引用自己的模块" class="headerlink" title="引用自己的模块"></a>引用自己的模块</h2><!-- 核心模块os不讲了 --><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 自制模块，需要用到exports对象，设定不同的属性值达到跨文件引用变量目的</span></span><br><span class="line"><span class="built_in">exports</span>.name = <span class="string">&#x27;Doge&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引用模块</span></span><br><span class="line"><span class="keyword">var</span> myModule = <span class="built_in">require</span>(<span class="string">&#x27;./a.js&#x27;</span>) <span class="comment">// 后缀可以省略</span></span><br><span class="line"><span class="built_in">console</span>.log(a.name) <span class="comment">// 输出Dog</span></span><br></pre></td></tr></table></figure><h2 id="代码风格"><a href="#代码风格" class="headerlink" title="代码风格"></a>代码风格</h2><ol><li>JavaScript Style要求tab两个空格</li><li>一般结尾不加<code>;</code> 某些特殊情况要加（很不常见）</li></ol><h2 id="模板引擎"><a href="#模板引擎" class="headerlink" title="模板引擎"></a>模板引擎</h2><p><strong>art-template</strong><br><code>npm install art-template</code><br><strong>暂时跳过</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Node初步学习（后端入门）&quot;&gt;&lt;a href=&quot;#Node初步学习（后端入门）&quot; class=&quot;headerlink&quot; title=&quot;Node初步学习（后端入门）&quot;&gt;&lt;/a&gt;Node初步学习（后端入门）&lt;/h1&gt;&lt;h2 id=&quot;基础入门&quot;&gt;&lt;a href=&quot;#基础入门&quot; class=&quot;headerlink&quot; title=&quot;基础入门&quot;&gt;&lt;/a&gt;基础入门&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;node安装&lt;/li&gt;
&lt;li&gt;node运行js文件&lt;h2 id=&quot;模块使用之fs&quot;&gt;&lt;a href=&quot;#模块使用之fs&quot; class=&quot;headerlink&quot; title=&quot;模块使用之fs&quot;&gt;&lt;/a&gt;模块使用之fs&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fs = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;fs&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 写文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fs.writeFile(path,data,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 读文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fs.readFile(path,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;err,data&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;模块使用之http&quot;&gt;&lt;a href=&quot;#模块使用之http&quot; class=&quot;headerlink&quot; title=&quot;模块使用之http&quot;&gt;&lt;/a&gt;模块使用之http&lt;/h2&gt;&lt;h3 id=&quot;基本使用方法&quot;&gt;&lt;a href=&quot;#基本使用方法&quot; class=&quot;headerlink&quot; title=&quot;基本使用方法&quot;&gt;&lt;/a&gt;基本使用方法&lt;/h3&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; http = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&amp;#x27;http&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; server = http.createServer()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 绑定事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server.on(&lt;span class=&quot;string&quot;&gt;&amp;#x27;request&amp;#x27;&lt;/span&gt;,&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;funtion&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;req,res&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 根据不同路径返回不同response&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (url = &lt;span class=&quot;string&quot;&gt;&amp;#x27;/index&amp;#x27;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(res.url)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 需要end结束，不太常用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.write(&lt;span class=&quot;string&quot;&gt;&amp;#x27;hello&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 一般不用write&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.end(&lt;span class=&quot;string&quot;&gt;&amp;#x27;hhh&amp;#x27;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 只能是字符串，可以用json. stringify()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 绑定端口号，启动服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server.listen()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;关于content-type&quot;&gt;&lt;a href=&quot;#关于content-type&quot; class=&quot;headerlink&quot; title=&quot;关于content-type&quot;&gt;&lt;/a&gt;关于content-type&lt;/h3&gt;&lt;p&gt;&lt;code&gt;res.setHeader(&amp;#39;Content-Type&amp;#39;,&amp;#39;text/plain;charset-utf-8&amp;#39;)&lt;/code&gt;&lt;br&gt;具体类型可参照&lt;a href=&quot;https://tool.oschina.net/commons&quot;&gt;此处链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;引用自己的模块&quot;&gt;&lt;a href=&quot;#引用自己的模块&quot; class=&quot;headerlink&quot; title=&quot;引用自己的模块&quot;&gt;&lt;/a&gt;引用自己的模块&lt;/h2&gt;&lt;!-- 核心模块os不讲了 --&gt;

&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 自制模块，需要用到exports对象，设定不同的属性值达到跨文件引用变量目的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;exports&lt;/span&gt;.name = &lt;span class=&quot;string&quot;&gt;&amp;#x27;Doge&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="notes" scheme="https://asea.fun/tags/notes/"/>
    
      <category term="node" scheme="https://asea.fun/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>我的记忆只有一扇门</title>
    <link href="https://asea.fun/post/7e086bda.html"/>
    <id>https://asea.fun/post/7e086bda.html</id>
    <published>2021-04-17T16:14:20.000Z</published>
    <updated>2021-04-17T16:29:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>我总是在打算干正事的时候发现很多有趣的事情，于是开始陷入对某些旧事的反思。我时常感到我有些笨，我故意起了个“<strong>我的记忆只有一扇门</strong>”这样的标题，看起来能让世俗更有气质。<br>不写东西几近半年，我已经很久没有用文学的头脑去思考问题了，随之而来的，我丢掉了很多独特的情感，包括对某种<strong>亲情的憎恶</strong>、<strong>爱情的崇尚</strong>、<strong>世俗的感叹</strong>。我看过去的我就像是秋天的虫子，四足渐僵。<br>我感到很遗憾，在忘记某本书是谁送的时候：<strong>梦里有人告诉我说，我看好你，你很棒的，我也不再多夸你了，你受到的称赞一定不会少。</strong>但是都很飘渺，就在身边绕来绕去，半径越来越大。这真令人遗憾，我在摆脱一种生活的同时，也摆脱掉了无数珍宝，甚至是我多年前唯一的宝藏。而我又在不断挖掘新的宝藏，这然我感到充实，可我每当停下来的时候却又很失落，我正处于上一代货币被淘汰，而无处兑换新的货币的时候。哪些财富离我而去，同时对我嗤之以鼻。<br>记忆只有一扇门，要门往里进，要么往外出，我发现我印在瓶子上的话就像是个咒，我深知多年以前的担忧，却毫无办法，我活成了另一个样子：<strong>过去和未来不兼得，我忘了回忆过去，也不会想往未来。</strong><br>但是当我停下来的时候，我又有一种感受，那就是我拥有了前前后后的所有。<br>我几分钟前打算联系一位好友，当我打了三行字后才盯着它的名字看了半天，我越看越陌生，直到我一点也认不出它。我大概明白，我们正在互相远离。我也不知道很多过去怎么和现下链接。<br>所以只好删除所有文字，<strong>再把记忆之门开到另一个方向。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我总是在打算干正事的时候发现很多有趣的事情，于是开始陷入对某些旧事的反思。我时常感到我有些笨，我故意起了个“&lt;strong&gt;我的记忆只有一扇门&lt;/strong&gt;”这样的标题，看起来能让世俗更有气质。&lt;br&gt;不写东西几近半年，我已经很久没有用文学的头脑去思考问题了，随之而来的，我丢掉了很多独特的情感，包括对某种&lt;strong&gt;亲情的憎恶&lt;/strong&gt;、&lt;strong&gt;爱情的崇尚&lt;/strong&gt;、&lt;strong&gt;世俗的感叹&lt;/strong&gt;。我看过去的我就像是秋天的虫子，四足渐僵。&lt;br&gt;我感到很遗憾，在忘记某本书是谁送的时候：&lt;strong&gt;梦里有人告诉我说，我看好你，你很棒的，我也不再多夸你了，你受到的称赞一定不会少。&lt;/strong&gt;但是都很飘渺，就在身边绕来绕去，半径越来越大。这真令人遗憾，我在摆脱一种生活的同时，也摆脱掉了无数珍宝，甚至是我多年前唯一的宝藏。而我又在不断挖掘新的宝藏，这然我感到充实，可我每当停下来的时候却又很失落，我正处于上一代货币被淘汰，而无处兑换新的货币的时候。哪些财富离我而去，同时对我嗤之以鼻。&lt;br&gt;记忆只有一扇门，要门往里进，要么往外出，我发现我印在瓶子上的话就像是个咒，我深知多年以前的担忧，却毫无办法，我活成了另一个样子：&lt;strong&gt;过去和未来不兼得，我忘了回忆过去，也不会想往未来。&lt;/strong&gt;&lt;br&gt;但是当我停下来的时候，我又有一种感受，那就是我拥有了前前后后的所有。&lt;br&gt;我几分钟前打算联系一位好友，当我打了三行字后才盯着它的名字看了半天，我越看越陌生，直到我一点也认不出它。我大概明白，我们正在互相远离。我也不知道很多过去怎么和现下链接。&lt;br&gt;所以只好删除所有文字，&lt;strong&gt;再把记忆之门开到另一个方向。&lt;/strong&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="文学" scheme="https://asea.fun/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="literature" scheme="https://asea.fun/tags/literature/"/>
    
  </entry>
  
  <entry>
    <title>electron学习笔记</title>
    <link href="https://asea.fun/post/5f7056f2.html"/>
    <id>https://asea.fun/post/5f7056f2.html</id>
    <published>2021-04-14T14:59:41.000Z</published>
    <updated>2021-04-17T16:13:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记录一下学习electron的坑"><a href="#记录一下学习electron的坑" class="headerlink" title="记录一下学习electron的坑"></a>记录一下学习electron的坑</h1><ol><li>require is not defined<br> 在12版本往后，同时设置<code>nodeIntegration: true</code>及<code>contextIsolation: false</code>解决该问题！</li><li>cannot read property ‘BrowserWindow’ of undefined<br> 在原有的基础上配置<code>enableRemoteModule:true</code></li><li>打包<br> <code>electron-packager . HelloWorld --win --out ../HelloWorldApp --arch=x64 --electron-ersion=1.0.0 --electron-version=12.0.4</code><br> 貌似下载下来一个包要放到哪里来着。。。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;记录一下学习electron的坑&quot;&gt;&lt;a href=&quot;#记录一下学习electron的坑&quot; class=&quot;headerlink&quot; title=&quot;记录一下学习electron的坑&quot;&gt;&lt;/a&gt;记录一下学习electron的坑&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;require is not defined&lt;br&gt; 在12版本往后，同时设置&lt;code&gt;nodeIntegration: true&lt;/code&gt;及&lt;code&gt;contextIsolation: false&lt;/code&gt;解决该问题！&lt;/li&gt;
&lt;li&gt;cannot read property ‘BrowserWindow’ of undefined&lt;br&gt; 在原有的基础上配置&lt;code&gt;enableRemoteModule:true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;打包&lt;br&gt; &lt;code&gt;electron-packager . HelloWorld --win --out ../HelloWorldApp --arch=x64 --electron-ersion=1.0.0 --electron-version=12.0.4&lt;/code&gt;&lt;br&gt; 貌似下载下来一个包要放到哪里来着。。。&lt;/li&gt;
&lt;/ol&gt;

    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="notes" scheme="https://asea.fun/tags/notes/"/>
    
      <category term="electron" scheme="https://asea.fun/tags/electron/"/>
    
  </entry>
  
  <entry>
    <title>PHP学习笔记</title>
    <link href="https://asea.fun/post/55d182ea.html"/>
    <id>https://asea.fun/post/55d182ea.html</id>
    <published>2021-04-13T04:18:56.000Z</published>
    <updated>2021-04-13T08:47:11.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>以下是我最近学习php的笔记，主要记录自认为会遗忘的知识点</p></blockquote><h1 id="初识php"><a href="#初识php" class="headerlink" title="初识php"></a>初识php</h1><p>php是一种动态网站开发的脚本语言，有交互性，有数据的传递。</p><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>标准语法<code>&lt;?php php代码 ?&gt;</code></li><li>最后一句php语言可以不带结束符<code>;</code></li><li>最后可以不写<code>?&gt;</code>，这样就可以避免读取最后的空行</li><li>行注释<code>//</code>或<code>#</code></li><li>块注释<code>/* */</code></li></ol><h2 id="开始语法"><a href="#开始语法" class="headerlink" title="开始语法"></a>开始语法</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ol><li>声明<br><code>$var1;</code>或直接赋值<code>$var2 = 1;</code></li><li>删除变量<br><code>unset($var1);</code></li><li>命名规则<ul><li>以$开始</li><li>由字母、数字、下划线组成，但不能以数字开始</li><li>支持中文变量（很不建议你懂的）</li></ul></li><li>预定义变量（均为数组类型）<ul><li>$_GET: 获取所有表单以get方式提交的数据</li><li>$_POST: 提交的数据都会保存在此</li><li>$_REQUEST: GET和POST提交的都会保存</li><li>$GLOBALS: PHP钟所有的全局变量</li><li>$_SERVER: 服务器信息</li><li>$_SESSION: session会话数据</li><li>$_COOKIE: cookie会话数据</li><li>$_ENV: 环境信息</li><li>$_FILES: 用户上传的文件信息</li></ul></li><li>可变变量<br>如果一个变量保存的值刚好是另一个变量的名字，那么可以通过访问一个变量得到另一个变量的值。<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$a &#x3D; &#39;b&#39;</span><br><span class="line">$b &#x3D; &#39;bb&#39;</span><br><span class="line">echo $$A</span><br></pre></td></tr></table></figure></li><li>变量赋值<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$b &#x3D; 1</span><br><span class="line">$a &#x3D; $b</span><br><span class="line">$a &#x3D; 2 </span><br><span class="line">echo $a，$b</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$b &#x3D; 1</span><br><span class="line">$a &#x3D; &amp;$b &#x2F;&#x2F;引用赋值</span><br><span class="line">$a &#x3D; 2 </span><br><span class="line">echo $a，$b</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3></li><li>定义常量<ul><li>函数定义 <code>define(&#39;PI&#39;,3.14)</code></li><li>const定义 <code>const PI = 3.14</code></li></ul></li><li>命名规则<ul><li>不需要$</li><li>名字由数字、字母、下划线组成但不能由数字开头</li><li>通常常量都是大写字母</li><li>命名规则其实比较松，比如其实可以用一些特殊字符，但标准下不这样使用 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">define(&#39;-_-&#39;,3); &#x2F;&#x2F;只能这样命名</span><br><span class="line">const -_-,3; &#x2F;&#x2F;这是错误的</span><br></pre></td></tr></table></figure></li><li>注意细节<ul><li>define和const定义的常量是有区别的：访问权限有区别</li><li>常量名不区分大小写，但是可以区分（？？？）</li></ul></li></ul></li><li>使用形式<br><code>echo PI;</code><ul><li>特殊常量的使用形式 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo -_-; &#x2F;&#x2F;X</span><br><span class="line">echo constant(&#39;-_-&#39;); &#x2F;&#x2F;√</span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;以下是我最近学习php的笔记，主要记录自认为会遗忘的知识点&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;初识php&quot;&gt;&lt;a href=&quot;#初识php&quot; class=&quot;headerlink&quot; title=&quot;初识php&quot;&gt;&lt;/a&gt;初识php&lt;/h1&gt;&lt;p&gt;php是一种动态网站开发的脚本语言，有交互性，有数据的传递。&lt;/p&gt;
&lt;h1 id=&quot;基本语法&quot;&gt;&lt;a href=&quot;#基本语法&quot; class=&quot;headerlink&quot; title=&quot;基本语法&quot;&gt;&lt;/a&gt;基本语法&lt;/h1&gt;&lt;h2 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;标准语法&lt;code&gt;&amp;lt;?php php代码 ?&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;最后一句php语言可以不带结束符&lt;code&gt;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;最后可以不写&lt;code&gt;?&amp;gt;&lt;/code&gt;，这样就可以避免读取最后的空行&lt;/li&gt;
&lt;li&gt;行注释&lt;code&gt;//&lt;/code&gt;或&lt;code&gt;#&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;块注释&lt;code&gt;/* */&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;开始语法&quot;&gt;&lt;a href=&quot;#开始语法&quot; class=&quot;headerlink&quot; title=&quot;开始语法&quot;&gt;&lt;/a&gt;开始语法&lt;/h2&gt;&lt;h3 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;声明&lt;br&gt;&lt;code&gt;$var1;&lt;/code&gt;或直接赋值&lt;code&gt;$var2 = 1;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除变量&lt;br&gt;&lt;code&gt;unset($var1);&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;命名规则&lt;ul&gt;
&lt;li&gt;以$开始&lt;/li&gt;
&lt;li&gt;由字母、数字、下划线组成，但不能以数字开始&lt;/li&gt;
&lt;li&gt;支持中文变量（很不建议你懂的）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;预定义变量（均为数组类型）&lt;ul&gt;
&lt;li&gt;$_GET: 获取所有表单以get方式提交的数据&lt;/li&gt;
&lt;li&gt;$_POST: 提交的数据都会保存在此&lt;/li&gt;
&lt;li&gt;$_REQUEST: GET和POST提交的都会保存&lt;/li&gt;
&lt;li&gt;$GLOBALS: PHP钟所有的全局变量&lt;/li&gt;
&lt;li&gt;$_SERVER: 服务器信息&lt;/li&gt;
&lt;li&gt;$_SESSION: session会话数据&lt;/li&gt;
&lt;li&gt;$_COOKIE: cookie会话数据&lt;/li&gt;
&lt;li&gt;$_ENV: 环境信息&lt;/li&gt;
&lt;li&gt;$_FILES: 用户上传的文件信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;可变变量&lt;br&gt;如果一个变量保存的值刚好是另一个变量的名字，那么可以通过访问一个变量得到另一个变量的值。&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$a &amp;#x3D; &amp;#39;b&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$b &amp;#x3D; &amp;#39;bb&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $$A&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;变量赋值&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$b &amp;#x3D; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$a &amp;#x3D; $b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$a &amp;#x3D; 2 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $a，$b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$b &amp;#x3D; 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$a &amp;#x3D; &amp;amp;$b &amp;#x2F;&amp;#x2F;引用赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$a &amp;#x3D; 2 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $a，$b&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;常量&quot;&gt;&lt;a href=&quot;#常量&quot; class=&quot;headerlink&quot; title=&quot;常量&quot;&gt;&lt;/a&gt;常量&lt;/h3&gt;&lt;/li&gt;
&lt;li&gt;定义常量&lt;ul&gt;
&lt;li&gt;函数定义 &lt;code&gt;define(&amp;#39;PI&amp;#39;,3.14)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;const定义 &lt;code&gt;const PI = 3.14&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;命名规则&lt;ul&gt;
&lt;li&gt;不需要$&lt;/li&gt;
&lt;li&gt;名字由数字、字母、下划线组成但不能由数字开头&lt;/li&gt;
&lt;li&gt;通常常量都是大写字母&lt;/li&gt;
&lt;li&gt;命名规则其实比较松，比如其实可以用一些特殊字符，但标准下不这样使用 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;define(&amp;#39;-_-&amp;#39;,3); &amp;#x2F;&amp;#x2F;只能这样命名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const -_-,3; &amp;#x2F;&amp;#x2F;这是错误的&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;注意细节&lt;ul&gt;
&lt;li&gt;define和const定义的常量是有区别的：访问权限有区别&lt;/li&gt;
&lt;li&gt;常量名不区分大小写，但是可以区分（？？？）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用形式&lt;br&gt;&lt;code&gt;echo PI;&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;特殊常量的使用形式 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;echo -_-; &amp;#x2F;&amp;#x2F;X&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo constant(&amp;#39;-_-&amp;#39;); &amp;#x2F;&amp;#x2F;√&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="notes" scheme="https://asea.fun/tags/notes/"/>
    
      <category term="php" scheme="https://asea.fun/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>PHP学习笔记</title>
    <link href="https://asea.fun/post/55d182ea.html"/>
    <id>https://asea.fun/post/55d182ea.html</id>
    <published>2021-04-13T04:18:56.000Z</published>
    <updated>2021-04-13T09:41:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>视频：<a href="https://www.bilibili.com/video/BV18x411H7qD?p=3">https://www.bilibili.com/video/BV18x411H7qD?p=3</a></p><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><p>Web分为两类：静态网站和动态网站。流程:浏览器发起访问-&gt;DNS解析域名-&gt;服务器电脑-&gt;服务软件</p><h5 id="1、静态网站访问原理："><a href="#1、静态网站访问原理：" class="headerlink" title="1、静态网站访问原理："></a>1、静态网站访问原理：</h5><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200726195840264.png" alt="image-20200726195840264"></p><p><strong>必备工具</strong>：1、有两台电脑，PC（个人电脑），里面需要有浏览器；另外一台为服务器（需要有服务软件，假设为APACHE）,软件没有数据，故需在里面添加文件夹（准备访问的文件/网页）2、下面蓝线代表两个在同一个互联网下。</p><p><strong>访问流程</strong>：1、在浏览器中需输入URL（uniformed resource location，统一资源定位，即互联网的绝对路径）；2、第一部需要经过URL的解析（DNS，DNS内部包含本地DNS与网络DNS，，访问本地DNS无需通过网络，可提高效率。如果本地DNS无法转化IP，就需要网络DNS）。3、DNS将转换后的IP地址返回给浏览器。4、浏览器通过IP地址找到服务器。5、（虽然找到了服务器，但服务器里面资源很多，如何找自己想要的APACH？）这就需要利用端口，APACHE的端口为80。6、访问APACHE后，即可找到要访问的内容（IP地址后的/index.html也称为URI（uniformed resource identify，统一资源标志。目标机器上相对某个文件夹的相对路径，，，注/即为根目录，相对根目录所以其为相对路径））.7、Apache根据URI读取文件，读取文件的内容（注意只是读取）。8、Apache读取文件后，返回结果。9、浏览器看之前，需要经过浏览器解析，才可展示给用户。（所有人访问的时候，都访问的一样的index文件，若要改变显示的信息，就需要改变index，比较麻烦）</p><h5 id="2、动态网站访问"><a href="#2、动态网站访问" class="headerlink" title="2、动态网站访问"></a>2、动态网站访问</h5><p>区别：相对静态网站访问多了几个步骤：需要服务器端解析；需要数据库</p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200726202647377.png" alt="image-20200726202647377"></p><p>在访问内容时，Apache不能识别PHP（只能识别html），需通过PHP引擎读取PHP代码。读取PHP代码之后需要进行解析，解析过程中可能需要数据库。PHP引擎通过数据库，找到内容以后再返回给Apache。（注意，PHP引擎得到的内容是PHP代码，但交给Apache的是HTML内容，，，因为浏览器只能解析html文件）</p><h5 id="3、C-S、B-S"><a href="#3、C-S、B-S" class="headerlink" title="3、C/S、B/S"></a>3、C/S、B/S</h5><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200726203705834.png" alt="image-20200726203705834" style="zoom: 67%;"><p><strong>软件设计结构</strong>：C/S、B/S</p><p>C/S：Client客户端/Server服务端，用户需要安装客户端产品才能访问服务器，且只能访问一种软件（自己的）</p><p>B/S：Browser浏览器/Server服务端，用户只需要安装浏览器，就可以访问所有的服务器（B/S架构服务）。</p><h5 id="4、MySQL访问流程"><a href="#4、MySQL访问流程" class="headerlink" title="4、MySQL访问流程"></a>4、MySQL访问流程</h5><p>Mysql是一款C/S架构的软件，需要通过客户端来访问服务端</p><p><strong>运行：</strong>1、启用MySQL客户端：mysqi.exe</p><p>2、mysql.exe通过cmd运行（安装配置环境变量后可这样运行）</p><p><strong>操作：</strong>由于qq服务器不在自己的电脑（即客户端与服务器可分离），故MySQL客户端访问服务器需进行寻找匹配：连接认证</p><p>a、连接：IP端口和确认。。。如果是本地，均可省略</p><p>命令：<em>-h 主机地址</em>      <em>-hlocalhost（或IP）</em>  localhost是主机名     <em>-P 端口 -P3306</em>（MySQL服务器的端口默认是3306）</p><p>b、认证：通过用户名和密码进入服务器。</p><p><em>-u 用户名     -uroot*（不可省略，匿名用户除外）      *-p 密码    -proot</em></p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200726211039168.png" alt="image-20200726211039168"></p><p><strong>退出命令行：</strong>\q</p><p><strong>注意：</strong>通常连接认证的时候不建议密码明文，可在输入-p之后回车，系统会再次让输入密码，此时为密文。</p><h5 id="5、PHP连接MySQL数据库"><a href="#5、PHP连接MySQL数据库" class="headerlink" title="5、PHP连接MySQL数据库"></a>5、PHP连接MySQL数据库</h5><p>PHP本身不具备操作MySQL数据库的能力，需要借助MySQL扩展来实现。</p><p>1、PHP加载MySQL扩展：php.ini文件中。（不要用记事本打开）</p><p>2、PHP中所有扩展都是在ext的文件夹中，需要指定扩展所在路径：extension_dir。</p><p>3、php.ini已经被Apache重载，故需要重启才可。</p><h5 id="6、设定系统时区"><a href="#6、设定系统时区" class="headerlink" title="6、设定系统时区"></a>6、设定系统时区</h5><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200726214149458.png" alt="image-20200726214149458"></p><h5 id="7、配置虚拟主机"><a href="#7、配置虚拟主机" class="headerlink" title="7、配置虚拟主机"></a>7、配置虚拟主机</h5><p>一台服务器若只能部署一个网站，则非常浪费。故需通过其他渠道实现一台主机上部署多个网站。</p><p><strong>虚拟主机：</strong>Virtual machine，并不存在的主机，但可提供真实主机所实现的功能。虚拟主机是将计算机中不同的文件夹进行不同的命名，然后可实现让服务器（Apache）根据用户的需求从不同的文件夹（网站）中读取不同的内容。</p><p><strong>分类：</strong>在Apache中，可将虚拟主机划分为两类</p><p>1、基于IP的虚拟主机，一台电脑上有多个IP，每个IP对应一个网站。</p><p>原理：电脑默认只有一个IP，因为通常只有一个网卡，但有的电脑可配置多个网卡，每个网卡可绑定一个IP地址。</p><p>2、基于域名的虚拟主机：一台主机只有一个IP，但IP下课制作多个网站，但需给每个网站不同的名字。</p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h5 id="初步语法"><a href="#初步语法" class="headerlink" title="初步语法"></a>初步语法</h5><p>PHP是一种运行在服务器端的脚本语言，可以嵌入到HTML中。（HTML是通过浏览器解析，PHP是通过PHP引擎解析,那么嵌入到里面以后如何区分什么时候通过什么来解析？）</p><p><strong>PHP代码标记</strong>：可通过多种标记来区分PHP脚本</p><p>ASP标记  &lt;% php 代码 %&gt;；    短标记  <? Php 代码 ?>    以上两种基本弃用，如使用，需在配置文件中开启</p><p>脚本标记 ：也不经常用</p><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200726215627740.png" alt="image-20200726215627740" style="zoom:67%;"><p>标准标记：</p><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200726215718187.png" alt="image-20200726215718187" style="zoom:67%;"><p><strong>PHP注释：</strong>行注释：//（双斜杠）或#          块注释：/*     */</p><p><strong>PHP语句分隔符：</strong></p><p>1、在PHP中，代码以行为单位，系统需要通过判断行的结束，通常都用；表示结束。</p><p>注注注：PHP中标记结束符?&gt;有自带语句结束符的效果，最后一行PHP代码可以没有语句结束符。</p><p>2、PHP中代码的书写并不是全嵌入到HTML中，而是单独存在，所以可以不用标记结束符?&gt;</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>1、变量是用来存储数据的；                2、变量是存在名字的；</p><p>3、变量是通过名字访问数据的；        4、变量的数据是可以改变的。</p><h5 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h5><p>1、定义：在系统中增加对应的变量名字（在内存中开发一块地）</p><p>2、赋值：将数据赋值给变量（在定义时直接初始化）</p><p>3、可通过变量名访问数据</p><p>4、变量可从内存中删除</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义时不需要关键字，但必须使用$符号</span></span><br><span class="line">$var1;</span><br><span class="line">$var2 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">echo</span> $var2;   <span class="comment">// 访问变量，通过变量名找到数据，并显示</span></span><br><span class="line">$var2 = <span class="number">2</span>;        <span class="comment">// 修改变量</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr/&gt;&#x27;</span>,$var2;    <span class="comment">// hr/“ 为下划线，分隔符</span></span><br><span class="line"><span class="keyword">unset</span>($var2); <span class="comment">// 删除变量，从内存中剔除 </span></span><br><span class="line"><span class="keyword">echo</span> $var2;   <span class="comment">// 此时会报错，因为不存在变量</span></span><br></pre></td></tr></table></figure><h5 id="变量命名规则"><a href="#变量命名规则" class="headerlink" title="变量命名规则"></a>变量命名规则</h5><p>1、变量名字必须以”$”开头；</p><p>2、变量名可由数字、字母、下划线命名，但必须以字母和下划线开头</p><p>3、允许中文变量；</p><h5 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h5><p>即提前定义的变量，由系统定义的变量，存储许多要用到的数据（预定义变量都是数组）。</p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200727081937045.png" alt="image-20200727081937045"></p><h5 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h5><p>如果一个变量保存的值刚好是另外一个变量的名字，则可直接通过访问一个变量得到另外一个变量的值：但需在变量前多加一个$符号</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$a = <span class="string">&#x27;b&#x27;</span>;    <span class="comment">// a变量的内容正好是b变量的名称，故称a为可变变量</span></span><br><span class="line">$b = <span class="string">&#x27;bb&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> $$a;    <span class="comment">// 使用时需加一个$符号</span></span><br></pre></td></tr></table></figure><h5 id="变量传值"><a href="#变量传值" class="headerlink" title="变量传值"></a>变量传值</h5><p>将一个变量赋值给另一个变量：值传递、引用传递</p><p>值传递：将变量保存的值复制一份，并将该值给另外一个变量保存(两个变量无关系)</p><p>引用传递：将变量保存值所在的内存地址传递给另外一个变量，两个变量同指一块内存（名字不一样而已）。</p><h6 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h6><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200727083357714.png" alt="image-20200727083357714"></p><p>注：c++中，栈区由编译器自动释放，存储局部变量和函数参数；代码区存放函数的二进制代码，由操作系统管理；全局区存放全局变量、静态变量、常量；堆区由程序员分配释放。</p><h6 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 值传递</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// 2.1 执行此行，在栈区开辟一块内存存储$a，在数据段中开辟一块内存保存值1。然后将1所在位置赋值给a变量</span></span><br><span class="line">$a = <span class="number">1</span>;   </span><br><span class="line"><span class="comment">// 2.2 栈区开辟存储$b；发现是赋值运算，故会取出$a的值，</span></span><br><span class="line"><span class="comment">// 并在数据段重新开辟一块内存并保存，且再把新开辟地址赋值给栈区的变量b</span></span><br><span class="line">$b = $a;   <span class="comment">// 值传递</span></span><br><span class="line"><span class="comment">// 2.3 执行该行</span></span><br><span class="line">$b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> $a,$b;</span><br></pre></td></tr></table></figure><p>讲解运行步骤：</p><p>1、代码装载：从脚本文件中将代码读取出来，进行编译，将编译结果存放到代码段（二进制）。</p><p>2、代码执行：从代码段中一行一行执行代码。</p><p>3、脚本执行结束：系统会回收所有内存（栈区、代码区）：因为数据段与栈区有关系，回收栈后，数据段的内容无意义，相当于回收。</p><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200727085308489.png" alt="image-20200727085308489" style="zoom: 67%;"><h6 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引用传递</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.1 执行此行，在栈区开辟一块内存存储$a，在数据段中开辟一块内存保存值1。然后将1所在位置赋值给a变量</span></span><br><span class="line">$a = <span class="number">1</span>;   </span><br><span class="line"><span class="comment">// 2.2 栈区开辟存储$b；发现是引用运算，故会取出$a的地址，并将该地址给栈区的变量b</span></span><br><span class="line">$b = $a;   <span class="comment">// 值传递</span></span><br><span class="line"><span class="comment">// 2.3 执行该行</span></span><br><span class="line">$b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> $a,$b;</span><br></pre></td></tr></table></figure><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200727091111294.png" alt="image-20200727091111294"></p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量与变量一样，均是用来保存数据的。</p><h5 id="常量的基本概念"><a href="#常量的基本概念" class="headerlink" title="常量的基本概念"></a>常量的基本概念</h5><p>const/constant:是在程序运行中，不可改变的量（数据）；常量一旦定义，通常不可更改。</p><h5 id="常量定义的形式"><a href="#常量定义的形式" class="headerlink" title="常量定义的形式"></a>常量定义的形式</h5><h6 id="定义方式"><a href="#定义方式" class="headerlink" title="定义方式"></a>定义方式</h6><p>1、使用定义常量的函数：define（’常量名’,常量值）——类似于c++的 #define</p><p>2、const</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 使用函数定义常量</span></span><br><span class="line">define(<span class="string">&#x27;PI&#x27;</span>,<span class="number">3.1415</span>);   <span class="comment">// 注意此处与c++不同，#define 为预处理命令，宏定义，无需加；。。</span></span><br><span class="line"><span class="comment">// 使用const关键字定义</span></span><br><span class="line"><span class="keyword">const</span> PI1 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义特殊常量</span></span><br><span class="line">define(<span class="string">&#x27;^-^&#x27;</span>,<span class="string">&#x27;smile&#x27;</span>);</span><br><span class="line"><span class="comment">// const ^-^   // 报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 访问常量</span></span><br><span class="line"><span class="keyword">echo</span> PI1;</span><br><span class="line"><span class="comment">// echo ^-^   // 报错</span></span><br><span class="line">constant(<span class="string">&#x27;^-^&#x27;</span>);  <span class="comment">// 特殊常量的访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 系统常量</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr/&gt;&#x27;</span>,PHP_VERSION,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>,PHP_INI_SIZE,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>,PHP_INI_MAX;   <span class="comment">// 有符号整形</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 魔术常量</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr/&gt;&#x27;</span>,<span class="keyword">__DIR__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>,<span class="keyword">__FILE__</span>,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>,<span class="keyword">__LINE__</span>; </span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">__LINE__</span>;  <span class="comment">// 输出的行数会变</span></span><br></pre></td></tr></table></figure><h6 id="常量命名规则："><a href="#常量命名规则：" class="headerlink" title="常量命名规则："></a>常量命名规则：</h6><p>1、常量不需要使用”$”符号，一旦使用被认为是变量</p><p>2、变量名可由数字、字母、下划线命名，但必须以字母和下划线开头（const定义）</p><p>3、常量的名字通常是以大写字母为主（与变量以示区别）</p><p>4、变量命名的规则比变量要松散，可以使用一些特殊字符（define函数）</p><p>5、变量通常不区分大小写，但可以区分（define函数的第三个参数）</p><h5 id="系统常量"><a href="#系统常量" class="headerlink" title="系统常量"></a>系统常量</h5><p>魔术常量：由双下划线+常量名+双下划线组成，其值会随着环境变化而变化，用户无法改变。</p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200727094945925.png" alt="image-20200727094945925"></p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>数据类型：data type，在PHP中指的是数据本身的类型，而不是变量的类型。PHP是一种弱类型语言，变量本身没有数据类型。</p><h5 id="PHP八大数据类型"><a href="#PHP八大数据类型" class="headerlink" title="PHP八大数据类型"></a>PHP八大数据类型</h5><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200727095933827.png" alt="image-20200727095933827"> </p><h5 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h5><p>很多情况需要指定数据类型，需要将外部数据类型（当前PHP获得的数据）转换成目标数据类型。</p><h6 id="两种转化方式："><a href="#两种转化方式：" class="headerlink" title="两种转化方式："></a>两种转化方式：</h6><p>1、自动转化：系统根据自己的需求判断，自己转化（用的较多、但效率较低）。</p><p>2、强制转换（手动）：在变量之前增加一个()，并在括号里面写上对于的类型，其中NULL特殊，需用unset。</p><h6 id="转换说明："><a href="#转换说明：" class="headerlink" title="转换说明："></a>转换说明：</h6><p>1、以字母开头的字符串，永远为0；</p><p>2、以数字开头的字符串，取到碰到字符串为止。（不会同时包含两个小数点）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 数据类型</span></span><br><span class="line"><span class="comment">// 创建数据</span></span><br><span class="line">$a = <span class="string">&#x27;abcd1.1.1&#x27;</span>;</span><br><span class="line">$b = <span class="string">&#x27;1.1.1abc&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动转换。算术运算，系统先转化为数值类型，然后运算</span></span><br><span class="line"><span class="keyword">echo</span> $a+$b;  <span class="comment">//   结果为1.1（0+1.1）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 强制转换</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&#x27;</span>,(<span class="keyword">float</span>)$a,(<span class="keyword">float</span>)$b;  <span class="comment">// 01.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 类型判断</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr/&gt;&#x27;</span>;</span><br><span class="line">var_dump(is_int($a));         <span class="comment">// bool(FALSE)</span></span><br><span class="line">var_dump(is_string($a));      <span class="comment">// bool(TRUE)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取数据类型</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;hr/&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> gettype($a);    <span class="comment">// string（虽然前面强制转换了，但并未改变本身）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置类型</span></span><br><span class="line"><span class="comment">// var_dump 输出展示展示代码内容，结构与类型。该函数作可以窥探所有内容的类型，以及内部信息</span></span><br><span class="line">var_dump(settype($b,<span class="string">&#x27;int&#x27;</span>));    <span class="comment">// 先将字符串转换为int型，转换成功返回true，var_dump判断是否为bool型，故显示                                 bool（true）</span></span><br><span class="line"><span class="keyword">echo</span> gettype($b),$b;     <span class="comment">// interger1</span></span><br></pre></td></tr></table></figure><h5 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">十进制转换二进制-----&gt;除以2</span></span><br><span class="line"><span class="comment">10  1010  注：不管结果ruhr，均需补足32位：00000000 00000000 00000000 00001010</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// php中提供了很多函数进行转换：</span></span><br><span class="line"><span class="comment">// Decbin():十进制转二进制</span></span><br><span class="line">var_dump(decbin(<span class="number">107</span>));     <span class="comment">// 结果：string(7) &quot;1101011&quot;</span></span><br><span class="line"><span class="comment">// 同理，还有Decoct():十进制转八进制</span></span><br><span class="line"><span class="comment">// Dechex():十进制转十六进制</span></span><br><span class="line"><span class="comment">// Bindec():二进制转十进制</span></span><br><span class="line"></span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h5 id="浮点数类型"><a href="#浮点数类型" class="headerlink" title="浮点数类型"></a>浮点数类型</h5><p>问：为什么浮点数和整型均占用四个字节，为什么比整型表示的范围大？</p><p>整型数据的32位均通过*2转化为十进制。而浮点型中，前八位的后七位为指数，所以表示的范围要大。</p><p>另，实际使用时，尽量不用浮点型数字做精确判断，且计算机中凡是小数基本上均不准确。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 浮点数的定义</span></span><br><span class="line">$f1 = <span class="number">1.23</span>;</span><br><span class="line">$f2 = <span class="number">1.23e10</span>;</span><br><span class="line">$f3 = PHP_INT_MAX+<span class="number">1</span>;   <span class="comment">// 若整型超过自身存储的大小之后会自动改为浮点型存储</span></span><br><span class="line"></span><br><span class="line">var_dump($f1,$f2,$f3);</span><br><span class="line"><span class="comment">// 结果：float(1.23)float(1.2300000000) float(214748348)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 浮点数判断</span></span><br><span class="line">$f4 = <span class="number">0.7</span>;</span><br><span class="line">$f5 = <span class="number">2.1</span>;</span><br><span class="line">$f6 = $f5/<span class="number">3</span>;</span><br><span class="line">var_dump($f6 == $f4);      <span class="comment">// 结果：bool(false),,因此其不能进行精确判断</span></span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 运算符：是一种将数据进行运算的特殊符号，在PHP中一共有十多种运算符。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 算术运算符   +-*/%</span></span><br><span class="line"><span class="comment">// 比较运算符   &gt; &gt;= &lt; &lt;= ==(数据大小相同即可，无需考虑数据数据类型) != ===(全等于，大小及数据类型均等) !==</span></span><br><span class="line">$a = <span class="string">&#x27;123&#x27;</span>;  <span class="comment">// 字符串</span></span><br><span class="line">$b = <span class="number">123</span>;  <span class="comment">// 整型</span></span><br><span class="line">var_dump($a == $b);   <span class="comment">// 结果： bool(true)</span></span><br><span class="line"></span><br><span class="line">var_dump($a === $b);   <span class="comment">// 结果： bool(false)   不全等于</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 逻辑运算符 &amp;&amp;(左边条件与右边条件同时成立) ||(有一个满足即可) !(取反)</span></span><br><span class="line">$c = <span class="string">&#x27;weekend&#x27;</span>;</span><br><span class="line">$d = <span class="string">&#x27;goods&#x27;</span>;</span><br><span class="line"></span><br><span class="line">var_dump($c == <span class="string">&#x27;weekend&#x27;</span> &amp;&amp; $d == <span class="string">&#x27;good&#x27;</span>);   <span class="comment">// bool(false)</span></span><br><span class="line">var_dump($c == <span class="string">&#x27;weekend&#x27;</span> &amp;&amp; $d == <span class="string">&#x27;good&#x27;</span>);   <span class="comment">// bool(true)</span></span><br><span class="line">var_dump(!($c == good);   <span class="comment">// bool(true)</span></span><br><span class="line">         </span><br><span class="line"><span class="comment">// 连接运算符  .(将字符串连接一起)   .=(将左边内容与右边内容连接起来并重新赋值)</span></span><br><span class="line">$e = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">$f = <span class="number">123</span>;</span><br><span class="line"><span class="keyword">echo</span> $e . $f;   <span class="comment">// hello 123（注意，此处有强制类型转换）</span></span><br><span class="line"></span><br><span class="line">$e .= $e;      </span><br><span class="line"><span class="keyword">echo</span> $e;       <span class="comment">// hello 123</span></span><br><span class="line">     </span><br><span class="line"><span class="comment">// 错误抑制符：@(可能出错的表达式)，在PHP中有一些错误可以提前预知，但又不想报错，这就需要错误抑制符。</span></span><br><span class="line">$g = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">echo</span> $f % $g;    <span class="comment">// 此时会报错</span></span><br><span class="line"><span class="keyword">echo</span> @($f % $g); <span class="comment">// 不会报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 三目运算符(问号表达式) 表达式1 ？ 表达式2：表达式3</span></span><br><span class="line"><span class="keyword">echo</span> $g ==<span class="number">0</span>?<span class="number">1</span>:<span class="number">2</span>;</span><br><span class="line">   </span><br><span class="line"><span class="comment">// 自操作运算符 ++ --(前置或后置如果只有自操作，则效果一致)</span></span><br><span class="line">$i = $g++;    <span class="comment">// $g = 1;  $i = 0</span></span><br><span class="line">$i = ++$g;    <span class="comment">// $g = 2;  $i = 2;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 位运算符</span></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">计算机码：计算机在实际存储数据时，采用的编码规则(二进制规则)</span></span><br><span class="line"><span class="comment">计算机码：原码、反码和补码。数值本身最左边一位用来充当符号位：正数为0，负数为1；</span></span><br><span class="line"><span class="comment">原码:数据本身从十进制转换成二进制得到的结果</span></span><br><span class="line"><span class="comment">     正数，左符号位为0         负数：右符号位为1</span></span><br><span class="line"><span class="comment">反码：针对负数，符号位不变，其他位取反。</span></span><br><span class="line"><span class="comment">补码：针对负数，反码+1.（系统中存的为补码）</span></span><br><span class="line"><span class="comment">以0为例，若是原码，则+0 = 00000000  -0 = 10000000；二者不一样</span></span><br><span class="line"><span class="comment">         -0 反码 11111111   -0 补码 00000000   与+0一样（正数原码、补码、反码为其本身）。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">$j = <span class="number">5</span>;      <span class="comment">// 原码：00000101</span></span><br><span class="line">$k = <span class="number">-5</span>;     <span class="comment">// 原码：10000101  反码：11111010  补码：11111011</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 位运算：取出计算机中最小的单位（bit）进行运算  &amp; | ~(按位取反) ^(按位异或) &gt;&gt;(右移) &lt;&lt;(左移)</span></span><br><span class="line"><span class="comment">// 注：1、系统进行位运算时，均是利用补码进行运算的     2、运算结束之后，必须转换为原码进行显示</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 按位取与         </span></span><br><span class="line">var_dump($j &amp; $k);    <span class="comment">// int(1)</span></span><br><span class="line"><span class="comment">/*    5  00000101</span></span><br><span class="line"><span class="comment">     -5  11111011</span></span><br><span class="line"><span class="comment">      &amp;  00000001  判断：符号位为0，正数，所存即为原码，无需操作</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 按位取反</span></span><br><span class="line">var_dump(~ $k);       <span class="comment">// int(4)</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">     -5  11111011</span></span><br><span class="line"><span class="comment">      ~  00000100  正数即为原码，</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">         </span><br><span class="line"><span class="comment">// 按位左移</span></span><br><span class="line">var_dump($k &gt;&gt; <span class="number">1</span>)   <span class="comment">// int(-3)</span></span><br><span class="line">var_dump($k &gt;&gt; <span class="number">2</span>)   <span class="comment">// int(-2)</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">     -5  11111011</span></span><br><span class="line"><span class="comment">    &gt;&gt;2  11111110(右移补符号位)</span></span><br><span class="line"><span class="comment">   反码  11111101(补码-1)</span></span><br><span class="line"><span class="comment">   原码  10000010(除符号位均取反)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">         </span><br><span class="line"><span class="comment">// 运算符优先级</span></span><br></pre></td></tr></table></figure><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><p><strong>分类</strong>：顺序结构、分支结构（if分支与switch分支）、循环结构</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 分支结构——if分支</span></span><br><span class="line">$day = <span class="string">&#x27;星期天&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>($day == <span class="string">&#x27;星期1&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;go out&#x27;</span>;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;work&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// switch 分支：同一条件下，有多个值，且每个值对应一种操作</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">switch(条件表达式)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    case 值1:</span></span><br><span class="line"><span class="comment">        代码;</span></span><br><span class="line"><span class="comment">        break;</span></span><br><span class="line"><span class="comment">    case 值1:</span></span><br><span class="line"><span class="comment">        代码;</span></span><br><span class="line"><span class="comment">        break;</span></span><br><span class="line"><span class="comment">    default:</span></span><br><span class="line"><span class="comment">        代码;</span></span><br><span class="line"><span class="comment">        break;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环结构 for循环、while循环、Do-While循环、foreach循环（针对数组）</span></span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> $i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// while  Do-while循环</span></span><br><span class="line"><span class="keyword">while</span>($i &lt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> $i++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环控制</span></span><br><span class="line"><span class="comment">// 1、中断控制：重新开始从头循环 continue(需求，输出1-100的5的倍数)  </span></span><br><span class="line">$i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>($i &lt;= <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>($i % <span class="number">5</span> != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        $i++ ;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> $i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>  <img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200727163058009.png" alt="image-20200727163058009"></p><h5 id="流程控制替代语法"><a href="#流程控制替代语法" class="headerlink" title="流程控制替代语法"></a>流程控制替代语法</h5><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200727163350639.png" alt="image-20200727163350639"></p><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200727164308351.png" alt="image-20200727164308351" style="zoom:67%;"><p>上述书写中(tr 代表表格的一行，td代表表格的一列)，大括号很容易丢失，所以PHP有了一种替代机制，让其可以不用书写大括号。</p><p><em>for(;;){   =&gt; :      }=&gt;endfor;</em></p><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200727164715418.png" alt="image-20200727164715418" style="zoom:67%;"><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200727164840718.png" alt="image-20200727164840718"></p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p>文件包含：在一个PHP脚本中，将另外一个文件包含进来，合作完成一件事情。</p><h5 id="文件包含作用"><a href="#文件包含作用" class="headerlink" title="文件包含作用"></a>文件包含作用</h5><p>1、要么使用被包含文件中的内容，实现代码共享，向上包含（索要）</p><p>2、要么自己的东西可被使用，向下包含（给予）：自己有某个东西需要别的脚本显示。</p><p>最大的作用是分工协作，共同完成一件事情。</p><h5 id="文件包含四种形式"><a href="#文件包含四种形式" class="headerlink" title="文件包含四种形式"></a>文件包含四种形式</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含文件：使用数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含文件：include  include_once(系统自动判断文件包含当中，是否已被包含过)  require  require_once</span></span><br><span class="line"><span class="comment">// 向上包含：使用已准备好的文件</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;include1.php&#x27;</span>;  <span class="comment">// 包含当前文件所在文件夹下的include1.php文件</span></span><br><span class="line"><span class="keyword">echo</span> $a,PI;              <span class="comment">// include1.php中已定义这个变量和常量，故可直接使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 向下包含：类似于调用了子函数</span></span><br><span class="line">$a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> PI = <span class="number">3.14</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&#x27;display.php&#x27;</span>;   <span class="comment">// 该文件中可输出a和PI</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="文件加载原理"><a href="#文件加载原理" class="headerlink" title="文件加载原理"></a>文件加载原理</h5><h6 id="PHP代码执行流程："><a href="#PHP代码执行流程：" class="headerlink" title="PHP代码执行流程："></a>PHP代码执行流程：</h6><p>1、读取代码文件（相当于PHP程序）；</p><p>2、编译：将PHP代码转化成字节码（二进制），生成opcode（php可解析的代码）；</p><p>3、针对引擎来解析opcode，按照细节码进行逻辑运算；</p><p>4    转化成对应的html代码。</p><p>1、在文件加载（include 或 require）时，系统会自动嵌入对应的include位置</p><p>2、在PHP中，被包含的文件是单独编译的。。</p><p>若编译过程中报错，则会失败，不执行。但若是被包含文件有错误，则系统执行到include语句时，才回报错。</p><h6 id="include-和-require区别"><a href="#include-和-require区别" class="headerlink" title="include 和 require区别"></a>include 和 require区别</h6><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200727185824220.png" alt="image-20200727185824220" style="zoom:67%;"><p>include会执行多次，导致报错（重复定义变量）。。而include_once不会出现这种情况。</p><p>require和include区别在于：若未包含文件，则报错形式不一样。（require包含错误文件，则include后不再执行；include未包含文件，会警告，但是仍会执行后面的。）</p><h5 id="文件加载路径"><a href="#文件加载路径" class="headerlink" title="文件加载路径"></a>文件加载路径</h5><p>文件加载时需指定文件路径，才能保证PHP正确找到对应的文件。</p><p>1、绝对路径（从磁盘根目录开始—本地绝对路径；从网站根目录开始—网络绝对路径–相对于/的路径，，/相当于绝对路径）</p><p>2、相对路径：从当前文件所在目录开始的路径。。.或者./表示当前文件夹。。../上级目录</p><p>绝对路径和相对路径加载区别：绝对路径相对效率偏低（因为要从跟目录开始找，但相对安全，路径固定）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 文件加载路径</span></span><br><span class="line"><span class="comment">// 相对路径加载(只供演示，不考虑多次加载)</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;include1.php&#x27;</span>;  <span class="comment">// 不写路径，默认在当前文件夹下</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;./include1.php&#x27;</span>; <span class="comment">// 另一种形式</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../hostdoc/include1.php&#x27;</span>;  <span class="comment">// ../代表当前文件夹的上一个文件夹，hostdoc为当前文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 绝对路径</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;E:/server/apache/htdocs/include1.php&#x27;</span>;   <span class="comment">// 绝对路径，不会出错</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="文件嵌套包含"><a href="#文件嵌套包含" class="headerlink" title="文件嵌套包含"></a>文件嵌套包含</h5><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200727194419362.png" alt="image-20200727194419362" style="zoom:67%;"><p><strong>嵌套包含容易出现相对路径出错的问题。</strong></p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>将实现某一功能的代码块封装到一个结构中，从而实现代码的复用。</p><h5 id="函数定义语法（与c的差别在于可在任意位置调用子函数）"><a href="#函数定义语法（与c的差别在于可在任意位置调用子函数）" class="headerlink" title="函数定义语法（与c的差别在于可在任意位置调用子函数）"></a>函数定义语法（与c的差别在于可在任意位置调用子函数）</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Function 函数名(参数)&#123;</span></span><br><span class="line"><span class="comment">函数体</span></span><br><span class="line"><span class="comment">返回值</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 函数的定义</span></span><br><span class="line"><span class="comment">// 1、函数不会自动运行，必须调用才可</span></span><br><span class="line"><span class="comment">// 2、代码执行阶段，遇到函数名字才回调用，不是在编译阶段</span></span><br><span class="line"><span class="comment">// 3、函数调用可在声明之前</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;hello world&#x27;</span>;   <span class="comment">// 没有返回值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数的调用（）</span></span><br><span class="line">diaplay();   <span class="comment">// 若函数有参数，则需加参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数命名规范：字母数字下划线、但不能数字开头。</span></span><br><span class="line"><span class="comment">// 一半遵循以下规则：1、驼峰法：除第一个单词外，其余首字母大写。showParent()   2、下划线方式</span></span><br><span class="line"><span class="comment">// 在一个脚本函数周期中，不允许出现同名函数。</span></span><br></pre></td></tr></table></figure><h5 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a>函数参数</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义函数:定义函数时使用的参数，形参</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">$arg1,$arg2</span>)</span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> arg1+arg2;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用函数时使用的参数，实参</span></span><br><span class="line">$num1 = <span class="number">10</span>;</span><br><span class="line">add($num1,<span class="number">20</span>);  <span class="comment">// 1、实参个数可以多于形参（不能少于），只是函数不用而已  2、理论上实参个数没有限制</span></span><br><span class="line"><span class="comment">/* 调用过程：1、系统调用add函数时，会去内存中找是否有add函数</span></span><br><span class="line"><span class="comment">             2、系统在栈区开辟内存空间运行函数add</span></span><br><span class="line"><span class="comment">             3、系统查看函数本身是否有形参</span></span><br><span class="line"><span class="comment">             4、系统判断调用函数时是否有实参</span></span><br><span class="line"><span class="comment">             5、系统默认会将实参$num、20分别赋值给形参</span></span><br><span class="line"><span class="comment">             6、执行函数体、运行</span></span><br><span class="line"><span class="comment">             7、返回值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认值：形参的默认值。。若调用时没有提供实参，则函数使用默认值执行函数</span></span><br><span class="line"><span class="comment">// 注：1、默认值定义时，应放在后边，不能左边有默认值，而右边没有</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">moren</span>(<span class="params">$num1 = <span class="number">0</span>,$num2 =<span class="number">0</span></span>)  // 当前的<span class="title">num1</span>是形参，编译时不执行。且如果外部有同名子变量，也不会冲突</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> $num1-$num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上述实参形参的传递相当于值传递，函数内部改变变量的内容，不会影响外面变量的内容</span></span><br><span class="line"><span class="comment">// 引用传递：可在函数内部改变外部变量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">yinyong</span>(<span class="params">$a,&amp;$b</span>)   // 函数要的是地址，故将外部变量<span class="title">b</span>存储的地址取出赋值给了形参</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $b = $b - <span class="number">1</span>;</span><br><span class="line">    $a = $a <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="number">10</span>;</span><br><span class="line">$b = <span class="number">5</span>;</span><br><span class="line">yinyong($a,$b);    <span class="comment">// 注意：此处不取地址..另，引用传递不可传入数字（常量中存储的不是地址）</span></span><br></pre></td></tr></table></figure><h5 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h5><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200727204330212.png" alt="image-20200727204330212" style="zoom:67%;"><h5 id="作用域（与c差别在于全局变量不能直接被函数调用）"><a href="#作用域（与c差别在于全局变量不能直接被函数调用）" class="headerlink" title="作用域（与c差别在于全局变量不能直接被函数调用）"></a>作用域（与c差别在于全局变量不能直接被函数调用）</h5><p>作用域：通常是指变量可以被访问的区域。</p><p>在PHP中，作用域严格分为两种，以及内部定义的一种</p><p>1、全局变量：所属全局空间，在PHP中只允许在全局空间使用，函数内部不可用。（c++可使用）</p><p>2、局部变量：函数内部的变量</p><p>3、超全局变量：预定义变量（系统定义的）,没有访问限制，能够帮助局部去访问全局变量。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> php</span><br><span class="line"></span><br><span class="line"><span class="comment">// php中作用域</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认的代码空间：全局空间</span></span><br><span class="line">$global = <span class="string">&#x27;global area&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 局部变量（函数内部定义）</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $inner = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 访问全局变量</span></span><br><span class="line">    <span class="keyword">echo</span> $global;   <span class="comment">// 函数内部不能访问全局变量</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 转化为超全局变量，使得函数内部可以访问</span></span><br><span class="line">    <span class="keyword">echo</span> $GLOBALS[<span class="string">&#x27;global&#x27;</span>];  <span class="comment">// 这样可访问</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">display();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>想在函数内部访问全局变量，可通过$GLOBALS，也可使用引用传值。</strong></p><p>另，还有一种方式既可从全局访问局部、也可从局部访问全局。即，<strong>global关键字</strong>：</p><p>1、若使用global定义的关键字在外部存在，那么系统在函数内部定义的变量直接指向外部变量所指向的内存空间（同一个变量）。</p><p>2、若其定义的变量在外部不存在，系统会自动在全局空间定义一个与局部变量同名的全局变量。</p><p>本质为：在函数的内部和外部，对一个同名变量使用同一块内存地址保存数据。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span> php</span><br><span class="line"></span><br><span class="line"><span class="comment">// global关键字的应用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 默认的代码空间：全局空间</span></span><br><span class="line">$global = <span class="string">&#x27;global area&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 局部变量（函数内部定义）</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 访问全局变量</span></span><br><span class="line">    <span class="keyword">echo</span> $global;   <span class="comment">// 函数内部不能访问全局变量</span></span><br><span class="line">    </span><br><span class="line">   <span class="comment">// 1、全局变量存在</span></span><br><span class="line">    <span class="keyword">global</span> $global;</span><br><span class="line">    <span class="keyword">echo</span> $global;    <span class="comment">// 此时可以调用全局变量</span></span><br><span class="line">   <span class="comment">//2、全局变量不存在</span></span><br><span class="line">    <span class="keyword">global</span> $local = <span class="string">&#x27;inner&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $local;   <span class="comment">// 访问局部变量</span></span><br><span class="line">display();</span><br></pre></td></tr></table></figure><h5 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h5><p>静态变量：static是在函数内部定义的变量，使用static关键字修饰，用来实现夸函数共享数据的变量（注：跨函数是指同个函数多次调用）。</p><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200727213251776.png" alt="image-20200727213251776" style="zoom:67%;"><p><strong>静态变量原理：系统在进行编译的时候，就已经对static这一行进行了初始化：即为静态变量赋值。。。而在执行时，会跳过初始化这一行。</strong></p><h5 id="可变函数（未写全）"><a href="#可变函数（未写全）" class="headerlink" title="可变函数（未写全）"></a>可变函数（未写全）</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可变函数:当前有一个变量所保存的值，刚好是一个函数的名字，那么就可以使用$变量()来充当函数名使用。</span></span><br><span class="line"><span class="comment">// 可变函数在使用系统函数时，需用户在外部定义一个自定义函数，但是需要传入到系统函数内部使用。</span></span><br><span class="line"><span class="comment">// 定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">__FUNCTION__</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义变量</span></span><br><span class="line">$func = <span class="string">&#x27;display&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可变函数</span></span><br><span class="line">$func();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 匿名函数：没有名字的函数，</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 定义基本匿名函数</span></span><br><span class="line"><span class="comment">// function()  // 没有办法运行，故须加一个变量名字</span></span><br><span class="line"><span class="comment">// 变量保存匿名函数，本质得到的是一个对象（closure类中的对象）</span></span><br><span class="line">$func = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;hello world&#x27;</span>;</span><br><span class="line">&#125;;         <span class="comment">// 因为相当于变量的赋值，所以需加一个分号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用匿名函数</span></span><br><span class="line">$func();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">闭包：要执行的代码块（由于自由变量被包含在代码块中，这些自由变量以及它们引用的对象没有被释放）和为自由变量提供绑定地计算环境。（简单理解就是说，函数内部的一些局部变量即要执行的代码块，在执行完毕后没有被释放）。没有被释放的原因是：在函数内部，还有对应的函数被引用，通常为匿名函数。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 闭包函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">display</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $name == <span class="keyword">__FUNCTION__</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 定义匿名函数</span></span><br><span class="line">    <span class="comment">// $innerfunction = function()// $name 相对于匿名函数来说是外部变量，故不能直接用</span></span><br><span class="line">    <span class="comment">// 1、使用匿名函数    2、使用关键字use</span></span><br><span class="line">    $innerfunction = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) <span class="title">use</span>(<span class="params">$name</span>)  // <span class="title">use</span>就是将局部变量 保留给内部使用（形成了闭包，使<span class="title">display</span>运行完                                                毕后，不会被释放）</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $name;     </span><br><span class="line">    &#125;</span><br><span class="line">    $innerfunction();  </span><br><span class="line">    <span class="comment">// 3、 匿名函数返回给外部使用</span></span><br><span class="line">    <span class="keyword">return</span>  $innerfunction();    <span class="comment">// 为验证局部变量未被释放而返回</span></span><br><span class="line">&#125;;</span><br><span class="line">$closure = display();   <span class="comment">// 理论上此处局部变量被释放</span></span><br><span class="line"></span><br><span class="line">$closure();   <span class="comment">// 结果却输出了name，说明上一行并未释放局部变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如何证明局部变量在函数使用完之后没有被释放？（三步法）</span></span><br><span class="line"><span class="comment">// 1、使用内部匿名函数</span></span><br><span class="line"><span class="comment">// 2、匿名函数使用句变量：use</span></span><br><span class="line"><span class="comment">// 3、匿名函数返回给外部使用。</span></span><br></pre></td></tr></table></figure><h5 id="伪类型"><a href="#伪类型" class="headerlink" title="伪类型"></a>伪类型</h5><p>PHP中不存在的类型，只是为了方便查看操作手册。（可当作模板，只是为了泛化数据类型）</p><p>伪类型有两类:mixed混合的，只要是php中的类型即可；numbe数值的</p><h5 id="常用系统函数"><a href="#常用系统函数" class="headerlink" title="常用系统函数"></a>常用系统函数</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 系统函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出相关</span></span><br><span class="line"><span class="comment">// print():类似于echo输出提供的内容，本质是一种结构（非函数），返回值为1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">print</span>(<span class="string">&#x27;hello lewao&#x27;</span>);   <span class="comment">// 输出hello world</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;hello lewao&#x27;</span>;         <span class="comment">// 输出1hello world（1为上一行echo的输出）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// print_r()：类似于var_dump，但不会输出数据类型，只会输出值，数组打印使用较多。</span></span><br><span class="line">print_r(<span class="string">&#x27;hello&#x27;</span>);            <span class="comment">// 输出为hello</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//时间函数</span></span><br><span class="line"><span class="keyword">echo</span> data(<span class="string">&#x27;Y 年 m 月 d 日&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> time();</span><br><span class="line"><span class="keyword">echo</span> microtime();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数学函数：  max()、rand():指定范围里的随机整数、round()：四舍五入、ceil():向上取整、floor()向下取整、pow(2,8):2的8次方、abs()：绝对值、sqrt()：求平方根</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 有关函数的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">$a,$b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 获取指定参数</span></span><br><span class="line">    var_dump(func_get_arg(<span class="number">1</span>));    <span class="comment">// 得到了第二个参数，结果为：string(1) &#x27;2&#x27;;</span></span><br><span class="line">    <span class="comment">// 获取所有参数:对应实参的个数</span></span><br><span class="line">    var_dump(func_get_args());    <span class="comment">// array(4)&#123;   &#125;</span></span><br><span class="line">    <span class="comment">// 获取参数数量：对应实参的个数</span></span><br><span class="line">    var_dump(func_num_args());    <span class="comment">// 参数数量 int(4)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用(如果存在的话，执行test)</span></span><br><span class="line">function_exist(<span class="string">&#x27;test&#x27;</span>) &amp;&amp; test(<span class="number">1</span>,<span class="string">&#x27;2&#x27;</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><p>错误处理：指系统或用户在对某些代码进行执行的时候，发现有错误，就会通过错误处理的形式告诉程序员。</p><h5 id="错误分类"><a href="#错误分类" class="headerlink" title="错误分类"></a>错误分类</h5><p>1、语法错误：书写代码不符合PHP语法规范，会导致代码在编译中不允许，故也不会执行（parse error）；</p><p>2、运行时错误：代码编译通过，但在执行时会出现一些条件不满足从而导致的错误。（runtime error取空数组的第几位数）</p><p>3、逻辑错误：写代码不规范、但逻辑性错误，导致虽可正常运行，但得不到预期结果。</p><h5 id="错误代号"><a href="#错误代号" class="headerlink" title="错误代号"></a>错误代号</h5><p>系统代号在PHP中均被定义为了系统常量，故可直接使用：</p><p>1、系统错误（系统使用的代号）：</p><p>E_PARSE：编译错误，代码不会运行</p><p>E_ERROR：fatal error致命错误，会在出错的位置断掉</p><p>E_WARNING：warning警告错误，不影响执行，但可能得不到预期结果</p><p>E_NOTICE：notice，通知错误、不影响代码执行</p><p>2、用户错误（用户使用的代号）：E_USER_ERROR、E_USER_WARNING、E_USER_NOTICE用户在使用自定义错误出发的时候，会使用道德错误代号。</p><p>3、E_ALL：代表所有错误</p><p>所有E开头的错误常量都由一个字节（8位）存储，且每一种错误占用一个位，故可进行位操作。</p><p>排除通知级别notice：E_ALL &amp; ~E_NOTICE 。。假设ALL全为1，那么与NOTICE取反再取与就可把其剔除</p><p>只要警告和同志：E_WARNING | E_NOTICE</p><h5 id="错误触发"><a href="#错误触发" class="headerlink" title="错误触发"></a>错误触发</h5><p>程序运行时触发：主要针对代码的语法错误和运行时错误。</p><p>人为触发：知道某些逻辑可能会出错，从而使用对应的代码编号来判断</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// php错误处理</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 人为触发</span></span><br><span class="line"><span class="comment">// 处理脚本让浏览器按照指定字符集解析</span></span><br><span class="line"><span class="comment">// header(&#x27;Content-type:text/html;charset=utf-8&#x27;);</span></span><br><span class="line"></span><br><span class="line">$b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>($b == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    trigger_error(<span class="string">&#x27;除数不能为0&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $a / $b;</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200728093504044.png" alt="image-20200728093504044" style="zoom:80%;"><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728093845093.png" alt="image-20200728093845093"></p><h5 id="错误显示设置（未全）"><a href="#错误显示设置（未全）" class="headerlink" title="错误显示设置（未全）"></a>错误显示设置（未全）</h5><h2 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h2><h5 id="字符串定义语法"><a href="#字符串定义语法" class="headerlink" title="字符串定义语法"></a>字符串定义语法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//php字符串：定义</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1、引号定义:比较适合定义较短的或无结构要求的字符串</span></span><br><span class="line">$str1 = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">$str2 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">var_dump($str1,$str2);  <span class="comment">// 两种方式显示的结果一致</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 结构化定义</span></span><br><span class="line"><span class="comment">// 2、heredoc字符串：没有单引号的单引号字符串</span></span><br><span class="line">$str3 = &lt;&lt;&lt;EOD</span><br><span class="line">          HELLO</span><br><span class="line">          EOD;</span><br><span class="line"><span class="comment">// 3、nowdoc 结构</span></span><br><span class="line">$str4 = &lt;&lt;&lt;<span class="string">&#x27;EOD&#x27;</span>   <span class="comment">// eod只是边界符，可自己定义</span></span><br><span class="line">           hello</span><br><span class="line">EOD;</span><br><span class="line">var_dump($str3,$str4);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="转义字符串"><a href="#转义字符串" class="headerlink" title="转义字符串"></a>转义字符串</h5><p>字符串转义：在计算机通用协议中，有一些特定方式定义的字母，系统会特定处理；反斜杠+字母<br>&#39;:在单引号字符串中显示单引号  &quot; 在双引号字符串中显示双引号  \r：回车  \n：换行  \t:四个空格  $<br><strong>区别:</strong>上述转义符中，单引号只能识别&#39;。而双引号中不能识别&#39;；</p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728100839775.png" alt="image-20200728100839775"></p><p>双引号中变量识别规则：</p><p>1、变量本身系统能够与后面的内容区分；即应该保证变量的独立性，不要使系统难以识别。</p><p>2、使用变量专业标识符，即给变量加一组{}；</p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728101319093.png" alt="image-20200728101319093"></p><p>结构化字符串变量的规则</p><p>1、结构化定义字符串对应的边界符有条件</p><p>1.1 上边界符和后面不能有任何东西（包括注释）</p><p>1.2 下边界符必须顶格</p><p>1.3 下边界符后面只能跟分号</p><p>2、结构化定义字符串内部均是字符串本身（包括空格、换行、注释等）</p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728102143974.png" alt="image-20200728102143974"></p><h5 id="字符串长度问题"><a href="#字符串长度问题" class="headerlink" title="字符串长度问题"></a>字符串长度问题</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset = utf-8&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义字符串</span></span><br><span class="line">$str1 = <span class="string">&#x27;abcefjdoifaoi&#x27;</span>;</span><br><span class="line">$str2 = <span class="string">&#x27;你好中国123&#x27;</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> strlen($str1),<span class="string">&#x27;&lt;br/&gt;&#x27;</span>,strlen($str2);  <span class="comment">// 13   15(中文在utf下占3个字节)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 多字节字符串的长度问题：包含中文的长度</span></span><br><span class="line"><span class="comment">// 多字节字符串扩展模块：mbstring扩展(mb:Multi Bytes)</span></span><br><span class="line"><span class="comment">// 首先需加载PHP的mbstring扩展（php.ini中去注释即可）</span></span><br><span class="line"><span class="comment">// 使用mbstring</span></span><br><span class="line"><span class="keyword">echo</span> mb_strlen($str1),<span class="string">&#x27;&lt;br/&gt;&#x27;</span>,mb_strlen($str2);  <span class="comment">// 13   15(与之前一致) </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 长度并未改变，MBstring针对不同的字符集有不同的统计结果</span></span><br><span class="line"><span class="keyword">echo</span> mb_strlen($str1),<span class="string">&#x27;&lt;br/&gt;&#x27;</span>,mb_strlen($str2),<span class="string">&#x27;&lt;br/&gt;&#x27;</span>,mb_string($str2,<span class="string">&#x27;utf-8&#x27;</span>);  <span class="comment">// 13   15   7</span></span><br></pre></td></tr></table></figure><h5 id="字符串相关函数"><a href="#字符串相关函数" class="headerlink" title="字符串相关函数"></a>字符串相关函数</h5><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728104720621.png" alt="image-20200728104720621"></p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728104800475.png" alt="image-20200728104800475"></p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728105204318.png" alt="image-20200728105204318"></p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728105449502.png" alt="image-20200728105449502"></p><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728105557351.png" alt="image-20200728105557351"></p><h2 id="数组（元素下标均和c-不一样）"><a href="#数组（元素下标均和c-不一样）" class="headerlink" title="数组（元素下标均和c++不一样）"></a>数组（元素下标均和c++不一样）</h2><p>数组：数据的组合，指将一组数据（多个）存储到一个指定的容器中，并用变量指向该容器，然后可用变量一次性取得该容器的所有数据。</p><h5 id="定义语法"><a href="#定义语法" class="headerlink" title="定义语法"></a>定义语法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// php数组：可以是一种或多种类型的数据，这与c++很不一样.类似于哈希表</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 定义数组：array</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line">var_dump($arr1);    <span class="comment">// 结果：// array(3) ([0]=&gt;string(1) &quot;1&quot; [1]=&gt;int(2) [2]=&gt;string(5) &quot;hello&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义数组：[]</span></span><br><span class="line">$arr2 = [<span class="string">&#x27;1&#x27;</span>,<span class="number">2</span>,<span class="string">&#x27;hello&#x27;</span>];</span><br><span class="line">var_dump($arr2);   <span class="comment">// array(3) ([0]=&gt;string(1) &quot;1&quot; [1]=&gt;int(2) [2]=&gt;string(5) &quot;hello&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义数组：隐型数组  </span></span><br><span class="line">$arr3[] = <span class="number">1</span>;      <span class="comment">// 默认给数组第0个元素赋值</span></span><br><span class="line">$arr3[<span class="number">10</span>] = <span class="number">100</span>;  <span class="comment">// 第10个元素赋值</span></span><br><span class="line">$arr3[] = <span class="string">&#x27;1&#x27;</span>;    <span class="comment">// 第11个。默认下标是从当前最大下标</span></span><br><span class="line">$arr[<span class="string">&#x27;key&#x27;</span>] = <span class="string">&#x27;key&#x27;</span>;  <span class="comment">// 第key个</span></span><br><span class="line">$arr[<span class="number">1</span>] = <span class="string">&#x27;value&#x27;</span>  <span class="comment">// 第1个，但不会自动调整，还是会处于最后一个位置</span></span><br><span class="line"><span class="comment">// 结果为：array(4) ([0]=&gt;int(1) [10]=&gt;int(100) [11]=&gt;string(1) &quot;1&quot; [&quot;key&quot;]=&gt;string(3)&quot;key&quot; [1]=&gt;string(5) &quot;value&quot;)</span></span><br></pre></td></tr></table></figure><h5 id="PHP数组特点"><a href="#PHP数组特点" class="headerlink" title="PHP数组特点"></a>PHP数组特点</h5><p>1、可以整数下标或者字符串下标</p><p>若数组下标均为整数，则称为<strong>索引数组</strong></p><p>若数组下标均为字符串，则称为<strong>关联数组</strong>。</p><p>混合下标的话称为<strong>混合数组</strong></p><p>2、数组元素的顺序以放入顺序为准，与下标无关</p><p>3、数字下标的增长特性：从0开始自动增长，若中间手动加入较大的下标，则后面则会从当前最大下标+1增长。</p><p>4、特殊值下标的自动转换</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 特殊下标自动转换</span></span><br><span class="line">$arr1[<span class="literal">false</span>] = <span class="literal">false</span>;</span><br><span class="line">$arr1[<span class="literal">true</span>] = <span class="literal">true</span>;</span><br><span class="line">arr1[<span class="literal">NULL</span>] = <span class="literal">NULL</span>;</span><br><span class="line">var_dump($arr1);   <span class="comment">// array(3)([0]=&gt;bool(false),[1]=&gt;bool(true) [&quot;&quot;]-&gt;NULL)</span></span><br></pre></td></tr></table></figure><p>5、PHP数组中类型元素没有限制。</p><p>6、PHP中数组元素没有长度限制。c++ vector</p><p>补充：PHP中数组是很大的数据，故会存储在堆区。</p><h5 id="多维数组"><a href="#多维数组" class="headerlink" title="多维数组"></a>多维数组</h5><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200728143259676.png" alt="image-20200728143259676" style="zoom:67%;"><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200728143418531.png" alt="image-20200728143418531" style="zoom:67%;"><h5 id="数组遍历"><a href="#数组遍历" class="headerlink" title="数组遍历"></a>数组遍历</h5><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728143816339.png" alt="image-20200728143816339"></p><h6 id="Foreach语法"><a href="#Foreach语法" class="headerlink" title="Foreach语法"></a>Foreach语法</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 数组遍历  foreach</span></span><br><span class="line"></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// foreach</span></span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $a)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> $a,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;    <span class="comment">// 依次输出1，2，3，4</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $a =&gt; $v)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;key&#x27;</span>,$a,<span class="string">&#x27;== value&#x27;</span>,$v,<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;    <span class="comment">// 依次输出key0 == value1  等</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 二维数组</span></span><br><span class="line">$arr = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">0</span> =&gt; <span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span> =&gt;<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;age&#x27;</span> =&gt; <span class="number">10</span>),</span><br><span class="line">    <span class="number">1</span> =&gt; <span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;Jim&#x27;</span>,<span class="string">&#x27;age&#x27;</span> =&gt; <span class="number">11</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过foreach遍历二维元素</span></span><br><span class="line"><span class="keyword">foreach</span>($arr <span class="keyword">as</span> $a)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;name is:&#x27;</span>,$a[<span class="string">&#x27;name&#x27;</span>],<span class="string">&#x27;age is:&#x27;</span>,$a[<span class="string">&#x27;age&#x27;</span>],<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    <span class="comment">// name is:TOM age is:10</span></span><br><span class="line">    <span class="comment">// name is:TOM age is:10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="foreach遍历原理"><a href="#foreach遍历原理" class="headerlink" title="foreach遍历原理"></a>foreach遍历原理</h6><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728145904737.png" alt="image-20200728145904737"></p><h6 id="for循环遍历"><a href="#for循环遍历" class="headerlink" title="for循环遍历"></a>for循环遍历</h6><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">// for循环遍历数组</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 数组特点：1、索引数组   2、下标规律</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>);</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i&lt;count($arr);$i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;key is:&#x27;</span>,$i,<span class="string">&#x27;value is:&#x27;</span>,$arr[$i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="while配合each和list遍历数组"><a href="#while配合each和list遍历数组" class="headerlink" title="while配合each和list遍历数组"></a>while配合each和list遍历数组</h6><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728152144177.png" alt="image-20200728152144177"></p><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200728152016161.png" alt="image-20200728152016161" style="zoom:67%;"><p><img src="/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200728152224856.png" alt="image-20200728152224856"></p><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200728161251519.png" alt="image-20200728161251519" style="zoom:67%;"><p>由于不存在下标1，而list只能从0开始依次查找，故上述会报错。</p><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200728161749886.png" alt="image-20200728161749886" style="zoom:67%;"><h5 id="数组相关的函数"><a href="#数组相关的函数" class="headerlink" title="数组相关的函数"></a>数组相关的函数</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组相关函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 排序函数</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">3</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">print_r(sort($arr))  <span class="comment">// 结果为1</span></span><br><span class="line">print_r($arr);     <span class="comment">// 排序后，索引变为01234</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 指针函数 reset:将数组的内部指针指向第一个单元；end():将数组指针指向最后一个元素；</span></span><br><span class="line"><span class="comment">// next():     prev():指针上移   current():获取当前指针对应的元素值    key()获取当前指针对应的key</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否指针移动</span></span><br><span class="line"><span class="keyword">echo</span> current($arr),<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> key($arr),<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;  <span class="comment">//若是第一个元素。则当前数组指针未移动</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> next($arr),next($arr),<span class="string">&#x27;&lt;br/&gt;&#x27;</span>;  <span class="comment">//15</span></span><br><span class="line"><span class="keyword">echo</span> prev($arr);<span class="comment">//1</span></span><br><span class="line"><span class="comment">// 注意事项：next，prev会移动指针，可能导致超出数组，此时再使用next、prev便不能再返回数组，只能通过end/reset</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 其他函数：count</span></span><br></pre></td></tr></table></figure><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200728164831073.png" alt="image-20200728164831073" style="zoom:67%;"><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200728165028151.png" alt="image-20200728165028151" style="zoom:67%;"><img src="/post/55d182ea.htm/Users\a\AppData\Roaming\Typora\typora-user-images\image-20200728165056637.png" alt="image-20200728165056637" style="zoom:67%;"><h2 id="编程思想"><a href="#编程思想" class="headerlink" title="编程思想"></a>编程思想</h2><h5 id="递推算法"><a href="#递推算法" class="headerlink" title="递推算法"></a>递推算法</h5><p>利用特定关系得出中间推论，直至得到结果的算法。。。分为顺推和逆推两种</p><p>顺推:通过最简单的条件，逐步推演结果。</p><p>逆推，通过结果找到规律，从而推到已知条件。</p><h5 id="递归算法"><a href="#递归算法" class="headerlink" title="递归算法"></a>递归算法</h5><p>把问题转化为规模缩小了的同类问题的子问题。然后递归调用函数以表达问题的解。</p><p><strong>简化问题，找到最优子问题。</strong></p><p>递归的本质是函数调用：一个函数需要开辟一块内存，递归会出现同时调用多个函数，故占用很多内存。</p><h5 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h5><p>1、比较相邻元素，若前一个比后一个大，则交换。</p><p>2、对每一对相邻元素进行1操作，直至最后一对。此时最后一个因为最大值。</p><p>3、除最后一个外，重复以上操作</p><p>4、重复以上操作，直至排序完成。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>);</span><br><span class="line"><span class="comment">// 计算长度</span></span><br><span class="line">$len = count($arr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>;$i&lt;$len<span class="number">-1</span>;$i++)    <span class="comment">// 第几次重复循环</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>($j = <span class="number">0</span>;$j&lt;$len-$i<span class="number">-1</span>;$j++)  <span class="comment">// 第几次交换</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[$j] &gt; $arr[$j+<span class="number">1</span>])</span><br><span class="line">            swap1($arr[$j],$arr[$j+<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">var_dump($arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 交换值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap1</span>(<span class="params">&amp;$a,&amp;$b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $tmp = $a;</span><br><span class="line">    $a = $b;</span><br><span class="line">    $b = $tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h5><p>1、假设第一个元素为最小元素，记下下标</p><p>2、寻找右侧剩余元素，若有更小的，则记下更小的下标</p><p>3、一行对比完成后，交换第一个和最小的元素</p><p>4、重新开始以上操作</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line">$min_index = <span class="number">0</span>;  </span><br><span class="line"></span><br><span class="line">$len = count($arr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i&lt;$len<span class="number">-1</span>; $i++)</span><br><span class="line">&#123;</span><br><span class="line">    $min_index = $i;</span><br><span class="line">    <span class="keyword">for</span>($j = $min_index + <span class="number">1</span>;$j&lt;$len;$j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[$min_index] &gt; $arr[$j])</span><br><span class="line">            $min_index = $j;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span>($min_index != $i)</span><br><span class="line">    swap1($arr[$min_index],$arr[$i]);</span><br><span class="line">&#125;</span><br><span class="line">var_dump($arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 交换值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap1</span>(<span class="params">&amp;$a,&amp;$b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $tmp = $a;</span><br><span class="line">    $a = $b;</span><br><span class="line">    $b = $tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h5><p>1、认定一个第一个元素已经排好序；</p><p>2、取出第二个元素作为待插入元素；</p><p>3、将待插入元素与已排好元素比较；</p><p>4、若小于已排好元素，则说明前面排序未在正确位置，应该向后移动，让新元素插入进去</p><p>5、重复以上操作，直到该元素插入完毕</p><p>6、重复操作，直至所有元素完毕</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr = [<span class="number">4</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">$len = count($arr);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">1</span>;$i&lt;$len;$i++)   <span class="comment">// 第几个元素为待插入元素</span></span><br><span class="line">&#123;</span><br><span class="line">    $tmp = $arr[$i];</span><br><span class="line">    <span class="keyword">for</span>($j = $i;$j&gt;<span class="number">0</span>;$j--)  <span class="comment">// 比较几次</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>($tmp &lt; $arr[$j<span class="number">-1</span>])    <span class="comment">// 注意此处比较的是tmp</span></span><br><span class="line">            $arr[$j] = $arr[$j<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>($arr[$j] != $tmp)</span><br><span class="line">        $arr[$j] =$tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump($arr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 交换值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap1</span>(<span class="params">&amp;$a,&amp;$b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $tmp = $a;</span><br><span class="line">    $a = $b;</span><br><span class="line">    $b = $tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="快速排序法："><a href="#快速排序法：" class="headerlink" title="快速排序法："></a>快速排序法：</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义数组开头及结尾</span></span><br><span class="line">$start = <span class="number">0</span>;</span><br><span class="line">$end = count($arr)<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义函数作为递归函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quick_sort</span>(<span class="params">$arr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 递归出口</span></span><br><span class="line">    $len = count($arr);</span><br><span class="line">    <span class="keyword">if</span>($len &lt;= <span class="number">1</span>) <span class="keyword">return</span> $arr;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 比较并分散数据</span></span><br><span class="line">    $left = $right = <span class="keyword">array</span>();  <span class="comment">// 定义空数组用于存放大的或小的</span></span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">1</span>;$i&lt;$len;$i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>($arr[$i]&gt;$arr[<span class="number">0</span>]) $right[] = $arr[$i];   <span class="comment">// 大于存放在右边数组</span></span><br><span class="line">        <span class="keyword">else</span> $left[] = $arr[$i];   <span class="comment">// 小于存放在左边数组</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 递归</span></span><br><span class="line">    $left = quick_sort($left);  <span class="comment">// 分别将右数组和左数组进一步排序</span></span><br><span class="line">    $right = quick_sort($right);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> array_merge($left,(<span class="keyword">array</span>)$arr[<span class="number">0</span>],$right);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$res = quick_sort($arr);</span><br><span class="line">var_dump($res);   <span class="comment">// 不能用echo</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 快排双指针</span></span><br><span class="line"></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">8</span>,<span class="number">7</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quick_sort</span>(<span class="params">$arr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 递归结束条件</span></span><br><span class="line">    $len = count($arr);</span><br><span class="line">    <span class="keyword">if</span>($len &lt;= <span class="number">1</span>) <span class="keyword">return</span> $arr;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 定义双指针</span></span><br><span class="line">    $left = <span class="number">0</span>;</span><br><span class="line">    $right = $len<span class="number">-1</span>;</span><br><span class="line">    $pivot = $arr[<span class="number">0</span>];  <span class="comment">// 确定基准</span></span><br><span class="line">    <span class="keyword">while</span>($left &lt; $right)   <span class="comment">// left == right时跳出循环</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>($left &lt; $right &amp;&amp; $arr[$right] &gt;= $pivot) $right--;</span><br><span class="line"><span class="keyword">while</span>($left &lt; $right &amp;&amp; $arr[$left] &lt;= $pivot) $left++;</span><br><span class="line">swap1($arr[$left],$arr[$right]);</span><br><span class="line">    &#125;</span><br><span class="line">    swap1($arr[$left],$arr[<span class="number">0</span>]);   <span class="comment">// 跳出循环时，left = right ，故将pivot赋值即可</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 递归点(上述操作完毕后，需要进一步排序左边和右边，故需递归)</span></span><br><span class="line">    $left_arr = quick_sort(array_slice($arr,<span class="number">0</span>,$left));</span><br><span class="line">    $right_arr = quick_sort(array_slice($arr,$left+<span class="number">1</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> array_merge($left_arr,(<span class="keyword">array</span>)$arr[$left],$right_arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(quick_sort($arr));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 交换值</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap1</span>(<span class="params">&amp;$a,&amp;$b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $tmp = $a;</span><br><span class="line">    $a = $b;</span><br><span class="line">    $b = $tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 二路合并算法</span></span><br><span class="line">$arr1 = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line">$arr2 = <span class="keyword">array</span>(<span class="number">3</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">$res = <span class="keyword">array</span>();    <span class="comment">// 存合并后的元素</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(count($arr1) &amp;&amp; count($arr2))</span><br><span class="line">&#123;</span><br><span class="line">    $res[] = $arr1[<span class="number">0</span>]&gt;$arr2[<span class="number">0</span>] ? array_shift($arr2):array_shift($arr1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(count($arr1) &amp;&amp; !count($arr2))</span><br><span class="line">&#123;</span><br><span class="line">    $res[] = array_shift($arr1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(count($arr2) &amp;&amp; !count($arr1))</span><br><span class="line">&#123;</span><br><span class="line">    $res[] = array_shift($arr2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump($res);</span><br></pre></td></tr></table></figure><p>1、将数组拆分成两个数组</p><p>2、重复步骤1，将数组拆分成最小单元</p><p>3、然后二路归并</p><p>4、重复步骤直至完成</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 归并排序</span></span><br><span class="line">    </span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">15</span>,<span class="number">7</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge_sort</span>(<span class="params">$arr</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 1、递归结束条件</span></span><br><span class="line">    $len = count($arr);</span><br><span class="line">    <span class="keyword">if</span>($len &lt;= <span class="number">1</span>) <span class="keyword">return</span> $arr;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2、重复的操作</span></span><br><span class="line">    <span class="comment">// 2、1 拆分数组</span></span><br><span class="line">    $middle = $len&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    $left = array_slice($arr,<span class="number">0</span>,$middle);</span><br><span class="line">    $right = array_slice($arr,$middle);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 4、递归点（最后写这一步，先将一层的分离和合并写完，再找递归点）</span></span><br><span class="line">    $left = merge_sort($left);</span><br><span class="line">    $right = merge_sort($right);</span><br><span class="line">    <span class="comment">// 2、2 二路归并</span></span><br><span class="line">    $res = <span class="keyword">array</span>();    <span class="comment">// 存合并后的元素</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(count($left) &amp;&amp; count($right))</span><br><span class="line">    &#123;</span><br><span class="line">        $res[] = $left[<span class="number">0</span>]&gt;$right[<span class="number">0</span>] ? array_shift($right):array_shift($left);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(count($left) &amp;&amp; !count($right))</span><br><span class="line">    &#123;</span><br><span class="line">        $res[] = array_shift($left);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(count($right) &amp;&amp; !count($left))</span><br><span class="line">    &#123;</span><br><span class="line">        $res[] = array_shift($right);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3、返回值</span></span><br><span class="line">    <span class="keyword">return</span> array_merge($res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(merge_sort($arr));</span><br></pre></td></tr></table></figure><h5 id="查找算法"><a href="#查找算法" class="headerlink" title="查找算法"></a>查找算法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">17</span>,<span class="number">24</span>,<span class="number">31</span>,<span class="number">32</span>);</span><br><span class="line"><span class="comment">// 顺序查找：从数组第一个元素开始挨个匹配</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">find_index</span>(<span class="params">$arr,$num</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span>($arr <span class="keyword">as</span> $k =&gt; $v)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>($v == $num) <span class="keyword">return</span> $k;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// var_dump(find_index($arr,2));  // 不存在，故返回bool(false)</span></span><br><span class="line"><span class="comment">// var_dump(find_index($arr,32));  // 存在，故返回int(5)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Binary_search</span>(<span class="params">$arr,$num</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $len = count($arr);</span><br><span class="line">    $left = <span class="number">0</span>;</span><br><span class="line">    $right = $len<span class="number">-1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>($left &lt;= $right)</span><br><span class="line">    &#123;</span><br><span class="line">        $middle = $left+($right-$left&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>($arr[$middle] &gt; $num) </span><br><span class="line">$right = $middle<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">elseif</span>($arr[$middle] &lt; $num) </span><br><span class="line">$left = $middle+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line"><span class="keyword">return</span> $middle;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">print_r(Binary_search($arr,<span class="number">6</span>));</span><br><span class="line">var_dump(Binary_search($arr,<span class="number">2</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;视频：&lt;a href=&quot;https://www.bilibili.com/video/BV18x411H7qD?p=3&quot;&gt;https://www.bilibili.com/video/BV18x411H7qD?p=3&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;基础&quot;&gt;&lt;a href=&quot;#基础&quot; class=&quot;headerlink&quot; title=&quot;基础&quot;&gt;&lt;/a&gt;基础&lt;/h1&gt;&lt;p&gt;Web分为两类：静态网站和动态网站。流程:浏览器发起访问-&amp;gt;DNS解析域名-&amp;gt;服务器电脑-&amp;gt;服务软件&lt;/p&gt;
&lt;h5 id=&quot;1、静态网站访问原理：&quot;&gt;&lt;a href=&quot;#1、静态网站访问原理：&quot; class=&quot;headerlink&quot; title=&quot;1、静态网站访问原理：&quot;&gt;&lt;/a&gt;1、静态网站访问原理：&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200726195840264.png&quot; alt=&quot;image-20200726195840264&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;必备工具&lt;/strong&gt;：1、有两台电脑，PC（个人电脑），里面需要有浏览器；另外一台为服务器（需要有服务软件，假设为APACHE）,软件没有数据，故需在里面添加文件夹（准备访问的文件/网页）2、下面蓝线代表两个在同一个互联网下。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;访问流程&lt;/strong&gt;：1、在浏览器中需输入URL（uniformed resource location，统一资源定位，即互联网的绝对路径）；2、第一部需要经过URL的解析（DNS，DNS内部包含本地DNS与网络DNS，，访问本地DNS无需通过网络，可提高效率。如果本地DNS无法转化IP，就需要网络DNS）。3、DNS将转换后的IP地址返回给浏览器。4、浏览器通过IP地址找到服务器。5、（虽然找到了服务器，但服务器里面资源很多，如何找自己想要的APACH？）这就需要利用端口，APACHE的端口为80。6、访问APACHE后，即可找到要访问的内容（IP地址后的/index.html也称为URI（uniformed resource identify，统一资源标志。目标机器上相对某个文件夹的相对路径，，，注/即为根目录，相对根目录所以其为相对路径））.7、Apache根据URI读取文件，读取文件的内容（注意只是读取）。8、Apache读取文件后，返回结果。9、浏览器看之前，需要经过浏览器解析，才可展示给用户。（所有人访问的时候，都访问的一样的index文件，若要改变显示的信息，就需要改变index，比较麻烦）&lt;/p&gt;
&lt;h5 id=&quot;2、动态网站访问&quot;&gt;&lt;a href=&quot;#2、动态网站访问&quot; class=&quot;headerlink&quot; title=&quot;2、动态网站访问&quot;&gt;&lt;/a&gt;2、动态网站访问&lt;/h5&gt;&lt;p&gt;区别：相对静态网站访问多了几个步骤：需要服务器端解析；需要数据库&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/post/55d182ea.htm/C:%5CUsers%5Ca%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200726202647377.png&quot; alt=&quot;image-20200726202647377&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="notes" scheme="https://asea.fun/tags/notes/"/>
    
      <category term="php" scheme="https://asea.fun/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>旅行说走就走，二十岁说走就走</title>
    <link href="https://asea.fun/post/e6351f8b.html"/>
    <id>https://asea.fun/post/e6351f8b.html</id>
    <published>2021-04-05T12:37:25.000Z</published>
    <updated>2021-04-05T23:48:32.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="4cf46947b33711549667985c62613a518bd30812932281913a9fa8422c490376"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">已加密，请在这里密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;抱歉, 这个密码看着不太对, 请再试试.&quot; data-whm=&quot;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&quot;&gt;
  &lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;4cf46947b33711549667985c62613a518bd30812932281913a9fa8422c490376&quot;&gt;&lt;/script&gt;
  &lt;div class=&quot;hbe hbe-content&quot;&gt;
    &lt;div class=&quot;hbe hbe-input hbe-input-default&quot;&gt;
      &lt;input class=&quot;hbe hbe-input-field hbe-input-field-default&quot; type=&quot;password&quot; id=&quot;hbePass&quot;&gt;
      &lt;label class=&quot;hbe hbe-input-label hbe-input-label-default&quot; for=&quot;hbePass&quot;&gt;
        &lt;span class=&quot;hbe hbe-input-label-content hbe-input-label-content-default&quot;&gt;已加密，请在这里密码.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&quot;/lib/hbe.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;/css/hbe.style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
      <category term="think" scheme="https://asea.fun/tags/think/"/>
    
  </entry>
  
  <entry>
    <title>看小米春季新品发布会有感</title>
    <link href="https://asea.fun/post/f32b1748.html"/>
    <id>https://asea.fun/post/f32b1748.html</id>
    <published>2021-03-30T14:06:44.000Z</published>
    <updated>2021-04-05T12:24:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>从来没看过这么长的发布会，有感于雷总的人格魅力，分为两场的发布会丝毫不觉得劳累。今天的发布会雷总已经嗓子哑得很严重了，只要稍微大声说话便会失声，我以为讲完mix雷总要休息了，没想到后面的笔记本，以及最后的充满激情的造车宣言，他都坚持下来了。我在想，假如我在场，一定会热泪盈眶吧。听了太多的参数，这里我已经不想提产品了。正常发布会看下来，各种新品层出不穷，可谓盛宴，又被人称之为手机界的“春晚”，说实话，毫不为过。但是其实我最喜欢的还是雷总讲起来他的回忆，讲起来他和许知远的对话，那是无比真诚的，一口不是很标准的普通话却感人肺腑。雷总又讲起来了他的以往，从当年笃定要敲代码，到最后代码被格式化，学习管理、金融的知识，16年小米的低谷期，雷总挑起大旗带领大家扛了过来，如今有了“我们又1080亿”的资本这样的豪言，属实让人感叹！今天雷总正式在发布会上宣布要进军智能电动汽车行业，他说到：“这是我人生中最后一次重大的创业项目了。”我一时间还不能接受这样的消息，雷军在我眼里一直是一个年轻帅气充满魅力的成功人士，况且当他将其mix fold的时候还调侃自己还年轻，可是终究逃不了变老的命运。这样的感受让我想起来罗老师，当年他在各行各业闯荡，而现在算算，他还有多少时间可以依旧保持活力探索呢。我真心的希望小米能在汽车行业有一番成就，至少不会辜负一百亿美金的资金调用，至少不会辜负发布会最后两句失声的谢谢。<br><img src="https://img.imgdb.cn/item/606335818322e6675c6e5344.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从来没看过这么长的发布会，有感于雷总的人格魅力，分为两场的发布会丝毫不觉得劳累。今天的发布会雷总已经嗓子哑得很严重了，只要稍微大声说话便会失声，我以为讲完mix雷总要休息了，没想到后面的笔记本，以及最后的充满激情的造车宣言，他都坚持下来了。我在想，假如我在场，一定会热泪盈眶吧。听了太多的参数，这里我已经不想提产品了。正常发布会看下来，各种新品层出不穷，可谓盛宴，又被人称之为手机界的“春晚”，说实话，毫不为过。但是其实我最喜欢的还是雷总讲起来他的回忆，讲起来他和许知远的对话，那是无比真诚的，一口不是很标准的普通话却感人肺腑。雷总又讲起来了他的以往，从当年笃定要敲代码，到最后代码被格式化，学习管理、金融的知识，16年小米的低谷期，雷总挑起大旗带领大家扛了过来，如今有了“我们又1080亿”的资本这样的豪言，属实让人感叹！今天雷总正式在发布会上宣布要进军智能电动汽车行业，他说到：“这是我人生中最后一次重大的创业项目了。”我一时间还不能接受这样的消息，雷军在我眼里一直是一个年轻帅气充满魅力的成功人士，况且当他将其mix fold的时候还调侃自己还年轻，可是终究逃不了变老的命运。这样的感受让我想起来罗老师，当年他在各行各业闯荡，而现在算算，他还有多少时间可以依旧保持活力探索呢。我真心的希望小米能在汽车行业有一番成就，至少不会辜负一百亿美金的资金调用，至少不会辜负发布会最后两句失声的谢谢。&lt;br&gt;&lt;img src=&quot;https://img.imgdb.cn/item/606335818322e6675c6e5344.jpg&quot; alt&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>python项目练习</title>
    <link href="https://asea.fun/post/71485f5b.html"/>
    <id>https://asea.fun/post/71485f5b.html</id>
    <published>2021-03-27T03:44:22.000Z</published>
    <updated>2021-03-30T03:56:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记录一下python常用的源码"><a href="#记录一下python常用的源码" class="headerlink" title="记录一下python常用的源码"></a>记录一下python常用的源码</h1><h2 id="邮件服务"><a href="#邮件服务" class="headerlink" title="邮件服务"></a>邮件服务</h2><blockquote><p>用来每次部署博客以后给订阅的人自动发邮件</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 邮件服务 --&gt;</span><br><span class="line"># coding: UTF-8</span><br><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">mailserver &#x3D; &quot;smtp.163.com&quot;  #邮箱服务器地址</span><br><span class="line">username_send &#x3D; &#39;******@163.com,xxx@qq.com&#39;  #邮箱用户名</span><br><span class="line">password &#x3D; &#39;******&#39;   #邮箱密码：需要使用授权码</span><br><span class="line">username_recv &#x3D; &#39;****@qq.com&#39;  #收件人，多个收件人用逗号隔开</span><br><span class="line">mail &#x3D; MIMEText(&#39;xxx&#39;)</span><br><span class="line">mail[&#39;Subject&#39;] &#x3D; &#39;xxx&#39;</span><br><span class="line">mail[&#39;From&#39;] &#x3D; username_send  #发件人</span><br><span class="line">mail[&#39;To&#39;] &#x3D; username_recv  #收件人；[]里的三个是固定写法，别问为什么，我只是代码的搬运工</span><br><span class="line">smtp &#x3D; smtplib.SMTP(mailserver,port&#x3D;25) # 连接邮箱服务器，smtp的端口号是25</span><br><span class="line"># smtp&#x3D;smtplib.SMTP_SSL(&#39;smtp.qq.com&#39;,port&#x3D;465) #QQ邮箱的服务器和端口号</span><br><span class="line">smtp.login(username_send,password)  #登录邮箱</span><br><span class="line">smtp.sendmail(username_send,username_recv,mail.as_string())# 参数分别是发送者，接收者，第三个是把上面的发送邮件的内容变成字符串</span><br><span class="line">smtp.quit() # 发送完毕后退出smtp</span><br><span class="line">print (&#39;success&#39;)</span><br></pre></td></tr></table></figure><h2 id="自动更新更新时间"><a href="#自动更新更新时间" class="headerlink" title="自动更新更新时间"></a>自动更新更新时间</h2><blockquote><p>每次部署的时候自动将post的<code>update:</code>后面的时间改成文件的修改时间</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 自动更新更新时间和文件名 --&gt;</span><br><span class="line">import re</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">def change_time(path):</span><br><span class="line">        fileList &#x3D; os.listdir(path)</span><br><span class="line">        fb &#x3D; open(&#39;更新内容.txt&#39;,&#39;w&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">        hello &#x3D; &#39;博客更新&#39;</span><br><span class="line">        fb.write(&#39;&#123;:⭐^10&#125;\n&#39;.format(hello))</span><br><span class="line">        for file in fileList:</span><br><span class="line">            allpath &#x3D; path+file</span><br><span class="line">            f &#x3D; open(allpath,&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;)</span><br><span class="line">            txt &#x3D; f.read() #读取内容</span><br><span class="line">            f.close()</span><br><span class="line">            now &#x3D; int(time.time())</span><br><span class="line">            # 匹配，加入\n是为了防止匹配到文章内部代码。</span><br><span class="line">            old_update &#x3D; re.findall(r&quot;(updated: \d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;\s\d&#123;1,2&#125;:\d&#123;1,2&#125;:\d&#123;1,2&#125;\n)&quot;,txt) # 正则匹配要修改的字符串</span><br><span class="line">            file_title &#x3D; re.findall(r&#39;title: (.*?)\n&#39;,txt)</span><br><span class="line">            if old_update &#x3D;&#x3D; []:</span><br><span class="line">                    old_update &#x3D; [&#39;updated:\n&#39;]</span><br><span class="line">            new_update &#x3D; time.strftime(&#39;updated: %Y-%m-%d %H:%M:%S\n&#39;,time.localtime(int(os.path.getmtime(allpath)))) # 获取文件的最后修改时间并赋值</span><br><span class="line">            </span><br><span class="line">            try:</span><br><span class="line">                txt &#x3D; txt.replace(old_update[0],new_update) # 替换</span><br><span class="line">            except:</span><br><span class="line">                print(&#39;&#123;&#125;有误&#39;.format(file))</span><br><span class="line">                continue</span><br><span class="line">            else:</span><br><span class="line">                if now - int(os.path.getmtime(allpath)) &lt; 43200:</span><br><span class="line">                    fi &#x3D; open(allpath,&#39;w&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">                    fi.write(txt) # 写入</span><br><span class="line">                    fi.close() # 关闭</span><br><span class="line">                    os.rename(allpath,path+file_title[0]+os.path.splitext(allpath)[1])</span><br><span class="line">                    update_name &#x3D; &#39;《&#39;+file_title[0]+&#39;》&#39;</span><br><span class="line">                    fb.write(&#39;------------&#123;&#125;\n&#39;.format(update_name))</span><br><span class="line">        fb.write(&#39;\n访问地址：https:&#x2F;&#x2F;blog.asea.fun&#39;)</span><br><span class="line">        fb.close()</span><br><span class="line">change_time(&#39;E:&#x2F;blog&#x2F;source&#x2F;_posts&#x2F;&#39;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="自己写了一个文件名字批处理的软件"><a href="#自己写了一个文件名字批处理的软件" class="headerlink" title="自己写了一个文件名字批处理的软件"></a>自己写了一个文件名字批处理的软件</h2><blockquote><p>网上找的都怪怪的，用起来不舒服，就自己写了一个，自由度更高，使用的是tkinter。</p></blockquote><p><strong>未来打算更新的几个功能</strong></p><ul><li><input checked disabled type="checkbox"> 增加前缀后缀（已实现） </li><li><input checked disabled type="checkbox"> 修改字符的半匹配（逻辑重复已pass）</li><li><input disabled type="checkbox"> 支持正则替换</li><li><input disabled type="checkbox"> 支持修改范围（例如：前十个）</li><li><input disabled type="checkbox"> 支持批量word转pdf</li><li><input disabled type="checkbox"> 支持批量pdf转word<blockquote><p> 另外附上：<a href="https://asea.ys168.com">&gt;&gt;最新版本下载地址&lt;&lt;</a></p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import tkinter as tk</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">import re</span><br><span class="line">from tkinter import scrolledtext</span><br><span class="line">import webbrowser</span><br><span class="line">import tkinter.messagebox</span><br><span class="line"></span><br><span class="line">class MY_GUI():</span><br><span class="line">    #窗口初始化</span><br><span class="line">    def __init__(self,window_name):</span><br><span class="line">        self.window &#x3D; window_name</span><br><span class="line">        self.is_all_change &#x3D; 0</span><br><span class="line">        self.is_all_change &#x3D; tk.IntVar()</span><br><span class="line">        self.can_change &#x3D; 0</span><br><span class="line">        self.theme_CN&#x3D;self.mode_CN&#x3D;&#39;默认&#39;</span><br><span class="line">        # 设置窗口</span><br><span class="line">    #窗口设置</span><br><span class="line">    def set_window(self):</span><br><span class="line">        self.window.title(&#39;文件名称批量修改器_v1.2.0&#39;)</span><br><span class="line">        self.window.geometry(&#39;800x600+500+100&#39;)</span><br><span class="line">        self.window.maxsize(800,600)</span><br><span class="line">        self.window.minsize(800,600)</span><br><span class="line">        self.window.attributes(&#39;-alpha&#39;,1) # 1为不虚化</span><br><span class="line">        # self.to_be_changed_label_name&#x3D;tk.StringVar()</span><br><span class="line">        self.to_change_label_name&#x3D;tk.StringVar()</span><br><span class="line">        self.change_button_name&#x3D;tk.StringVar()</span><br><span class="line">        # 标签</span><br><span class="line">        self.address_label &#x3D; tk.Label(self.window,text&#x3D;&#39;原文件夹的地址&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10),relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.state_label &#x3D; tk.Label(self.window,font&#x3D;(&#39;microsoft yahei&#39;, 9),anchor&#x3D;&#39;w&#39;,relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.to_be_changed_label &#x3D; tk.Label(self.window,text&#x3D;&#39;&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10),relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.to_change_label &#x3D; tk.Label(self.window,text &#x3D; &#39;&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10),relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.change_button &#x3D; tk.Button(self.window,text &#x3D; &#39;&#39;,bg&#x3D;&#39;#CCCCCC&#39;,command&#x3D;self.callChange)</span><br><span class="line">        self.original_fileList_label &#x3D; tk.Label(self.window,text&#x3D;&#39;原始文件目录&#39;,relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.latest_fileList_label &#x3D; tk.Label(self.window,text&#x3D;&#39;修改后文件目录&#39;,relief&#x3D;&#39;groove&#39;)</span><br><span class="line">        self.log_data_label &#x3D; tk.Label(self.window,text&#x3D;&#39;工  作  日  志&#39;,font&#x3D;(&#39;microsoft yahei&#39;, 10,&#39;bold&#39;))</span><br><span class="line">        # 单行输入框</span><br><span class="line">        self.address_Entry &#x3D; tk.Entry(self.window) # 文件夹地址收集框</span><br><span class="line">        self.to_be_changed_Entry &#x3D; tk.Entry(self.window) # 要被改变的字符串</span><br><span class="line">        self.to_change_Entry &#x3D; tk.Entry(self.window) # 要改变成的字符串</span><br><span class="line">        # 按钮</span><br><span class="line">        self.is_all_change_button &#x3D; tk.Checkbutton(self.window,text &#x3D; &quot;是否遍历整个文件夹(默认为否)&quot;,variable&#x3D;self.is_all_change,onvalue&#x3D;1,offvalue&#x3D;0)</span><br><span class="line">        self.look_files_button &#x3D; tk.Button(self.window,text&#x3D;&#39;查看当前目录&#39;,command&#x3D;self.look_files)</span><br><span class="line">        self.clear_button &#x3D; tk.Button(self.window,text&#x3D;&#39;重置&#39;,command&#x3D;self.clearAll)</span><br><span class="line">        self.clearLog_button &#x3D; tk.Button(self.window,text&#x3D;&#39;清除工作日志&#39;,command&#x3D;self.clearLog)</span><br><span class="line">        # 多行文本框</span><br><span class="line">        self.original_fileList_text &#x3D; tk.Text(self.window) # 原始文件目录</span><br><span class="line">        self.latest_fileList_text &#x3D; tk.Text(self.window) # 修改后的文件目录</span><br><span class="line">        self.log_data_text &#x3D; scrolledtext.ScrolledText(self.window,font&#x3D;(&#39;microsoft yahei&#39;, 10),fg&#x3D;&#39;#fff&#39;,bg&#x3D;&#39;#455&#39;) # 工作日志</span><br><span class="line">        # 菜单栏</span><br><span class="line">        self.menubar &#x3D; tk.Menu(self.window)</span><br><span class="line">        self.func_menu &#x3D; tk.Menu(self.menubar, tearoff&#x3D;0)</span><br><span class="line">        self.menubar.add_cascade(label&#x3D;&#39;功能&#39;, menu&#x3D;self.func_menu)</span><br><span class="line">        self.func_menu.add_command(label&#x3D;&#39;查看当前目录&#39;,command&#x3D;self.look_files)</span><br><span class="line">        self.func_menu.add_command(label&#x3D;&#39;执行&#39;,command&#x3D;self.change_name)</span><br><span class="line">        self.func_menu.add_command(label&#x3D;&#39;退出&#39;,command&#x3D;self.window.quit)</span><br><span class="line">        self.func_menu.add_command(label&#x3D;&#39;重置&#39;,command&#x3D;self.clearAll)</span><br><span class="line">        self.change_mode_menu &#x3D; tk.Menu(self.menubar,tearoff&#x3D;0)</span><br><span class="line">        self.menubar.add_cascade(label&#x3D;&#39;模式&#39;,menu&#x3D;self.change_mode_menu)</span><br><span class="line">        self.change_mode_menu.add_command(label&#x3D;&#39;替换模式&#39;,command&#x3D; lambda: self.change_mode(&#39;replace_mode&#39;))</span><br><span class="line">        self.change_mode_menu.add_command(label&#x3D;&#39;加缀模式&#39;,command&#x3D;lambda: self.change_mode(&#39;clues_mode&#39;))</span><br><span class="line">        self.more_menu &#x3D; tk.Menu(self.menubar,tearoff&#x3D;0)</span><br><span class="line">        self.color_menu &#x3D; tk.Menu(self.menubar,tearoff&#x3D;0)</span><br><span class="line">        self.menubar.add_cascade(label&#x3D;&#39;主题&#39;,menu &#x3D; self.color_menu)</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;默认&#39;,command&#x3D;lambda: self.change_color(&#39;默认&#39;,&#39;#eee&#39;,&#39;#eee&#39;,&#39;#eee&#39;,&#39;#000&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;灰蓝&#39;,command&#x3D;lambda: self.change_color(&#39;灰蓝&#39;,&#39;#758a99&#39;,&#39;#50616d&#39;,&#39;#41555d&#39;,&#39;#eee&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;苍水&#39;,command&#x3D;lambda: self.change_color(&#39;苍水&#39;,&#39;#75878a&#39;,&#39;#88ada6&#39;,&#39;#808080&#39;,&#39;#eee&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;茶白&#39;,command&#x3D;lambda: self.change_color(&#39;茶白&#39;,&#39;#f3f9f1&#39;,&#39;#e0eee8&#39;,&#39;#fffbf0&#39;,&#39;#000&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;豆青&#39;,command&#x3D;lambda: self.change_color(&#39;豆青&#39;,&#39;#bce672&#39;,&#39;#96ce54&#39;,&#39;#0eb83a&#39;,&#39;#000&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;黛紫&#39;,command&#x3D;lambda: self.change_color(&#39;豆青&#39;,&#39;#815463&#39;,&#39;#8c4356&#39;,&#39;#8c4356&#39;,&#39;#fff&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;深黑&#39;,command&#x3D;lambda: self.change_color(&#39;深黑&#39;,&#39;#000&#39;,&#39;#000&#39;,&#39;#000&#39;,&#39;#fff&#39;))</span><br><span class="line">        self.color_menu.add_command(label&#x3D;&#39;砺茶&#39;,command&#x3D;lambda: self.change_color(&#39;砺茶&#39;,&#39;#9f6f55&#39;,&#39;#8c6450&#39;,&#39;#a16d5d&#39;,&#39;#fff&#39;))</span><br><span class="line">        self.menubar.add_cascade(label&#x3D;&#39;更多&#39;, menu&#x3D;self.more_menu)</span><br><span class="line">        self.more_menu.add_command(label&#x3D;&#39;bug反馈&#39;,command&#x3D;self.bug_return)</span><br><span class="line">        self.more_menu.add_command(label&#x3D;&#39;赞赏&#39;,command&#x3D;self.reward)</span><br><span class="line">        self.menubar.add_command(label&#x3D;&#39;关于&#39;,command&#x3D;self.about_window)</span><br><span class="line">        self.menubar.add_command(label&#x3D;&#39;更新&#39;,command&#x3D;self.update_link)</span><br><span class="line">        # 菜单栏的关联</span><br><span class="line">        self.window.config(menu&#x3D;self.menubar)</span><br><span class="line">        # 滚动条</span><br><span class="line">        self.original_fileList_text_scroll &#x3D; tk.Scrollbar()</span><br><span class="line">        self.latest_fileList_text_scroll &#x3D; tk.Scrollbar()</span><br><span class="line">        # 放到窗口的右侧, 填充Y竖直方向       </span><br><span class="line">        # 两个控件关联</span><br><span class="line">        self.original_fileList_text_scroll.config(command&#x3D;self.original_fileList_text.yview)</span><br><span class="line">        self.original_fileList_text.config(yscrollcommand&#x3D;self.original_fileList_text_scroll.set)</span><br><span class="line">        self.latest_fileList_text_scroll.config(command&#x3D;self.latest_fileList_text.yview)</span><br><span class="line">        self.latest_fileList_text.config(yscrollcommand&#x3D;self.latest_fileList_text_scroll.set)</span><br><span class="line">        self.change_mode(&#39;replace_mode&#39;)# 初始化标签名字</span><br><span class="line">        #布局</span><br><span class="line">        label_x &#x3D; 10</span><br><span class="line">        extry_x &#x3D; 140</span><br><span class="line">        fileList_text_x &#x3D; 380</span><br><span class="line">        log_text_width &#x3D; 360-label_x</span><br><span class="line">        self.address_label.place(x&#x3D;label_x,y&#x3D;0,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.to_be_changed_label.place(x&#x3D;label_x,y&#x3D;30,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.to_change_label.place(x&#x3D;label_x,y&#x3D;60,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.address_Entry.place(x&#x3D;extry_x,y&#x3D;0,width&#x3D;220,height&#x3D;30)</span><br><span class="line">        self.to_be_changed_Entry.place(x&#x3D;extry_x,y&#x3D;30,width&#x3D;220,height&#x3D;30)</span><br><span class="line">        self.to_change_Entry.place(x&#x3D;extry_x,y&#x3D;60,width&#x3D;220,height&#x3D;30)</span><br><span class="line">        self.change_button.place(x&#x3D;2*(log_text_width)&#x2F;3+label_x,y&#x3D;120,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.is_all_change_button.place(x&#x3D;100,y&#x3D;90,width&#x3D;280,height&#x3D;30)</span><br><span class="line">        self.log_data_text.place(x&#x3D;label_x,y&#x3D;175,width&#x3D;log_text_width+18,height&#x3D;430-25)</span><br><span class="line">        self.original_fileList_label.place(x&#x3D;fileList_text_x,y&#x3D;0,width&#x3D;100,height&#x3D;30)</span><br><span class="line">        self.original_fileList_text.place(x&#x3D;fileList_text_x,y&#x3D;30,width&#x3D;400,height&#x3D;250)</span><br><span class="line">        self.latest_fileList_label.place(x&#x3D;fileList_text_x,y&#x3D;300,width&#x3D;100,height&#x3D;30)</span><br><span class="line">        self.latest_fileList_text.place(x&#x3D;fileList_text_x,y&#x3D;330,width&#x3D;400,height&#x3D;250)</span><br><span class="line">        self.look_files_button.place(x&#x3D;label_x,y&#x3D;90,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.clear_button.place(x&#x3D;label_x,y&#x3D;120,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.original_fileList_text_scroll.place(x&#x3D;780,y&#x3D;0,width&#x3D;15,height&#x3D;300)</span><br><span class="line">        self.latest_fileList_text_scroll.place(x&#x3D;780,y&#x3D;330,width&#x3D;15,height&#x3D;300)</span><br><span class="line">        self.clearLog_button.place(x&#x3D;log_text_width&#x2F;3+label_x,y&#x3D;120,width&#x3D;log_text_width&#x2F;3,height&#x3D;30)</span><br><span class="line">        self.log_data_label.place(x&#x3D;label_x,y&#x3D;150,width&#x3D;log_text_width,height&#x3D;25)</span><br><span class="line">        self.state_label.place(x&#x3D;label_x,y&#x3D;580,width&#x3D;log_text_width,height&#x3D;20)</span><br><span class="line">    def change_color(self,theme_CN,color1,color2,color3,fontcolor):</span><br><span class="line">        self.address_label.config(bg&#x3D;color1,fg&#x3D;fontcolor)</span><br><span class="line">        self.to_be_changed_label.config(bg&#x3D;color2,fg&#x3D;fontcolor)</span><br><span class="line">        self.to_change_label.config(bg&#x3D;color3,fg&#x3D;fontcolor)</span><br><span class="line">        self.original_fileList_label.config(bg &#x3D; color1,fg&#x3D;fontcolor)</span><br><span class="line">        self.latest_fileList_label.config(bg&#x3D;color1,fg&#x3D;fontcolor)</span><br><span class="line">        self.log_data_label.config(bg&#x3D;color2,fg&#x3D;fontcolor)</span><br><span class="line">        self.theme_CN&#x3D;theme_CN</span><br><span class="line">        self.state_label.config(text&#x3D;&#39;当前模式：&#39;+self.mode_CN+&#39;       当前主题：&#39;+self.theme_CN)</span><br><span class="line">    def change_mode(self,mode):</span><br><span class="line">        if mode &#x3D;&#x3D; &#39;replace_mode&#39;:</span><br><span class="line">            self.mode&#x3D;&#39;replace_mode&#39;</span><br><span class="line">            self.to_be_changed_label.config(text &#x3D; &#39;被替换的字符串&#39;)</span><br><span class="line">            self.to_change_label.config(text &#x3D; &#39;来替换的字符串&#39;)</span><br><span class="line">            self.change_button.config(text &#x3D; &#39;替换&#39;)</span><br><span class="line">            self.mode_CN&#x3D;&#39;替换模式&#39;</span><br><span class="line">        else:</span><br><span class="line">            self.mode&#x3D;&#39;clues_mode&#39;</span><br><span class="line">            self.to_be_changed_label.config(text&#x3D;&#39;要添加的前缀&#39;)</span><br><span class="line">            self.to_change_label.config(text &#x3D; &#39;要添加的后缀&#39;)</span><br><span class="line">            self.change_button.config(text &#x3D; &#39;添加&#39;)</span><br><span class="line">            self.mode_CN&#x3D;&#39;加缀模式&#39;</span><br><span class="line">        self.state_label.config(text&#x3D;&#39;当前模式：&#39;+self.mode_CN+&#39;        当前主题：&#39;+self.theme_CN)</span><br><span class="line">    def update_link(self):</span><br><span class="line">        webbrowser.open(&#39;http:&#x2F;&#x2F;asea.ys168.com&#x2F;&#39;,new&#x3D;0)</span><br><span class="line">    def reward(self):</span><br><span class="line">        webbrowser.open(&quot;https:&#x2F;&#x2F;img.imgdb.cn&#x2F;item&#x2F;605ff1f08322e6675cb51721.jpg&quot;, new&#x3D;0)</span><br><span class="line">    def about_window(self):</span><br><span class="line">        tk.messagebox.askyesno(&#39;关于&#39;,&#39;本软件为我闲暇之余开发的小应用，目的是解决一下自己常遇到的批量替换文件名的问题，由于我还是个新手，软件可能还有bug，你可以点击菜单栏的更多——bug反馈来进行反馈，希望本工具能够帮助到你。&#39;)</span><br><span class="line">    def bug_return(self):</span><br><span class="line">        webbrowser.open(&quot;tencent:&#x2F;&#x2F;message&#x2F;?uin&#x3D;569389750&amp;Site&#x3D;admin5.com&amp;Menu&#x3D;yes&quot;, new&#x3D;0)</span><br><span class="line">    #清除工作日志</span><br><span class="line">    def clearLog(self):</span><br><span class="line">        self.log_data_text.delete(1.0,tk.END)</span><br><span class="line">        current_time &#x3D; str(self.get_current_time())</span><br><span class="line">        self.log_data_text.insert(1.0, current_time+&#39; &#39;+&#39;WARNING:已清除\n&#39;)</span><br><span class="line">        # self.log_data_text.mark_set(&#39;insert&#39;, tk.END)</span><br><span class="line">    #遍历文件夹返回生成器</span><br><span class="line">    def findAllFile(self,path): # 获取文件夹下所有文件</span><br><span class="line">        for root, ds, fs in os.walk(path):</span><br><span class="line">            for f in fs:</span><br><span class="line">                fullname &#x3D; [os.path.join(root, f),os.path.join(root),os.path.join(f)]</span><br><span class="line">                yield fullname</span><br><span class="line">    #重置</span><br><span class="line">    def clearAll(self):</span><br><span class="line">        current_time &#x3D; str(self.get_current_time())</span><br><span class="line">        # self.address_Entry.delete(0,tk.END)</span><br><span class="line">        # self.to_be_changed_Entry.delete(0,tk.END)</span><br><span class="line">        # self.to_change_Entry.delete(0,tk.END,)</span><br><span class="line">        # self.log_data_text.delete(1.0,tk.END)</span><br><span class="line">        self.set_window()</span><br><span class="line">        self.log_data_text.insert(1.0,current_time+&#39; &#39;+&#39;WARNING:已重置\n&#39;)</span><br><span class="line">        # self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">        # self.latest_fileList_text.delete(1.0,tk.END)</span><br><span class="line">    #获取当前时间</span><br><span class="line">    def get_current_time(self):</span><br><span class="line">        current_time &#x3D; time.strftime(&#39;%Y-%m-%d %H:%M:%S&#39;,time.localtime(time.time()))</span><br><span class="line">        return current_time</span><br><span class="line">    #判断是否输入文件夹地址</span><br><span class="line">    def callChange(self):</span><br><span class="line">        if self.address_Entry.get() !&#x3D; &#39;&#39;:</span><br><span class="line">            self.change_name()</span><br><span class="line">    #查看当前文件夹目录</span><br><span class="line">    def look_files(self):</span><br><span class="line">        self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">        address_str &#x3D; self.address_Entry.get()</span><br><span class="line">        try:</span><br><span class="line">            if self.is_all_change.get():</span><br><span class="line">                fileList &#x3D; self.findAllFile(address_str)</span><br><span class="line">                for filelist in fileList:</span><br><span class="line">                    self.original_fileList_text.insert(tk.END,filelist[2]+&#39;\n&#39;)</span><br><span class="line">            else:</span><br><span class="line">                fileList &#x3D; os.listdir(address_str)</span><br><span class="line">                for fileName in fileList:</span><br><span class="line">                    self.original_fileList_text.insert(tk.END,fileName+&#39;\n&#39;)</span><br><span class="line">        except:</span><br><span class="line">            current_time &#x3D; self.get_current_time()</span><br><span class="line">            self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:请确认路径存在\n&#39;)</span><br><span class="line"></span><br><span class="line">    #主函数</span><br><span class="line">    def change_name(self):</span><br><span class="line">        address_str &#x3D; self.address_Entry.get()</span><br><span class="line">        if self.is_all_change.get():#判断是否遍历</span><br><span class="line">            current_time &#x3D; self.get_current_time()</span><br><span class="line">            try:</span><br><span class="line">                fileList &#x3D; self.findAllFile(address_str)</span><br><span class="line">            except:</span><br><span class="line">                self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:请确认路径存在\n&#39;)</span><br><span class="line">            self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            self.latest_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            to_be_changed_str &#x3D; self.to_be_changed_Entry.get()</span><br><span class="line">            to_change_str &#x3D; self.to_change_Entry.get()</span><br><span class="line">            num &#x3D; 0</span><br><span class="line">            for filelist in (fileList):</span><br><span class="line">                fileName &#x3D; filelist[0]#绝对路径</span><br><span class="line">                fileRoot &#x3D; filelist[1]+&#39;\\&#39;</span><br><span class="line">                fileShortName &#x3D; filelist[2]</span><br><span class="line">                self.original_fileList_text.insert(tk.END,fileShortName+&#39;\n&#39;)</span><br><span class="line">                if self.mode &#x3D;&#x3D; &#39;replace_mode&#39;:</span><br><span class="line">                    try:</span><br><span class="line">                        os.rename(fileName, fileRoot + fileShortName.replace(to_be_changed_str,to_change_str)) # 文件重新命名</span><br><span class="line">                        if fileShortName !&#x3D; fileShortName.replace(to_be_changed_str,to_change_str):</span><br><span class="line">                            num +&#x3D; 1</span><br><span class="line">                            self.log_data_text.insert(tk.END, &#39;已将\n&#39;+fileShortName+&#39;\n&#39;+&#39;修改为\n&#39;+fileShortName.replace(to_be_changed_str,to_change_str)+&#39;\n&#39;+&#39;-&#39;*20+&#39;\n&#39;)</span><br><span class="line">                    except:</span><br><span class="line">                        self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:无法同时存在两个相同名字的文件\n&#39;)</span><br><span class="line">                else:</span><br><span class="line">                    try:</span><br><span class="line">                        os.rename(fileName, fileRoot + to_be_changed_str + os.path.splitext(fileShortName)[0] + to_change_str + os.path.splitext(fileShortName)[1]) </span><br><span class="line">                        num +&#x3D; 1</span><br><span class="line">                        self.log_data_text.insert(tk.END, &#39;已将\n&#39;+fileName+&#39;\n&#39;+&#39;修改为\n&#39;+fileRoot + fileShortName.replace(to_be_changed_str,to_change_str)+&#39;\n&#39;+&#39;-&#39;*20+&#39;\n&#39;)</span><br><span class="line">                    except:</span><br><span class="line">                        self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:添加错误，请点击菜单栏反馈bug\n&#39;)</span><br><span class="line">            self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;共修改&#39;+str(num)+&#39;个文件&#39;+&#39;\n&#39;+&#39;&#123;:■^26&#125;&#39;.format(&#39;本次修改结束&#39;)+&#39;\n&#39;)</span><br><span class="line">            fileList &#x3D; self.findAllFile(address_str)</span><br><span class="line">            for filelist in fileList:</span><br><span class="line">                self.latest_fileList_text.insert(tk.END,filelist[2]+&#39;\n&#39;)</span><br><span class="line">            self.log_data_text.see(tk.END) # 自动将光标移到末尾</span><br><span class="line">        else:</span><br><span class="line">            current_time &#x3D; self.get_current_time()</span><br><span class="line">            try:</span><br><span class="line">                fileList &#x3D; os.listdir(address_str)</span><br><span class="line">            except:</span><br><span class="line">                self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:请确认路径存在\n&#39;)</span><br><span class="line">            # os.chdir(address_str)  # 将当前工作目录修改为待修改文件夹的位置</span><br><span class="line">            self.original_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            self.latest_fileList_text.delete(1.0,tk.END)</span><br><span class="line">            to_be_changed_str &#x3D; self.to_be_changed_Entry.get()</span><br><span class="line">            to_change_str &#x3D; self.to_change_Entry.get()</span><br><span class="line">            num &#x3D; 0</span><br><span class="line">            for fileName in fileList:</span><br><span class="line">                self.original_fileList_text.insert(tk.END,fileName+&#39;\n&#39;)</span><br><span class="line">                if self.mode &#x3D;&#x3D; &#39;replace_mode&#39;:</span><br><span class="line">                    try:</span><br><span class="line">                        os.rename(address_str+&#39;\\&#39;+fileName, address_str+&#39;\\&#39;+fileName.replace(to_be_changed_str,to_change_str)) # 3. 文件重新命名 规则根据需求自己定</span><br><span class="line">                        if fileName !&#x3D; fileName.replace(to_be_changed_str,to_change_str):</span><br><span class="line">                            num +&#x3D; 1</span><br><span class="line">                            self.log_data_text.insert(tk.END, &#39;已将\n&#39;+fileName+&#39;\n&#39;+&#39;修改为\n&#39;+fileName.replace(to_be_changed_str,to_change_str)+&#39;\n&#39;+&#39;-&#39;*20+&#39;\n&#39;)</span><br><span class="line">                    except:</span><br><span class="line">                        self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:无法同时存在两个相同名字的文件\n&#39;)</span><br><span class="line">                else:</span><br><span class="line">                    try:</span><br><span class="line">                        os.rename(address_str+&#39;\\&#39;+fileName, address_str+&#39;\\&#39;+to_be_changed_str+os.path.splitext(fileName)[0]+to_change_str+os.path.splitext(fileName)[1]) # 3. 文件重新命名 规则根据需求自己定</span><br><span class="line">                        num +&#x3D; 1</span><br><span class="line">                        self.log_data_text.insert(tk.END, &#39;已将\n&#39;+fileName+&#39;\n&#39;+&#39;修改为\n&#39;+fileName.replace(to_be_changed_str,to_change_str)+&#39;\n&#39;+&#39;-&#39;*20+&#39;\n&#39;)</span><br><span class="line">                    except:</span><br><span class="line">                        self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;ERROR:添加错误，请点击菜单栏反馈bug\n&#39;)</span><br><span class="line">            fileList &#x3D; os.listdir(address_str)</span><br><span class="line">            self.latest_fileList_text.insert(tk.END,&#39;\n&#39;.join(fileList))</span><br><span class="line">            self.log_data_text.insert(tk.END,current_time+&#39; &#39;+&#39;共修改&#39;+str(num)+&#39;个文件&#39;+&#39;\n&#39;+&#39;&#123;:■^26&#125;&#39;.format(&#39;本次修改结束&#39;)+&#39;\n&#39;)</span><br><span class="line">            self.log_data_text.see(tk.END)</span><br><span class="line"></span><br><span class="line">def gui_start():</span><br><span class="line">    window &#x3D; tk.Tk()</span><br><span class="line">    MY_PORTAL &#x3D; MY_GUI(window)</span><br><span class="line">    MY_PORTAL.set_window()</span><br><span class="line">    window.mainloop()</span><br><span class="line"></span><br><span class="line">gui_start()#启动</span><br></pre></td></tr></table></figure><h2 id="pyinstaller反编译代码《pyinstxtractor-py》"><a href="#pyinstaller反编译代码《pyinstxtractor-py》" class="headerlink" title="pyinstaller反编译代码《pyinstxtractor.py》"></a>pyinstaller反编译代码《pyinstxtractor.py》</h2><blockquote><p>具体使用可以自行百度<strong>pyinstxtractor.py</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">PyInstaller Extractor v1.9 (Supports pyinstaller 3.3, 3.2, 3.1, 3.0, 2.1, 2.0)</span><br><span class="line">Author : Extreme Coders</span><br><span class="line">E-mail : extremecoders(at)hotmail(dot)com</span><br><span class="line">Web    : https:&#x2F;&#x2F;0xec.blogspot.com</span><br><span class="line">Date   : 29-November-2017</span><br><span class="line">Url    : https:&#x2F;&#x2F;sourceforge.net&#x2F;projects&#x2F;pyinstallerextractor&#x2F;</span><br><span class="line"></span><br><span class="line">For any suggestions, leave a comment on</span><br><span class="line">https:&#x2F;&#x2F;forum.tuts4you.com&#x2F;topic&#x2F;34455-pyinstaller-extractor&#x2F;</span><br><span class="line"></span><br><span class="line">This script extracts a pyinstaller generated executable file.</span><br><span class="line">Pyinstaller installation is not needed. The script has it all.</span><br><span class="line"></span><br><span class="line">For best results, it is recommended to run this script in the</span><br><span class="line">same version of python as was used to create the executable.</span><br><span class="line">This is just to prevent unmarshalling errors(if any) while</span><br><span class="line">extracting the PYZ archive.</span><br><span class="line"></span><br><span class="line">Usage : Just copy this script to the directory where your exe resides</span><br><span class="line">        and run the script with the exe file name as a parameter</span><br><span class="line"></span><br><span class="line">C:\path\to\exe\&gt;python pyinstxtractor.py &lt;filename&gt;</span><br><span class="line">$ &#x2F;path&#x2F;to&#x2F;exe&#x2F;python pyinstxtractor.py &lt;filename&gt;</span><br><span class="line"></span><br><span class="line">Licensed under GNU General Public License (GPL) v3.</span><br><span class="line">You are free to modify this source.</span><br><span class="line"></span><br><span class="line">CHANGELOG</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">Version 1.1 (Jan 28, 2014)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- First Release</span><br><span class="line">- Supports only pyinstaller 2.0</span><br><span class="line"></span><br><span class="line">Version 1.2 (Sept 12, 2015)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 2.1 and 3.0 dev</span><br><span class="line">- Cleaned up code</span><br><span class="line">- Script is now more verbose</span><br><span class="line">- Executable extracted within a dedicated sub-directory</span><br><span class="line"></span><br><span class="line">(Support for pyinstaller 3.0 dev is experimental)</span><br><span class="line"></span><br><span class="line">Version 1.3 (Dec 12, 2015)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.0 final</span><br><span class="line">- Script is compatible with both python 2.x &amp; 3.x (Thanks to Moritz Kroll @ Avira Operations GmbH &amp; Co. KG)</span><br><span class="line"></span><br><span class="line">Version 1.4 (Jan 19, 2016)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Fixed a bug when writing pyc files &gt;&#x3D; version 3.3 (Thanks to Daniello Alto: https:&#x2F;&#x2F;github.com&#x2F;Djamana)</span><br><span class="line"></span><br><span class="line">Version 1.5 (March 1, 2016)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.1 (Thanks to Berwyn Hoyt for reporting)</span><br><span class="line"></span><br><span class="line">Version 1.6 (Sept 5, 2016)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.2</span><br><span class="line">- Extractor will use a random name while extracting unnamed files.</span><br><span class="line">- For encrypted pyz archives it will dump the contents as is. Previously, the tool would fail.</span><br><span class="line"></span><br><span class="line">Version 1.7 (March 13, 2017)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Made the script compatible with python 2.6 (Thanks to Ross for reporting)</span><br><span class="line"></span><br><span class="line">Version 1.8 (April 28, 2017)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Support for sub-directories in .pyz files (Thanks to Moritz Kroll @ Avira Operations GmbH &amp; Co. KG)</span><br><span class="line"></span><br><span class="line">Version 1.9 (November 29, 2017)</span><br><span class="line">-------------------------------------------------</span><br><span class="line">- Added support for pyinstaller 3.3</span><br><span class="line">- Display the scripts which are run at entry (Thanks to Michael Gillespie @ malwarehunterteam for the feature request)</span><br><span class="line"></span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">from __future__ import print_function</span><br><span class="line">import os</span><br><span class="line">import struct</span><br><span class="line">import marshal</span><br><span class="line">import zlib</span><br><span class="line">import sys</span><br><span class="line">import imp</span><br><span class="line">import types</span><br><span class="line">from uuid import uuid4 as uniquename</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class CTOCEntry:</span><br><span class="line">    def __init__(self, position, cmprsdDataSize, uncmprsdDataSize, cmprsFlag, typeCmprsData, name):</span><br><span class="line">        self.position &#x3D; position</span><br><span class="line">        self.cmprsdDataSize &#x3D; cmprsdDataSize</span><br><span class="line">        self.uncmprsdDataSize &#x3D; uncmprsdDataSize</span><br><span class="line">        self.cmprsFlag &#x3D; cmprsFlag</span><br><span class="line">        self.typeCmprsData &#x3D; typeCmprsData</span><br><span class="line">        self.name &#x3D; name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class PyInstArchive:</span><br><span class="line">    PYINST20_COOKIE_SIZE &#x3D; 24           # For pyinstaller 2.0</span><br><span class="line">    PYINST21_COOKIE_SIZE &#x3D; 24 + 64      # For pyinstaller 2.1+</span><br><span class="line">    MAGIC &#x3D; b&#39;MEI\014\013\012\013\016&#39;  # Magic number which identifies pyinstaller</span><br><span class="line"></span><br><span class="line">    def __init__(self, path):</span><br><span class="line">        self.filePath &#x3D; path</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def open(self):</span><br><span class="line">        try:</span><br><span class="line">            self.fPtr &#x3D; open(self.filePath, &#39;rb&#39;)</span><br><span class="line">            self.fileSize &#x3D; os.stat(self.filePath).st_size</span><br><span class="line">        except:</span><br><span class="line">            print(&#39;[*] Error: Could not open &#123;0&#125;&#39;.format(self.filePath))</span><br><span class="line">            return False</span><br><span class="line">        return True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def close(self):</span><br><span class="line">        try:</span><br><span class="line">            self.fPtr.close()</span><br><span class="line">        except:</span><br><span class="line">            pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def checkFile(self):</span><br><span class="line">        print(&#39;[*] Processing &#123;0&#125;&#39;.format(self.filePath))</span><br><span class="line">        # Check if it is a 2.0 archive</span><br><span class="line">        self.fPtr.seek(self.fileSize - self.PYINST20_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line">        magicFromFile &#x3D; self.fPtr.read(len(self.MAGIC))</span><br><span class="line"></span><br><span class="line">        if magicFromFile &#x3D;&#x3D; self.MAGIC:</span><br><span class="line">            self.pyinstVer &#x3D; 20     # pyinstaller 2.0</span><br><span class="line">            print(&#39;[*] Pyinstaller version: 2.0&#39;)</span><br><span class="line">            return True</span><br><span class="line"></span><br><span class="line">        # Check for pyinstaller 2.1+ before bailing out</span><br><span class="line">        self.fPtr.seek(self.fileSize - self.PYINST21_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line">        magicFromFile &#x3D; self.fPtr.read(len(self.MAGIC))</span><br><span class="line"></span><br><span class="line">        if magicFromFile &#x3D;&#x3D; self.MAGIC:</span><br><span class="line">            print(&#39;[*] Pyinstaller version: 2.1+&#39;)</span><br><span class="line">            self.pyinstVer &#x3D; 21     # pyinstaller 2.1+</span><br><span class="line">            return True</span><br><span class="line"></span><br><span class="line">        print(&#39;[*] Error : Unsupported pyinstaller version or not a pyinstaller archive&#39;)</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def getCArchiveInfo(self):</span><br><span class="line">        try:</span><br><span class="line">            if self.pyinstVer &#x3D;&#x3D; 20:</span><br><span class="line">                self.fPtr.seek(self.fileSize - self.PYINST20_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">                # Read CArchive cookie</span><br><span class="line">                (magic, lengthofPackage, toc, tocLen, self.pyver) &#x3D; \</span><br><span class="line">                struct.unpack(&#39;!8siiii&#39;, self.fPtr.read(self.PYINST20_COOKIE_SIZE))</span><br><span class="line"></span><br><span class="line">            elif self.pyinstVer &#x3D;&#x3D; 21:</span><br><span class="line">                self.fPtr.seek(self.fileSize - self.PYINST21_COOKIE_SIZE, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">                # Read CArchive cookie</span><br><span class="line">                (magic, lengthofPackage, toc, tocLen, self.pyver, pylibname) &#x3D; \</span><br><span class="line">                struct.unpack(&#39;!8siiii64s&#39;, self.fPtr.read(self.PYINST21_COOKIE_SIZE))</span><br><span class="line"></span><br><span class="line">        except:</span><br><span class="line">            print(&#39;[*] Error : The file is not a pyinstaller archive&#39;)</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">        print(&#39;[*] Python version: &#123;0&#125;&#39;.format(self.pyver))</span><br><span class="line"></span><br><span class="line">        # Overlay is the data appended at the end of the PE</span><br><span class="line">        self.overlaySize &#x3D; lengthofPackage</span><br><span class="line">        self.overlayPos &#x3D; self.fileSize - self.overlaySize</span><br><span class="line">        self.tableOfContentsPos &#x3D; self.overlayPos + toc</span><br><span class="line">        self.tableOfContentsSize &#x3D; tocLen</span><br><span class="line"></span><br><span class="line">        print(&#39;[*] Length of package: &#123;0&#125; bytes&#39;.format(self.overlaySize))</span><br><span class="line">        return True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def parseTOC(self):</span><br><span class="line">        # Go to the table of contents</span><br><span class="line">        self.fPtr.seek(self.tableOfContentsPos, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">        self.tocList &#x3D; []</span><br><span class="line">        parsedLen &#x3D; 0</span><br><span class="line"></span><br><span class="line">        # Parse table of contents</span><br><span class="line">        while parsedLen &lt; self.tableOfContentsSize:</span><br><span class="line">            (entrySize, ) &#x3D; struct.unpack(&#39;!i&#39;, self.fPtr.read(4))</span><br><span class="line">            nameLen &#x3D; struct.calcsize(&#39;!iiiiBc&#39;)</span><br><span class="line"></span><br><span class="line">            (entryPos, cmprsdDataSize, uncmprsdDataSize, cmprsFlag, typeCmprsData, name) &#x3D; \</span><br><span class="line">            struct.unpack( \</span><br><span class="line">                &#39;!iiiBc&#123;0&#125;s&#39;.format(entrySize - nameLen), \</span><br><span class="line">                self.fPtr.read(entrySize - 4))</span><br><span class="line"></span><br><span class="line">            name &#x3D; name.decode(&#39;utf-8&#39;).rstrip(&#39;\0&#39;)</span><br><span class="line">            if len(name) &#x3D;&#x3D; 0:</span><br><span class="line">                name &#x3D; str(uniquename())</span><br><span class="line">                print(&#39;[!] Warning: Found an unamed file in CArchive. Using random name &#123;0&#125;&#39;.format(name))</span><br><span class="line"></span><br><span class="line">            self.tocList.append( \</span><br><span class="line">                                CTOCEntry(                      \</span><br><span class="line">                                    self.overlayPos + entryPos, \</span><br><span class="line">                                    cmprsdDataSize,             \</span><br><span class="line">                                    uncmprsdDataSize,           \</span><br><span class="line">                                    cmprsFlag,                  \</span><br><span class="line">                                    typeCmprsData,              \</span><br><span class="line">                                    name                        \</span><br><span class="line">                                ))</span><br><span class="line"></span><br><span class="line">            parsedLen +&#x3D; entrySize</span><br><span class="line">        print(&#39;[*] Found &#123;0&#125; files in CArchive&#39;.format(len(self.tocList)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def extractFiles(self):</span><br><span class="line">        print(&#39;[*] Beginning extraction...please standby&#39;)</span><br><span class="line">        extractionDir &#x3D; os.path.join(os.getcwd(), os.path.basename(self.filePath) + &#39;_extracted&#39;)</span><br><span class="line"></span><br><span class="line">        if not os.path.exists(extractionDir):</span><br><span class="line">            os.mkdir(extractionDir)</span><br><span class="line"></span><br><span class="line">        os.chdir(extractionDir)</span><br><span class="line"></span><br><span class="line">        for entry in self.tocList:</span><br><span class="line">            basePath &#x3D; os.path.dirname(entry.name)</span><br><span class="line">            if basePath !&#x3D; &#39;&#39;:</span><br><span class="line">                # Check if path exists, create if not</span><br><span class="line">                if not os.path.exists(basePath):</span><br><span class="line">                    os.makedirs(basePath)</span><br><span class="line"></span><br><span class="line">            self.fPtr.seek(entry.position, os.SEEK_SET)</span><br><span class="line">            data &#x3D; self.fPtr.read(entry.cmprsdDataSize)</span><br><span class="line"></span><br><span class="line">            if entry.cmprsFlag &#x3D;&#x3D; 1:</span><br><span class="line">                data &#x3D; zlib.decompress(data)</span><br><span class="line">                # Malware may tamper with the uncompressed size</span><br><span class="line">                # Comment out the assertion in such a case</span><br><span class="line">                assert len(data) &#x3D;&#x3D; entry.uncmprsdDataSize # Sanity Check</span><br><span class="line"></span><br><span class="line">            with open(entry.name, &#39;wb&#39;) as f:</span><br><span class="line">                f.write(data)</span><br><span class="line"></span><br><span class="line">            if entry.typeCmprsData &#x3D;&#x3D; b&#39;s&#39;:</span><br><span class="line">            print(&#39;[+] Possible entry point: &#123;0&#125;&#39;.format(entry.name))</span><br><span class="line"></span><br><span class="line">            elif entry.typeCmprsData &#x3D;&#x3D; b&#39;z&#39; or entry.typeCmprsData &#x3D;&#x3D; b&#39;Z&#39;:</span><br><span class="line">                self._extractPyz(entry.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def _extractPyz(self, name):</span><br><span class="line">        dirName &#x3D;  name + &#39;_extracted&#39;</span><br><span class="line">        # Create a directory for the contents of the pyz</span><br><span class="line">        if not os.path.exists(dirName):</span><br><span class="line">            os.mkdir(dirName)</span><br><span class="line"></span><br><span class="line">        with open(name, &#39;rb&#39;) as f:</span><br><span class="line">            pyzMagic &#x3D; f.read(4)</span><br><span class="line">            assert pyzMagic &#x3D;&#x3D; b&#39;PYZ\0&#39; # Sanity Check</span><br><span class="line"></span><br><span class="line">            pycHeader &#x3D; f.read(4) # Python magic value</span><br><span class="line"></span><br><span class="line">            if imp.get_magic() !&#x3D; pycHeader:</span><br><span class="line">                print(&#39;[!] Warning: The script is running in a different python version than the one used to build the executable&#39;)</span><br><span class="line">                print(&#39;    Run this script in Python&#123;0&#125; to prevent extraction errors(if any) during unmarshalling&#39;.format(self.pyver))</span><br><span class="line"></span><br><span class="line">            (tocPosition, ) &#x3D; struct.unpack(&#39;!i&#39;, f.read(4))</span><br><span class="line">            f.seek(tocPosition, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">            try:</span><br><span class="line">                toc &#x3D; marshal.load(f)</span><br><span class="line">            except:</span><br><span class="line">                print(&#39;[!] Unmarshalling FAILED. Cannot extract &#123;0&#125;. Extracting remaining files.&#39;.format(name))</span><br><span class="line">                return</span><br><span class="line"></span><br><span class="line">            print(&#39;[*] Found &#123;0&#125; files in PYZ archive&#39;.format(len(toc)))</span><br><span class="line"></span><br><span class="line">            # From pyinstaller 3.1+ toc is a list of tuples</span><br><span class="line">            if type(toc) &#x3D;&#x3D; list:</span><br><span class="line">                toc &#x3D; dict(toc)</span><br><span class="line"></span><br><span class="line">            for key in toc.keys():</span><br><span class="line">                (ispkg, pos, length) &#x3D; toc[key]</span><br><span class="line">                f.seek(pos, os.SEEK_SET)</span><br><span class="line"></span><br><span class="line">                fileName &#x3D; key</span><br><span class="line">                try:</span><br><span class="line">                    # for Python &gt; 3.3 some keys are bytes object some are str object</span><br><span class="line">                    fileName &#x3D; key.decode(&#39;utf-8&#39;)</span><br><span class="line">                except:</span><br><span class="line">                    pass</span><br><span class="line"></span><br><span class="line">                # Make sure destination directory exists, ensuring we keep inside dirName</span><br><span class="line">                destName &#x3D; os.path.join(dirName, fileName.replace(&quot;..&quot;, &quot;__&quot;))</span><br><span class="line">                destDirName &#x3D; os.path.dirname(destName)</span><br><span class="line">                if not os.path.exists(destDirName):</span><br><span class="line">                    os.makedirs(destDirName)</span><br><span class="line"></span><br><span class="line">                try:</span><br><span class="line">                    data &#x3D; f.read(length)</span><br><span class="line">                    data &#x3D; zlib.decompress(data)</span><br><span class="line">                except:</span><br><span class="line">                    print(&#39;[!] Error: Failed to decompress &#123;0&#125;, probably encrypted. Extracting as is.&#39;.format(fileName))</span><br><span class="line">                    open(destName + &#39;.pyc.encrypted&#39;, &#39;wb&#39;).write(data)</span><br><span class="line">                    continue</span><br><span class="line"></span><br><span class="line">                with open(destName + &#39;.pyc&#39;, &#39;wb&#39;) as pycFile:</span><br><span class="line">                    pycFile.write(pycHeader)      # Write pyc magic</span><br><span class="line">                    pycFile.write(b&#39;\0&#39; * 4)      # Write timestamp</span><br><span class="line">                    if self.pyver &gt;&#x3D; 33:</span><br><span class="line">                        pycFile.write(b&#39;\0&#39; * 4)  # Size parameter added in Python 3.3</span><br><span class="line">                    pycFile.write(data)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    if len(sys.argv) &lt; 2:</span><br><span class="line">        print(&#39;[*] Usage: pyinstxtractor.py &lt;filename&gt;&#39;)</span><br><span class="line"></span><br><span class="line">    else:</span><br><span class="line">        arch &#x3D; PyInstArchive(sys.argv[1])</span><br><span class="line">        if arch.open():</span><br><span class="line">            if arch.checkFile():</span><br><span class="line">                if arch.getCArchiveInfo():</span><br><span class="line">                    arch.parseTOC()</span><br><span class="line">                    arch.extractFiles()</span><br><span class="line">                    arch.close()</span><br><span class="line">                    print(&#39;[*] Successfully extracted pyinstaller archive: &#123;0&#125;&#39;.format(sys.argv[1]))</span><br><span class="line">                    print(&#39;&#39;)</span><br><span class="line">                    print(&#39;You can now use a python decompiler on the pyc files within the extracted directory&#39;)</span><br><span class="line">                    return</span><br><span class="line"></span><br><span class="line">            arch.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="预支项目"><a href="#预支项目" class="headerlink" title="预支项目"></a>预支项目</h1><h2 id="opencv"><a href="#opencv" class="headerlink" title="opencv"></a>opencv</h2><h2 id="可视化"><a href="#可视化" class="headerlink" title="可视化"></a>可视化</h2><h2 id="pdf-word"><a href="#pdf-word" class="headerlink" title="pdf-word"></a>pdf-word</h2><h2 id="mysql-python搭建后端接口"><a href="#mysql-python搭建后端接口" class="headerlink" title="mysql+python搭建后端接口"></a>mysql+python搭建后端接口</h2></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;记录一下python常用的源码&quot;&gt;&lt;a href=&quot;#记录一下python常用的源码&quot; class=&quot;headerlink&quot; title=&quot;记录一下python常用的源码&quot;&gt;&lt;/a&gt;记录一下python常用的源码&lt;/h1&gt;&lt;h2 id=&quot;邮件服务&quot;&gt;&lt;a href=&quot;#邮件服务&quot; class=&quot;headerlink&quot; title=&quot;邮件服务&quot;&gt;&lt;/a&gt;邮件服务&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;用来每次部署博客以后给订阅的人自动发邮件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 邮件服务 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# coding: UTF-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import smtplib&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;from email.mime.text import MIMEText&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mailserver &amp;#x3D; &amp;quot;smtp.163.com&amp;quot;  #邮箱服务器地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;username_send &amp;#x3D; &amp;#39;******@163.com,xxx@qq.com&amp;#39;  #邮箱用户名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;password &amp;#x3D; &amp;#39;******&amp;#39;   #邮箱密码：需要使用授权码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;username_recv &amp;#x3D; &amp;#39;****@qq.com&amp;#39;  #收件人，多个收件人用逗号隔开&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mail &amp;#x3D; MIMEText(&amp;#39;xxx&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mail[&amp;#39;Subject&amp;#39;] &amp;#x3D; &amp;#39;xxx&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mail[&amp;#39;From&amp;#39;] &amp;#x3D; username_send  #发件人&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mail[&amp;#39;To&amp;#39;] &amp;#x3D; username_recv  #收件人；[]里的三个是固定写法，别问为什么，我只是代码的搬运工&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;smtp &amp;#x3D; smtplib.SMTP(mailserver,port&amp;#x3D;25) # 连接邮箱服务器，smtp的端口号是25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# smtp&amp;#x3D;smtplib.SMTP_SSL(&amp;#39;smtp.qq.com&amp;#39;,port&amp;#x3D;465) #QQ邮箱的服务器和端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;smtp.login(username_send,password)  #登录邮箱&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;smtp.sendmail(username_send,username_recv,mail.as_string())# 参数分别是发送者，接收者，第三个是把上面的发送邮件的内容变成字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;smtp.quit() # 发送完毕后退出smtp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;print (&amp;#39;success&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;自动更新更新时间&quot;&gt;&lt;a href=&quot;#自动更新更新时间&quot; class=&quot;headerlink&quot; title=&quot;自动更新更新时间&quot;&gt;&lt;/a&gt;自动更新更新时间&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;每次部署的时候自动将post的&lt;code&gt;update:&lt;/code&gt;后面的时间改成文件的修改时间&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 自动更新更新时间和文件名 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import re&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;def change_time(path):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fileList &amp;#x3D; os.listdir(path)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fb &amp;#x3D; open(&amp;#39;更新内容.txt&amp;#39;,&amp;#39;w&amp;#39;,encoding &amp;#x3D; &amp;#39;utf-8&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        hello &amp;#x3D; &amp;#39;博客更新&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fb.write(&amp;#39;&amp;#123;:⭐^10&amp;#125;\n&amp;#39;.format(hello))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for file in fileList:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            allpath &amp;#x3D; path+file&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            f &amp;#x3D; open(allpath,&amp;#39;r&amp;#39;,encoding&amp;#x3D;&amp;#39;utf-8&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            txt &amp;#x3D; f.read() #读取内容&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            f.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            now &amp;#x3D; int(time.time())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            # 匹配，加入\n是为了防止匹配到文章内部代码。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            old_update &amp;#x3D; re.findall(r&amp;quot;(updated: \d&amp;#123;4&amp;#125;-\d&amp;#123;1,2&amp;#125;-\d&amp;#123;1,2&amp;#125;\s\d&amp;#123;1,2&amp;#125;:\d&amp;#123;1,2&amp;#125;:\d&amp;#123;1,2&amp;#125;\n)&amp;quot;,txt) # 正则匹配要修改的字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            file_title &amp;#x3D; re.findall(r&amp;#39;title: (.*?)\n&amp;#39;,txt)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if old_update &amp;#x3D;&amp;#x3D; []:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    old_update &amp;#x3D; [&amp;#39;updated:\n&amp;#39;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            new_update &amp;#x3D; time.strftime(&amp;#39;updated: %Y-%m-%d %H:%M:%S\n&amp;#39;,time.localtime(int(os.path.getmtime(allpath)))) # 获取文件的最后修改时间并赋值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            try:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                txt &amp;#x3D; txt.replace(old_update[0],new_update) # 替换&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            except:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                print(&amp;#39;&amp;#123;&amp;#125;有误&amp;#39;.format(file))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                continue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            else:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if now - int(os.path.getmtime(allpath)) &amp;lt; 43200:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    fi &amp;#x3D; open(allpath,&amp;#39;w&amp;#39;,encoding &amp;#x3D; &amp;#39;utf-8&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    fi.write(txt) # 写入&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    fi.close() # 关闭&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    os.rename(allpath,path+file_title[0]+os.path.splitext(allpath)[1])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    update_name &amp;#x3D; &amp;#39;《&amp;#39;+file_title[0]+&amp;#39;》&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    fb.write(&amp;#39;------------&amp;#123;&amp;#125;\n&amp;#39;.format(update_name))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fb.write(&amp;#39;\n访问地址：https:&amp;#x2F;&amp;#x2F;blog.asea.fun&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fb.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;change_time(&amp;#39;E:&amp;#x2F;blog&amp;#x2F;source&amp;#x2F;_posts&amp;#x2F;&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;自己写了一个文件名字批处理的软件&quot;&gt;&lt;a href=&quot;#自己写了一个文件名字批处理的软件&quot; class=&quot;headerlink&quot; title=&quot;自己写了一个文件名字批处理的软件&quot;&gt;&lt;/a&gt;自己写了一个文件名字批处理的软件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;网上找的都怪怪的，用起来不舒服，就自己写了一个，自由度更高，使用的是tkinter。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;未来打算更新的几个功能&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="python" scheme="https://asea.fun/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>three.js学习笔记</title>
    <link href="https://asea.fun/post/afab6017.html"/>
    <id>https://asea.fun/post/afab6017.html</id>
    <published>2021-03-09T07:33:02.000Z</published>
    <updated>2021-03-09T07:34:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="程序结构"><a href="#程序结构" class="headerlink" title="程序结构"></a>程序结构</h1><p><img src="/images/three/three%E7%BB%93%E6%9E%84.jpg" alt></p><h1 id="live-server的坑"><a href="#live-server的坑" class="headerlink" title="live-server的坑"></a>live-server的坑</h1><p>html引入本地three.js文件后404，因为我live-server启动的地方没有包含three.js-master。应该在根目录启动。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;程序结构&quot;&gt;&lt;a href=&quot;#程序结构&quot; class=&quot;headerlink&quot; title=&quot;程序结构&quot;&gt;&lt;/a&gt;程序结构&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/images/three/three%E7%BB%93%E6%9E%84.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h1 id=&quot;live-server的坑&quot;&gt;&lt;a href=&quot;#live-server的坑&quot; class=&quot;headerlink&quot; title=&quot;live-server的坑&quot;&gt;&lt;/a&gt;live-server的坑&lt;/h1&gt;&lt;p&gt;html引入本地three.js文件后404，因为我live-server启动的地方没有包含three.js-master。应该在根目录启动。&lt;/p&gt;

    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="three.js" scheme="https://asea.fun/tags/three-js/"/>
    
  </entry>
  
  <entry>
    <title>python笔记</title>
    <link href="https://asea.fun/post/c00b24b1.html"/>
    <id>https://asea.fun/post/c00b24b1.html</id>
    <published>2021-03-04T08:26:32.000Z</published>
    <updated>2021-03-27T14:04:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发环境IDLE"><a href="#开发环境IDLE" class="headerlink" title="开发环境IDLE"></a>开发环境IDLE</h1><p><code>exit() quit()</code><br>shift + 右键打开命令行<br><code>ctrl + o</code><br><code>ctrl + n</code> #交互界面下<br><code>ctrl + q</code><br><code>alt + 3/4</code> 注释与解除 注释：##<br><code>f5</code> run<br>pypi.org 库网址</p><hr><h1 id="pip-命令"><a href="#pip-命令" class="headerlink" title="pip 命令"></a>pip 命令</h1><p><code>pip list</code><br><code>pip install package1 package2</code><br><code>pip install --upgrade package</code><br><code>pip uninstall package</code></p><hr><h1 id="模块导入"><a href="#模块导入" class="headerlink" title="模块导入"></a>模块导入</h1><ul><li><strong>三种导入方式:</strong><ul><li>导入整个模块 <code>import模块名as模块的别名（自定义）</code></li><li>明确导入模块中的特定对象 <code>from模块名import对象名as别名</code></li><li>导入特定模块中的所有对象 <code>from 模块名 import *</code> (不建议)</li></ul></li></ul><hr><h1 id="变量及数据类型"><a href="#变量及数据类型" class="headerlink" title="变量及数据类型"></a>变量及数据类型</h1><h2 id="命名规范"><a href="#命名规范" class="headerlink" title="命名规范"></a>命名规范</h2><ol><li><p>变量名必须以字母或下划线开头，不能以数字开头。·但下划线开头的变量在Python中有特殊含义。</p></li><li><p>变量名中不能有空格或标点符号。(括号、引号、逗号、斜线、反斜线、冒号、句号、问号等）。”</p></li><li><p>不能使用关键字作为变量名。关键字( keyword，也称为保留字，Python3版本中共有33个)。</p></li><li><p>不建议使用系统内置的模块名、类型名或函数名以及已导入的模块名及其成员名作为变量名，这会改变其类型和含义，甚至会导致4 其他代码无法正常执行。</p></li><li><p>变量名对英文字母的大小写敏感绶即要区分大小写。例如:a与A是不同的变量。</p></li><li><p>Python3版本可以使用中文。</p></li><li><p>变量的值是可以变化的，类型也随之发生改变。比如:<code>a = 3 ; a = &quot;3&quot;</code><br>小结:Python采用大、小写字母，数字，下划线，汉字等字符及其组合进行命名，长度没有限制，但是<em>首字符不能是数字</em> ，不能出现空格与标点符号，大小写敏感，不能与关键字相同。(不建议使用中文等非英语语言字符)。</p></li></ol><h3 id="查看已有关键字"><a href="#查看已有关键字" class="headerlink" title="查看已有关键字"></a>查看已有关键字</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import keyword</span><br><span class="line">keyword.kwlist</span><br><span class="line">[&#39;False&#39;, &#39;None&#39;, &#39;True&#39;, &#39;and&#39;, &#39;as&#39;, &#39;assert&#39;, &#39;async&#39;, &#39;await&#39;, &#39;break&#39;, &#39;class&#39;, &#39;continue&#39;, &#39;def&#39;, &#39;del&#39;, &#39;elif&#39;, &#39;else&#39;, &#39;except&#39;, &#39;finally&#39;, &#39;for&#39;, &#39;from&#39;, &#39;global&#39;, &#39;if&#39;, &#39;import&#39;, &#39;in&#39;, &#39;is&#39;, &#39;lambda&#39;, &#39;nonlocal&#39;, &#39;not&#39;, &#39;or&#39;, &#39;pass&#39;, &#39;raise&#39;, &#39;return&#39;, &#39;try&#39;, &#39;while&#39;, &#39;with&#39;, &#39;yield&#39;]</span><br></pre></td></tr></table></figure><h3 id="查看已有内置对象名"><a href="#查看已有内置对象名" class="headerlink" title="查看已有内置对象名"></a>查看已有内置对象名</h3><p><code>dir(__builtins__)</code></p><h2 id="数字类型"><a href="#数字类型" class="headerlink" title="数字类型"></a>数字类型</h2><h3 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h3><p>10 2 8 16进制转换：<code>int() bin() oct() hex()</code>，其中0b 0o 0x 代表2 8 16进制。<br><code>int(&#39;111&#39;,6)</code></p><h3 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h3><p><code>float(&quot;3.5&quot;)</code> = 3.5</p><h3 id="复数"><a href="#复数" class="headerlink" title="复数"></a>复数</h3><p><code>complex(3,5)</code> = (3+5j)<br><code>complex(&#39;3+5j&#39;)</code> = (3+5j)</p><h3 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h3><p><code>abs()</code><br><code>divmond()</code><br><code>pow()</code><br><code>round()</code></p><p><img src="/images/python/%E5%87%BD%E6%95%B0.jpg" alt></p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><p><code>+ - * / // % **</code></p><p>字符串相加即为拼接，集合相减为差集，字符串*3即为重复3次</p><p><strong>优先级</strong></p><ol><li><code>**</code></li><li><code>* / % //</code></li><li><code>+ -</code></li></ol><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p><code>== != &gt; &lt; &gt;= &lt;=</code><br>返回值为boolean</p><h3 id="赋值运算符（加强赋值操作符）"><a href="#赋值运算符（加强赋值操作符）" class="headerlink" title="赋值运算符（加强赋值操作符）"></a>赋值运算符（加强赋值操作符）</h3><p><code>= += -= *= /= //= %= **=</code><br>中间不能出现空格<br><code>b *= 3+2</code>  先算=右侧</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p><code>and or not</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">x and y</span><br><span class="line">x or y</span><br><span class="line">not x</span><br></pre></td></tr></table></figure><p>比较运算符优先于逻辑运算符</p><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p><img src="/images/python/%E4%BC%98%E5%85%88%E7%BA%A7.jpg" alt></p><h3 id="成员运算符"><a href="#成员运算符" class="headerlink" title="成员运算符"></a>成员运算符</h3><p>in |  not in<br>返回boolean</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1 in (1,2)</span><br><span class="line">true</span><br></pre></td></tr></table></figure><h3 id="身份运算符"><a href="#身份运算符" class="headerlink" title="身份运算符"></a>身份运算符</h3><p>is |    is not<br><code>x is y</code>等价于<code>id(x) == id(y)</code></p><h3 id="集合运算符"><a href="#集合运算符" class="headerlink" title="集合运算符"></a>集合运算符</h3><table><thead><tr><th>&amp;</th><th>|</th><th>-</th><th>^</th></tr></thead><tbody><tr><td>交集</td><td>并集</td><td>差集</td><td>对称差集</td></tr></tbody></table><p>对称差集即为<code>(a | b) - (a &amp; b)</code></p><hr><h1 id="组合数据"><a href="#组合数据" class="headerlink" title="组合数据"></a>组合数据</h1><p><img src="/images/python/%E7%BB%84%E5%90%88%E6%95%B0%E6%8D%AE.jpg" alt></p><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>str():将其他序列转化为字符串，会把集合完全转化为字符串<br>比如<br>a = str(set1)<br>a[0]<br>‘(‘<br>把字典转化成str的时候好像冒号后面会多个空格</p><h3 id="字符串的创建"><a href="#字符串的创建" class="headerlink" title="字符串的创建"></a>字符串的创建</h3><ol><li>交互式<code>a</code>与<code>print(a)</code>的区别是少个<code>‘’</code></li><li>多行字符串内敲入回车会换行，可以加<code>\</code>防止换行。<code>\n</code>表示换行。</li><li>多行字符串用<code>&#39;&#39;&#39;三单&#39;&#39;&#39;</code>或者<code>&quot;&quot;&quot;三双&quot;&quot;&quot;</code>具体可参考：<a href="https://blog.csdn.net/woainishifu/article/details/76105667">《Python中单引号，双引号，3个单引号及3个双引号的区别》</a></li><li>反斜杠<code>\</code>的用处<ol><li>续行符</li><li>转义符： <code>\n</code>表示换行符</li></ol></li><li><code>str = &quot;&quot;&quot;他说：&quot;你好。&quot; &quot;&quot;&quot;</code> 后面四个<code>&quot;</code>必须分成1+3</li></ol><h3 id="字符串的索引与切片"><a href="#字符串的索引与切片" class="headerlink" title="字符串的索引与切片"></a>字符串的索引与切片</h3><ol><li><strong>索引</strong><code>index</code></li><li><strong>切片</strong><code>slice</code>，适用于字符串、列表、元组 <ul><li><strong>格式</strong>： <code>字符串名[开始索引:结束索引:方向与步长]</code></li><li><strong>注意</strong>:<ul><li>结束索引不包括在内，即左闭右开；步长默认为一。</li><li>从头开始：<code>str[:3:2]</code></li><li>到末尾结束： <code>str[2::3]</code></li></ul></li></ul></li><li><strong>由字符到索引</strong><br><code>str.index(&#39;A&#39;)</code>查询的是首次出现的index</li></ol><h3 id="字符串的运算符"><a href="#字符串的运算符" class="headerlink" title="字符串的运算符"></a>字符串的运算符</h3><table><thead><tr><th>+: 拼接</th><th>*： 重复</th><th>成员运算符：in/not in</th><th>比较运算符：&gt; &lt; &gt;=…</th></tr></thead></table><blockquote><p>字符串的比较标准：ASCII码，Unicode编码值</p></blockquote><ul><li>升序 A—Z—a—z</li><li>数字从小到大</li><li>若混合排序： 数字 &lt; 大写字母&lt;小写字母</li><li>多个字符串比较时，从首位开始逐步比较。</li><li><code>chr()</code> 返回Unicode编码值对应的字符<br><code>ord()</code> 返回编码值，如<code>ord(&#39;1&#39;)</code></li></ul><h3 id="字符串格式化（format-）"><a href="#字符串格式化（format-）" class="headerlink" title="字符串格式化（format()）"></a>字符串格式化（format()）</h3><p><code>&#39;你好，我是&#123;&#125;，是&#123;&#125;的爸爸。&#39;.format(&#39;Linda&#39;,&#39;Mia&#39;)</code><br><code>&#39;你好，我是&#123;1&#125;，是&#123;0&#125;的爸爸。&#39;.format(&#39;Linda&#39;,&#39;Mia&#39;)</code></p><blockquote><p><code>&#123;&#125;</code>里面可以填写index，用来匹配format()里的参数，从0开始。<br><code>&#39;你好，我是&#123;&#125;，&#123;&#123;是&#123;&#125;的爸爸。&#125;&#125;&#39;.format(&#39;Linda&#39;,&#39;Mia&#39;)</code><br>当想输出<code>&#123;&#125;</code>的时候，需要写成<code>&#123;&#123;&#125;&#125;</code>，此处{}用来转义。</p></blockquote><p><del>此处有待补充</del></p><h3 id="字符串函数汇总"><a href="#字符串函数汇总" class="headerlink" title="字符串函数汇总"></a>字符串函数汇总</h3><ol><li>参考：<a href="https://blog.csdn.net/weixin_43158056/article/details/92798114">字符串常用方法汇总</a></li><li><code>eval()</code>去掉最外侧的引号并以Python语句输出</li><li>一些图片</li></ol><p><img src="/images/python/%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0.jfif" alt><br><img src="/images/python/char.jfif" alt><br><img src="/images/python/char2.jfif" alt><br><img src="/images/python/char3.jfif" alt></p><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><table><thead><tr><th>(元组)</th><th>[列表]</th><th>{字典}</th><th>{集合}</th></tr></thead><tbody><tr><td>不可更改</td><td>可更改</td><td>可更改</td><td>可更改，元素不可重复</td></tr></tbody></table><ol start="0"><li>元组是不能修改的，只能再生成新的元组<br><code>tuple = ()</code></li><li>两个类型不一样<br><code>tuple = (1)</code><br><code>tuple = (1,)</code></li><li>取值<br><code>tuple[1]</code><br><code>tuple[2:5]</code></li><li>拼接<br><code>tuple[1:3]+ tuple[3:5]</code><br>注意单个元组如：<code>tuple[2]</code>不是元组，是不能用来和元组拼接的。</li><li>方法<br><code>len()</code><br><code>max()</code><br><code>min()</code><br><code>tuple(seq)</code><br><code>.count()</code><br><code>.index()</code> 查第一次出现的数据的索引</li><li>比较<br>元组内部的元素一般为同一种，如果不统一的话在进行某些操作的时候会报错。</li><li>遍历<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- for --&gt;</span><br><span class="line">for i in range(len(tuple)):</span><br><span class="line">    print(i)</span><br><span class="line">for i in tuple:</span><br><span class="line">    print(tuple[i])</span><br><span class="line">&lt;!-- while --&gt;</span><br><span class="line">i &#x3D; 0</span><br><span class="line">while i&lt;len(tuple):</span><br><span class="line">    print(tuple[i])&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2></li><li>创建列表<ol><li>普通创建<br><code>list = [&#39;&#39;,&#39;&#39;,&#39;&#39;...]</code><br><code>list = [1,2,3...]</code> </li><li>由字符串创建<br><code>list1 = list(&#39;abcde&#39;)</code></li></ol></li><li>方法<ol><li>增加<br>.insert(索引,数据) 指定位置插入<br>.append(数据) 末尾追加数据<br>.extend(列表2) 拼接列表，即为list1 + list2 </li><li>删除<br>del list[索引] 删除指定元素<br>.remove(数据) 删除第一次出现的数据<br>.pop() 删除末尾的数据<br>.pop(索引) 删除指定数据<br>.clear() 清空 </li><li>修改<br>list[索引] = 数据</li><li>查询<br>list[索引]<br>.index(数据) 第一次出现的索引<br>len() 长度<br>.count(数据) 统计次数</li><li>排序<br><img src="/images/python/sort.png" alt></li><li>相加相乘<br><code>list1 + list2</code> 拼接<br><code>list2 = list1 * 3</code> 复制三次</li><li>复制</li></ol> <strong>【有待补充】</strong></li></ol><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p><code>del()</code><br><code>pop</code><br><code>if &#39;&#39; in d:</code><br><code>for key in d.keys():</code><br><code>for value in d.values():</code><br><code>.clear</code></p><p><code>list(dic) = list(dic.keys())</code> 只有keys<br><code>list(dic.values())</code><br><code>list(dic.items())</code><br><code>tuple</code> 一样<br><code>for x in dic:</code><br>    <code>print(x)</code> #输出只有keys<br><code>for x in dic.items():</code> #输出键值对</p><blockquote><p>while不能直接遍历字典 需要转化为tuple/列表，这样才有索引，才能通过索引遍历。</p></blockquote><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><blockquote><p>集合中间只能包含不可变的数据：如数字、字符串、元组。（唯一性）</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">set1 &#x3D; &#123;1,2,3,4&#125;</span><br><span class="line">set2 &#x3D; &#123;1,2,1,2&#125; #自动去重</span><br><span class="line">set3 &#x3D; &#123;[3,4],1,2&#125; #报错</span><br><span class="line">&lt;!-- 空集合 空字典 空元组的创建 --&gt;</span><br><span class="line">元组名 &#x3D; ()</span><br><span class="line">字典名 &#x3D; &#123;&#125;</span><br><span class="line">集合名 &#x3D; set()</span><br></pre></td></tr></table></figure><blockquote><p>字符串转化为集合会拆分字母，且自动去重，无序。字典转化为集合只会呈现keys。</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; set(range(1,9))</span><br><span class="line">&#123;1, 2, 3, 4, 5, 6, 7, 8&#125; </span><br><span class="line">&lt;!-- 声明列表 --&gt;</span><br><span class="line">s &#x3D; set(&#39;python&#39;)</span><br><span class="line">s &#x3D; frozenset(&#39;python&#39;)</span><br><span class="line">&lt;!-- 方法 --&gt;</span><br><span class="line">.add(&#39;0&#39;)</span><br><span class="line">.update([update])</span><br><span class="line">.remove()</span><br><span class="line">.clear</span><br><span class="line">if 2 in s:</span><br><span class="line">for e in s:</span><br></pre></td></tr></table></figure><table><thead><tr><th>表示</th><th>含义</th><th>方法</th></tr></thead><tbody><tr><td>s = s1 | s2</td><td>并集</td><td>s1.union(s2)</td></tr><tr><td>s = s1 &amp; s2</td><td>交集</td><td>s1.intersection(s2)</td></tr><tr><td>s = s1 - s2</td><td>差集</td><td>s1.difference(s2)</td></tr><tr><td>s = s1 ^ s2</td><td>两集合中不重复的元素</td><td>s1.symmetric_difference(s2)</td></tr></tbody></table><p>参考1：<a href="https://blog.csdn.net/weixin_44489823/article/details/100533920">python 集合比较（交集、并集，差集）</a><br>参考2：<a href="https://www.runoob.com/python3/python3-set.html#setmethod">集合方法参考</a></p><hr><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="杂碎知识点"><a href="#杂碎知识点" class="headerlink" title="杂碎知识点"></a>杂碎知识点</h2><p>return多个返回值：<br><code>return sum,product</code><br>返回值默认显示为元组<code>(1,2)</code><br>还可以按需求为其它的形式如：<br>列表：<code>return[sum,product]</code></p><h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><p><code>def fun1(x):</code><br><code>help(fun1)</code><br><code>dir(fun1)</code><br><code>fun1.</code></p><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><table><thead><tr><th>L</th><th>E</th><th>G</th><th>B</th></tr></thead><tbody><tr><td>局部</td><td>闭包外</td><td>全局</td><td>内建</td></tr></tbody></table><p>函数内部声明<code>global a</code><br><code>if elif else try except for while</code>不会引入新的作用域，其中定义的变量外部也可以访问。 </p><h2 id="基本函数"><a href="#基本函数" class="headerlink" title="基本函数"></a>基本函数</h2><p>斐波那契数列的递归函数<br><code>input() | age = input(&#39;your age:&#39;)</code><br><code>raw_input()</code>只存在于python2，不管输入什么的都是字符串<br><code>print()</code><br><code>int()</code><br><code>print(value1,value2,value3...,step = &#39;\t&#39;,end = &#39;\n&#39;, file = &#39;sys.stdout&#39;)</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i in range(1,5)</span><br><span class="line">    print(i,end&#x3D;&#39;&#39;) #输出不换行</span><br></pre></td></tr></table></figure><p>写入文件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">with open (&#39;test.txt&#39;,&#39;w&#39;) as file01:</span><br><span class="line">    print(&#39;hello&#39;,file &#x3D; file01)</span><br><span class="line">with open (&#39;test02.txt&#39;,&#39;w&#39;) as file02:</span><br><span class="line">    file02.write(&#39;hello&#39;)</span><br></pre></td></tr></table></figure><h2 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h2><p>工厂函数：<code>list()</code> <code>tuple()</code> <code>dict()</code> <code>set()</code> <code>int()</code> <code>str()</code></p><h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h2><p><img src="/images/python/%E6%95%B0%E5%AD%A6%E5%87%BD%E6%95%B0.jfif" alt></p><hr><h1 id="模拟笔记"><a href="#模拟笔记" class="headerlink" title="模拟笔记"></a>模拟笔记</h1><h2 id="杂碎知识点记忆"><a href="#杂碎知识点记忆" class="headerlink" title="杂碎知识点记忆"></a>杂碎知识点记忆</h2><p><code>eval(&#39;代码&#39;)</code> 执行其中的代码，并返回值<br><code>str.split()</code> 分割，返回列表，默认以空格分割<br><code>&#123;:-&gt;25,&#125;.format()</code> 格式化输出，注意-&gt;一起使用<br>python3.x <code>input()</code> 返回值是str，如需格式化输出等，可用<code>int()</code>、<code>eval()</code>转换为整数 ，<code>eval()</code>就是<strong>去掉引号</strong><br>&lt;填充&gt;&lt;对齐/&lt;宽度&gt;&lt;,&gt;&lt;.精度&gt;&lt;类型&gt;等六个字段，<br><code>for i in range()</code> i从0开始<br><code>b = 1,2,3</code><br><code>type(b) = tuple</code><br><code>type(eval（&#39;1,2,3&#39;)) = tuple</code><br><code>jieba.lcut()</code> 返回值是<strong>列表</strong><br><code>list.reverse()</code>  会改变原来的列表，而且<strong>没有返回值</strong><br>参考1：<a href="https://blog.csdn.net/mingyuli/article/details/81604795">print(s[::-1])</a><br>参考2<a href="cnblogs.com/wc-chan/p/8080765.html">同时给多个变量赋值</a><br><code>a, b = 0, 1</code><br><code>random</code> 之能生成0.0-1.1之间的数，<code>randint</code>可以指定（1，2）经过实测，是[1,2]</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ifxxx:</span><br><span class="line">elif xxx:</span><br><span class="line">elif xxx:</span><br><span class="line">else:</span><br></pre></td></tr></table></figure><p><code>print(&quot;&#123;:+^11&#125;&quot;.format(chr(n-1)+chr(n)+chr(n+1)))</code>字符串直接相加就行<br>输入多个数  <code>a,b,c = eval(input())</code><br><code>try except</code><br><code>int(a) == a</code><br><code>turtle.seth</code><br><code>turtle.left</code><br><code>str.split</code>不改变原来值<br><a href="https://www.cnblogs.com/huigebj/p/11433896.html">python3排序 sorted(key=lambda)</a><br>常用的用字典统计个数<br><code>d[i] = d.get[i]+1</code><br>如果是<code>readlines</code>读写进来的列表，其中的元素含有<code>\n</code>字符，算作一个字符，素以向字典添加的时候需要去掉，即为<code>d[i][:-1] = d.get[i][:-1]+1</code><br><code>if len(name.split()) == 1:</code> 记录一行有两个名字的有效票数问题<br>判断数据是否在字典里，不管是key还是value都可以用<code>if data in d:</code><br>print输出多个数据的时候，可以用format格式化输出 <code>print(&#39;&#123;&#125;&#123;&#125;&#123;&#125;&#39;.format(a,b,c))</code><br>文件内容的遍历：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file &#x3D; open(&#39;xxx.txt&#39;,&#39;rb&#39;)</span><br><span class="line">for line in file:</span><br><span class="line">    print(line)</span><br></pre></td></tr></table></figure><h2 id="盲点"><a href="#盲点" class="headerlink" title="盲点"></a>盲点</h2><ul><li><input disabled type="checkbox"> 位运算符</li><li><input disabled type="checkbox"> 优先级 </li><li><input disabled type="checkbox"> 可变长参数</li><li><input disabled type="checkbox"> 格式化输出</li><li><input checked disabled type="checkbox"> 序列的方法</li><li><input checked disabled type="checkbox"> 用字典统计数目</li><li><input disabled type="checkbox"> 字符串中的数字怎么比较</li><li><input disabled type="checkbox"> format参数</li><li><input disabled type="checkbox"> 字符串的一些函数</li></ul><hr><h1 id="软件技术基础"><a href="#软件技术基础" class="headerlink" title="软件技术基础"></a>软件技术基础</h1><p>软件 = 程序+ 文档 = 数据结构+算法+文档</p><h1 id="选择题笔记"><a href="#选择题笔记" class="headerlink" title="选择题笔记"></a>选择题笔记</h1><blockquote><p>x*<em>y的作用是计算x的y次幂。<br>x//y的作用是计算x与y的整数商，即不大于x与y之商的最大整数。<br>x%y的作用是计算x与y之商的余数。<br>表达式中的运算符中，\</em>*的运算级最高，所以先计算4**2，即3*4**2//8%7=3*16//8%7=48//8%7=6%7=6。<br>C语言是静态编译语言，Python语言是脚本语言    静态语言和脚本语言，静态语言采用编译方式执行，脚本语言采用解释方式执行。<br>Python语言中的浮点数类型必须带有小数部分，小数部分可以是0。<br>一般代码不需要缩进，顶行编写且不留空白。当表示分支、循环、函数、类等程序含义时，在if、while、for、def、class等保留字所在完整语句后通过英文冒号结尾并在之后进行缩进，表明后续代码与紧邻无缩进语句的所属关系。<br>代码编写中，缩进可以用Tab键实现，也可以用多个空格（一般是4个空格）实现，但两者不混用。不会增加编程难度。<br>Python采用大写字母、小写字母、数字、下划线和汉字等字符及其组合进行命名，但首字符不能是数字。<br>Python保留字是大小写敏感的，True是保留字，true不是。<br>sum不是保留字，可以被当做变量使用。finally是保留字。<br>id()函数是Python内置函数之一，作用是获取对象的内存地址，返回对象的内存地址（是一个正整数）。<br>Python语言的三个重要特点：<br>（1）通用性：Python语言可以用于几乎任何与程序设计相关应用的开发，不仅适合训练编程思维，更适合诸如数据分析、机器学习、人工智能、Web开发等具体的技术区域。<br>（2）语法简洁。<br>（3）生态高产：Python解释器提供了几百个内置类和函数库，此外，世界各地程序员通过开源社区贡献了十几万个第三方函数库。<br>除此之外，还有一些具体特点：<br>（1）平台无关。<br>（2）强制可读。<br>（3）支持中文。<br>count    </p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; import keyword</span><br><span class="line">&gt;&gt;&gt; keyword.kwlist</span><br><span class="line">[&#39;False&#39;, &#39;None&#39;, &#39;True&#39;, &#39;and&#39;, &#39;as&#39;, &#39;assert&#39;, &#39;break&#39;, &#39;class&#39;, &#39;continue&#39;, &#39;def&#39;, &#39;del&#39;, &#39;elif&#39;, &#39;else&#39;, &#39;except&#39;, &#39;finally&#39;, &#39;for&#39;, &#39;from&#39;, &#39;global&#39;, &#39;if&#39;, &#39;import&#39;, &#39;in&#39;, &#39;is&#39;, &#39;lambda&#39;, &#39;nonlocal&#39;, &#39;not&#39;, &#39;or&#39;, &#39;pass&#39;, &#39;raise&#39;, &#39;return&#39;, &#39;try&#39;, &#39;while&#39;, &#39;with&#39;, &#39;yield&#39;]</span><br></pre></td></tr></table></figure><blockquote><p>type(type(‘45’))输出为&lt;class ‘type’&gt;。<br>以下保留字不用于循环逻辑的是<code>try</code><br><code>s[0:4]</code>表示截取字符串正向第1个字符1到正向第5个字符5（不包括5）之间的字符，即’1234’。<br>乘除和取模取余同级先计算<code>5%6*2//8=5*2//8=10//8=1</code>，再计算<code>3+1=4</code>。<br>**是数值运算操作符。<br>&amp;是按位与运算符，&amp;=则是对应的二元操作符。<br>^是按位异或运算符。<br>保留字大小写敏感，False是保留字，false不是保留字。<br>if不用于异常处理逻辑，用于分支结构。<code>try</code> <code>else</code> <code>finally</code>都用于异常处理<br>python 不是网络编程语言<br>Python中出现SyntaxError一般表示语法错误，如未在<code>if , elif , else , for , while , class ,def</code> 声明末尾添加”:”，导致该语句无法解释执行。<br>int()函数用于将一个字符串或数字转换为整型，字符串’100/3’中有”/“，该文本不能转化成数值，参数无效，会报ValueError的错误。<br>random.random()表示取随机数，数值的类型是float型，<br>uniform(a,b)：生成一个[a,b]之间的随机小数，3.993002365820678超出了范围。<br>判断字符串内是否有子字符串，可以用<code>if xx in str:</code>或<code>if str.coune(&#39;xx&#39;) &gt;0:</code><br><code>ls.append(line.strip(&#39;\n&#39;).split(&#39;,&#39;))</code></p></blockquote><p><strong>👇👇👇这是练习的一道题，卡在一个点出不来了记录一下，简而言之就是👇👇👇</strong></p><ol><li>建议把f.read()保存到一个变量里，然后f.close()。</li><li>List.sort会改变原来的列表，而且没有返回值！！！！😭<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import jieba</span><br><span class="line">d &#x3D; &#123;&#125;</span><br><span class="line">def print_most_word (path,year):</span><br><span class="line">    f &#x3D; open(path,&#39;r&#39;)</span><br><span class="line">    txt &#x3D; f.read()</span><br><span class="line">    f.close()</span><br><span class="line">    wordList &#x3D; jieba.lcut(txt)</span><br><span class="line">    for word in wordList:</span><br><span class="line">        if len(word) &gt;1:</span><br><span class="line">            d[word] &#x3D; d.get(word,0)+1</span><br><span class="line">    dls&#x3D; list(d.items())</span><br><span class="line">    dls.sort(key &#x3D; lambda x:x[1],reverse &#x3D; True)</span><br><span class="line">    print(str(year)+&#39;:&#39;,end&#x3D;&#39;&#39;)</span><br><span class="line">    for i in range(10):</span><br><span class="line">        if i &#x3D;&#x3D;:</span><br><span class="line">            print(&#39;&#123;&#125;:&#123;&#125;&#39;.format(dls[i][0],dls[i][1]))</span><br><span class="line">            continue</span><br><span class="line">        print(&#39;&#123;&#125;:&#123;&#125;,&#39;.format(dls[i][0],dls[i][1]),end&#x3D;&#39;&#39;)</span><br><span class="line">print_most_word(&#39;data2018.txt&#39;,2018)</span><br><span class="line">print_most_word(&#39;data2019.txt&#39;,2019)</span><br><span class="line"></span><br></pre></td></tr></table></figure>打开<code>txt</code>的时候看一下编码格式如果是utf-8那么打开的时候要注意是：<code>f = open(&#39;data.txt&#39;,&#39;r&#39;,encoding=&#39;utf-8&#39;)</code><br>注意如果一不小心把<code>r</code>写成了<code>w</code>，文件就会清空了！！</li></ol><h1 id="模拟考试知识点总结"><a href="#模拟考试知识点总结" class="headerlink" title="模拟考试知识点总结"></a>模拟考试知识点总结</h1><p>遍历字符串：<br><code>for i in string1:</code><br><code>for i in len(string1):</code><br>统计字符串的某个字符的个数：<br><code>sting.count(&#39;xxx&#39;)</code><br>格式化输出的进制以及大小写<br>字符串索引是[index]<br><a href="https://blog.csdn.net/laochu250/article/details/67649210">《python list转换字符串报错TypeError: sequence item 0: expected str instance, int found》</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 提取示例 --&gt;</span><br><span class="line">while True:</span><br><span class="line">    s &#x3D; input(&quot;请输入不带数字的文本:&quot;)</span><br><span class="line">    a &#x3D; 0</span><br><span class="line">    for i in range(10):</span><br><span class="line">        if str(i)  in s:</span><br><span class="line">            a &#x3D;1</span><br><span class="line">            break</span><br><span class="line">    if a &#x3D;&#x3D; 0:</span><br><span class="line">        break</span><br><span class="line">print(len(s))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>turtle.seth()</code>是设置<code>turtle</code>的角度，<code>turtle.left()</code>是改变角度</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">f &#x3D; open(&#39;论语-网络版.txt&#39;,&#39;r&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">txt &#x3D; f.readlines()</span><br><span class="line">f.close()</span><br><span class="line">f &#x3D; open(&#39;原文.txt&#39;,&#39;w&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">ls&#x3D;[]</span><br><span class="line">can_write &#x3D; False</span><br><span class="line">for line in txt:</span><br><span class="line">    if &#39;【原文】&#39; in line:</span><br><span class="line">        can_write &#x3D; True</span><br><span class="line">        continue</span><br><span class="line">    if &#39;【&#39; in line and &#39;【原文】&#39; not in line:</span><br><span class="line">        can_write &#x3D; False</span><br><span class="line">    if can_write:</span><br><span class="line">        if line !&#x3D; &#39;\n&#39;:</span><br><span class="line">            for i in range(20):</span><br><span class="line">                remove_str &#x3D; &#39;(&#39;+str(i)+&#39;)&#39;</span><br><span class="line">                line &#x3D; line.replace(remove_str,&#39;&#39;)</span><br><span class="line">            f.write(line)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>字典里面的东西写进去：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for key in d:</span><br><span class="line">    ls.append(&quot;&#123;&#125;:&#123;&#125;&quot;.format(key, d[key]))</span><br><span class="line">fo.write(&quot;,&quot;.join(ls))</span><br><span class="line">del d[&#39; &#39;] #删除字典中的元素</span><br><span class="line">del d[&#39;\n&#39;]</span><br></pre></td></tr></table></figure><p>字符串的截取：string[:2]<br>表示第0和第1.</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">d &#x3D; input() #当输入值可能有小数时可以用eval</span><br><span class="line">if d[0] &#x3D;&#x3D; &#39;C&#39;: #一定要注意是&#x3D;&#x3D;不是&#x3D;</span><br><span class="line">    d &#x3D; float(d[1:])*1.8+32 </span><br><span class="line">    print(&#39;F&#123;:.2f&#125;&#39;.format(d)) #格式化输出的语法要记牢啊</span><br><span class="line">else:</span><br><span class="line">    d &#x3D; (float(d[1:])-32)&#x2F;1.8</span><br><span class="line">    print(&#39;C&#123;:.2f&#125;&#39;.format(d))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s &#x3D; input()</span><br><span class="line">if s[:3] &#x3D;&#x3D; &#39;RMB&#39;: #字符串截取的是左闭右开！！！</span><br><span class="line">    s &#x3D; eval(s[3:])&#x2F;6.78</span><br><span class="line">    print(&#39;USD&#123;:.2f&#125;&#39;.format(s))</span><br><span class="line">else: #不要写两个if啊，要写else</span><br><span class="line">    s &#x3D; eval(s[3:])*6.78</span><br><span class="line">    print(&#39;RMB&#123;:.2f&#125;&#39;.format(s))</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n&#x3D;float(input()) # float(xxx)其中的xxx必需全是数字，可以是小数</span><br><span class="line">print(pow(n,0),pow(n,1),pow(n,2),pow(n,3),pow(n,4),pow(n,5)) # pow是内置函数，可以用**代替</span><br></pre></td></tr></table></figure><p>all(x)：组合类型变量x中所有元素都为真时返回True，否则返回False；若x为空，返回True。<br>any(x)：组合类型变量x中任一元素都为真时返回True，否则返回False；若x为空，返回True。<br>y中第一个元素为一个空格，第二个元素为空，即null，所以第一个元素为真，第二个元素为假，all(y)输出False，any(y)输出True。<br>如果一个函数需要以多种形式来接收实参，定义时一般把位置参数放在最前面，然后是默认参数，接下来是一个星号的可变长度参数，最后是两个星号的可变长度参数。<br>例：def foo(x,<em>args,*</em>kwargs):<br>Python为源文件指定的默认字符编码是<strong>__</strong>。（UTF-8）<br>round(x,d)：对x四舍五入，保留d位小数，无参数d则返回四舍五入的整数值。<br>当文件以文本方式打开时，读写按照字符串方式；当文件以二进制方式打开时，读写按照字节流方式。<br>创建写模式x，文件不存在则创建，存在则返回异常FileExistsError。<br>打开并关闭文件的操作，需要文件的路径名，由于”&quot;是字符串中的转义符，所以表示路径时，使用”\“或”/“代替”&quot;。</p><h1 id="第三方库"><a href="#第三方库" class="headerlink" title="第三方库"></a>第三方库</h1><p>网络爬虫方向<br>requests<br><strong>scrapy</strong><br>pyspider<br>数据分析方向<br><strong>numpy<br>pandas<br>scipy</strong><br>文本处理方向<br><strong>pdfminer</strong><br>python-docx<br><strong>beautifuisoup4</strong><br>数据可视化方向<br>matplotlib<br><strong>seaborn</strong><br><strong>mayavi</strong><br>用户图形界面方向<br>    <strong>PyQt5</strong><br>wxPython<br>PyGTK<br>机器学习方向<br>scikit -learn<br><strong>TebsorFlow</strong><br>mxnet<br>web开发方向<br><strong>Diango<br>Pyramid<br>flask</strong><br>游戏开发方向<br><strong>Pygame</strong><br>Panda3D<br>cocos2d</p><h1 id="考完总结"><a href="#考完总结" class="headerlink" title="考完总结"></a>考完总结</h1><p>其实吧，不用看那么多视频，就那个模拟考软件，把题库完完整整刷完搞懂就行了，考试完全没问题（我不会告诉你都是原题的）。</p><h1 id="额外服务"><a href="#额外服务" class="headerlink" title="额外服务"></a>额外服务</h1><h2 id="邮件服务"><a href="#邮件服务" class="headerlink" title="邮件服务"></a>邮件服务</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 邮件服务 --&gt;</span><br><span class="line"># coding: UTF-8</span><br><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">mailserver &#x3D; &quot;smtp.163.com&quot;  #邮箱服务器地址</span><br><span class="line">username_send &#x3D; &#39;******@163.com&#39;  #邮箱用户名</span><br><span class="line">password &#x3D; &#39;******&#39;   #邮箱密码：需要使用授权码</span><br><span class="line">username_recv &#x3D; &#39;****@qq.com&#39;  #收件人，多个收件人用逗号隔开</span><br><span class="line">mail &#x3D; MIMEText(&#39;xxx&#39;)</span><br><span class="line">mail[&#39;Subject&#39;] &#x3D; &#39;xxx&#39;</span><br><span class="line">mail[&#39;From&#39;] &#x3D; username_send  #发件人</span><br><span class="line">mail[&#39;To&#39;] &#x3D; username_recv  #收件人；[]里的三个是固定写法，别问为什么，我只是代码的搬运工</span><br><span class="line">smtp &#x3D; smtplib.SMTP(mailserver,port&#x3D;25) # 连接邮箱服务器，smtp的端口号是25</span><br><span class="line"># smtp&#x3D;smtplib.SMTP_SSL(&#39;smtp.qq.com&#39;,port&#x3D;465) #QQ邮箱的服务器和端口号</span><br><span class="line">smtp.login(username_send,password)  #登录邮箱</span><br><span class="line">smtp.sendmail(username_send,username_recv,mail.as_string())# 参数分别是发送者，接收者，第三个是把上面的发送邮件的内容变成字符串</span><br><span class="line">smtp.quit() # 发送完毕后退出smtp</span><br><span class="line">print (&#39;success&#39;)</span><br></pre></td></tr></table></figure><h2 id="自动更新更新时间"><a href="#自动更新更新时间" class="headerlink" title="自动更新更新时间"></a>自动更新更新时间</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- 自动更新更新时间 --&gt;</span><br><span class="line">import re</span><br><span class="line">import time</span><br><span class="line">import os</span><br><span class="line">def change_time(path):</span><br><span class="line">        fileList &#x3D; os.listdir(path)</span><br><span class="line">        for file in fileList:</span><br><span class="line">            allpath &#x3D; path+file</span><br><span class="line">            f &#x3D; open(allpath,&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;)</span><br><span class="line">            txt &#x3D; f.read() #读取内容</span><br><span class="line">            f.close()</span><br><span class="line">            now &#x3D; int(time.time())</span><br><span class="line">            old_update &#x3D; re.findall(r&quot;(updated: \d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;\s\d&#123;1,2&#125;:\d&#123;1,2&#125;:\d&#123;1,2&#125;)&quot;,txt) # 正则匹配要修改的字符串</span><br><span class="line">            new_update &#x3D; time.strftime(&#39;updated: %Y-%m-%d %H:%M:%S&#39;,time.localtime(int(os.path.getmtime(allpath)))) # 获取文件的最后修改时间并赋值</span><br><span class="line">            try:</span><br><span class="line">                txt &#x3D; txt.replace(old_update[0],new_update) # 替换</span><br><span class="line">            except:</span><br><span class="line">                print(&#39;&#123;&#125;有误&#39;.format(file)) # 排查错误</span><br><span class="line">                continue</span><br><span class="line">            else:</span><br><span class="line">                if now - int(os.path.getmtime(allpath)) &lt; 86400: # 只修改当天创建或修改的文章</span><br><span class="line">                    fi &#x3D; open(allpath,&#39;w&#39;,encoding &#x3D; &#39;utf-8&#39;)</span><br><span class="line">                    fi.write(txt) # 写入</span><br><span class="line">                    fi.close() # 关闭</span><br><span class="line">change_time(&#39;E:&#x2F;blog&#x2F;source&#x2F;_posts&#x2F;&#39;) #执行代码</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;开发环境IDLE&quot;&gt;&lt;a href=&quot;#开发环境IDLE&quot; class=&quot;headerlink&quot; title=&quot;开发环境IDLE&quot;&gt;&lt;/a&gt;开发环境IDLE&lt;/h1&gt;&lt;p&gt;&lt;code&gt;exit() quit()&lt;/code&gt;&lt;br&gt;shift + 右键打开命令行&lt;br&gt;&lt;code&gt;ctrl + o&lt;/code&gt;&lt;br&gt;&lt;code&gt;ctrl + n&lt;/code&gt; #交互界面下&lt;br&gt;&lt;code&gt;ctrl + q&lt;/code&gt;&lt;br&gt;&lt;code&gt;alt + 3/4&lt;/code&gt; 注释与解除 注释：##&lt;br&gt;&lt;code&gt;f5&lt;/code&gt; run&lt;br&gt;pypi.org 库网址&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;pip-命令&quot;&gt;&lt;a href=&quot;#pip-命令&quot; class=&quot;headerlink&quot; title=&quot;pip 命令&quot;&gt;&lt;/a&gt;pip 命令&lt;/h1&gt;&lt;p&gt;&lt;code&gt;pip list&lt;/code&gt;&lt;br&gt;&lt;code&gt;pip install package1 package2&lt;/code&gt;&lt;br&gt;&lt;code&gt;pip install --upgrade package&lt;/code&gt;&lt;br&gt;&lt;code&gt;pip uninstall package&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;模块导入&quot;&gt;&lt;a href=&quot;#模块导入&quot; class=&quot;headerlink&quot; title=&quot;模块导入&quot;&gt;&lt;/a&gt;模块导入&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;三种导入方式:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;导入整个模块 &lt;code&gt;import模块名as模块的别名（自定义）&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;明确导入模块中的特定对象 &lt;code&gt;from模块名import对象名as别名&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;导入特定模块中的所有对象 &lt;code&gt;from 模块名 import *&lt;/code&gt; (不建议)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&quot;变量及数据类型&quot;&gt;&lt;a href=&quot;#变量及数据类型&quot; class=&quot;headerlink&quot; title=&quot;变量及数据类型&quot;&gt;&lt;/a&gt;变量及数据类型&lt;/h1&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="note" scheme="https://asea.fun/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>返校日记</title>
    <link href="https://asea.fun/post/b6589fc3.html"/>
    <id>https://asea.fun/post/b6589fc3.html</id>
    <published>2021-02-28T09:26:32.000Z</published>
    <updated>2021-02-28T09:27:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="大二下的返校有什么可说道的"><a href="#大二下的返校有什么可说道的" class="headerlink" title="大二下的返校有什么可说道的"></a>大二下的返校有什么可说道的</h1><h2 id="流水账一"><a href="#流水账一" class="headerlink" title="流水账一"></a>流水账一</h2><p>火车站安检的位置改了，改的挺合理，我觉得它本来就应该是这样子。在取票厅见到了很久不见的老同学，一见面其实没认出来，好家伙，那肯定认不出来，不过说了些话后感觉也还熟悉，可能是某些深处的记忆被拔出来了，整个相处还算不尴尬。我们五个人上四号车，结果却往相反的地方走，好在问了问工作人员，赶紧掉头走了很久很久才到。上车后我们坐在下铺攀谈了一会，主人过来了，于是我们便移步到道旁的位置上。没什么事干，我们决定打会牌，然而网络问题，磕磕绊绊进去之后，也就打了一把，还算有意思的结束。我坐在窗户旁边看周遭景致后撤，脑中并无任何想法。</p><h2 id="流水账二"><a href="#流水账二" class="headerlink" title="流水账二"></a>流水账二</h2><p>快到熄灯的时间，我收拾了东西爬上上铺，整个感觉奇妙的很，狭小的空间内时睡时醒，只记得做了很多噩梦，醒来的时候六点多，车上的广播开始有了动静。我翻动了一会下了床洗了脸，牙刷什么的在箱子里，也懒得去拿了。坐在窗户旁边看风景，但也没什么看到，雾气茫茫，不太能看清多远。同行的伙伴递过来面包、🍓，也没什么食欲，捏了个草莓吃了。</p><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px" src="https://img.imgdb.cn/item/603b65385f4313ce25b1d1e4.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">剩下的叶子放在了车窗旁拍了照，随即丢到了垃圾桶了，毕竟不太好看——放窗户上。</div></center><h2 id="流水账三"><a href="#流水账三" class="headerlink" title="流水账三"></a>流水账三</h2><p>上午没什么事，看了会手机没什么玩的，就站起来站着，车到站的时候咯噔了一下，差点跌倒，还好不至于出丑。后来实在无趣，上了床，开始睡觉了。大约十一点半，乘务员提醒快到站了。拿出浏览器查了查，12：05到，还早，打算再睡会，可也没啥兴致，便下了床。再次坐在窗边，旋即看到“上海站”几个打字向我跑来，原来早点了。那便收拾收拾下车吧。</p><h2 id="流水账四"><a href="#流水账四" class="headerlink" title="流水账四"></a>流水账四</h2><p>一路按照指示牌的方向，给看了健康码，一路来到三四号线的地方，跟我姐分道扬镳，开始了一个多小时的地铁之旅。一路无话，倒是宜山路转9号线，路途之远难以想象，太累了，几十级的台阶，去年帮某人抬了一路，今年换了个人，以后一定提醒带少行李。说起来三号线上看到个有意思的父亲和女儿，那父亲大概三十岁不到，短发、五官都分外精致，手里抱个“长宁美院”的袋子，女儿也六七岁的样子，一会坐下一会站起来。我顿时起了好感。说着她拉起来她爸爸指着墙上的广告说，这两个人怎么长的一样。那美院男子细心的讲解着什么镜像、什么Ps、什么广告，听起来极为有趣。<br>最后面没什么说的了，倒是等公交等不来，打的又堵车，磕磕绊绊算是回了学校，便也开始新的日子了。</p><h2 id="一些图片"><a href="#一些图片" class="headerlink" title="一些图片"></a>一些图片</h2><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px" src="https://img.imgdb.cn/item/603b67ee5f4313ce25b3b2e0.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">上海站慢慢靠近</div></center><hr><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px" src="https://img.imgdb.cn/item/603b67ee5f4313ce25b3b2e3.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">公交车站牌人山人海</div></center><hr><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px" src="https://img.imgdb.cn/item/603b67ee5f4313ce25b3b2e7.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">到宿舍后一碗泡面草草了事</div></center><hr><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px" src="https://img.imgdb.cn/item/603b67ee5f4313ce25b3b2ea.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">上铺视角</div></center>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;大二下的返校有什么可说道的&quot;&gt;&lt;a href=&quot;#大二下的返校有什么可说道的&quot; class=&quot;headerlink&quot; title=&quot;大二下的返校有什么可说道的&quot;&gt;&lt;/a&gt;大二下的返校有什么可说道的&lt;/h1&gt;&lt;h2 id=&quot;流水账一&quot;&gt;&lt;a href=&quot;#流水账一&quot; class=&quot;headerlink&quot; title=&quot;流水账一&quot;&gt;&lt;/a&gt;流水账一&lt;/h2&gt;&lt;p&gt;火车站安检的位置改了，改的挺合理，我觉得它本来就应该是这样子。在取票厅见到了很久不见的老同学，一见面其实没认出来，好家伙，那肯定认不出来，不过说了些话后感觉也还熟悉，可能是某些深处的记忆被拔出来了，整个相处还算不尴尬。我们五个人上四号车，结果却往相反的地方走，好在问了问工作人员，赶紧掉头走了很久很久才到。上车后我们坐在下铺攀谈了一会，主人过来了，于是我们便移步到道旁的位置上。没什么事干，我们决定打会牌，然而网络问题，磕磕绊绊进去之后，也就打了一把，还算有意思的结束。我坐在窗户旁边看周遭景致后撤，脑中并无任何想法。&lt;/p&gt;
&lt;h2 id=&quot;流水账二&quot;&gt;&lt;a href=&quot;#流水账二&quot; class=&quot;headerlink&quot; title=&quot;流水账二&quot;&gt;&lt;/a&gt;流水账二&lt;/h2&gt;&lt;p&gt;快到熄灯的时间，我收拾了东西爬上上铺，整个感觉奇妙的很，狭小的空间内时睡时醒，只记得做了很多噩梦，醒来的时候六点多，车上的广播开始有了动静。我翻动了一会下了床洗了脸，牙刷什么的在箱子里，也懒得去拿了。坐在窗户旁边看风景，但也没什么看到，雾气茫茫，不太能看清多远。同行的伙伴递过来面包、🍓，也没什么食欲，捏了个草莓吃了。&lt;/p&gt;
&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width:300px&quot; src=&quot;https://img.imgdb.cn/item/603b65385f4313ce25b1d1e4.jpg&quot;&gt;
    &lt;br&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;剩下的叶子放在了车窗旁拍了照，随即丢到了垃圾桶了，毕竟不太好看——放窗户上。&lt;/div&gt;
&lt;/center&gt;

&lt;h2 id=&quot;流水账三&quot;&gt;&lt;a href=&quot;#流水账三&quot; class=&quot;headerlink&quot; title=&quot;流水账三&quot;&gt;&lt;/a&gt;流水账三&lt;/h2&gt;&lt;p&gt;上午没什么事，看了会手机没什么玩的，就站起来站着，车到站的时候咯噔了一下，差点跌倒，还好不至于出丑。后来实在无趣，上了床，开始睡觉了。大约十一点半，乘务员提醒快到站了。拿出浏览器查了查，12：05到，还早，打算再睡会，可也没啥兴致，便下了床。再次坐在窗边，旋即看到“上海站”几个打字向我跑来，原来早点了。那便收拾收拾下车吧。&lt;/p&gt;
&lt;h2 id=&quot;流水账四&quot;&gt;&lt;a href=&quot;#流水账四&quot; class=&quot;headerlink&quot; title=&quot;流水账四&quot;&gt;&lt;/a&gt;流水账四&lt;/h2&gt;&lt;p&gt;一路按照指示牌的方向，给看了健康码，一路来到三四号线的地方，跟我姐分道扬镳，开始了一个多小时的地铁之旅。一路无话，倒是宜山路转9号线，路途之远难以想象，太累了，几十级的台阶，去年帮某人抬了一路，今年换了个人，以后一定提醒带少行李。说起来三号线上看到个有意思的父亲和女儿，那父亲大概三十岁不到，短发、五官都分外精致，手里抱个“长宁美院”的袋子，女儿也六七岁的样子，一会坐下一会站起来。我顿时起了好感。说着她拉起来她爸爸指着墙上的广告说，这两个人怎么长的一样。那美院男子细心的讲解着什么镜像、什么Ps、什么广告，听起来极为有趣。&lt;br&gt;最后面没什么说的了，倒是等公交等不来，打的又堵车，磕磕绊绊算是回了学校，便也开始新的日子了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>hexo deploy——避免重复输入账户密码</title>
    <link href="https://asea.fun/post/f7b96544.html"/>
    <id>https://asea.fun/post/f7b96544.html</id>
    <published>2021-02-23T02:05:28.000Z</published>
    <updated>2021-02-23T13:48:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ssh配置"><a href="#ssh配置" class="headerlink" title="ssh配置"></a>ssh配置</h1><h2><a id="1SSH_13"></a>1.生成SSH密钥</h2> <pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">cd ~/.ssh<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li></p></pre> <p>使用ssh -Keygen 生成密钥</p> <pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">ssh-keygen -t rsa -C "your_email@example.com"<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li></p></pre> <p>后面的输入均使用默认值，点击<strong>enter回车</strong>跳过</p> <p>密钥生成成功</p> <pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">Your identification has been saved in /home/you/.ssh/id_rsa.Your public key has been saved in /home/you/.ssh/id_rsa.pub.The key fingerprint is:…………………此处是密钥内容…………………… your_email@example.com<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li></p></pre> <p>点击复制</p> <h2><a id="2GitHub_38"></a>2.设置GitHub仓库的密钥</h2> <p>点击SSh and GPG keys，后新建一个SSh key</p> <p><img src="https://img-blog.csdnimg.cn/img_convert/f8c5d3ae311c550857f785e2cd599386.png" alt="image-20210103194924377"></p> <p>输入密钥的title，可自定义输入，下面的key的内容即为刚才生成的密钥内容，将其复制粘贴进去（可能会遇到问题，请继续往后看），后点击add ssh key即可创建成功</p> <p><img src="https://img-blog.csdnimg.cn/img_convert/3b39fd4fdde832109ea9f30f2d85d834.png" alt="image-20210103195020682"></p> <h2><a id="3_48"></a>3.测试配置是否成功</h2> <pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">ssh -T git@GitHub.com<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li></p></pre> <p>如果看到successfully，即为配置完成并且成功</p> <p><img src="https://img-blog.csdnimg.cn/img_convert/cae4224ec411aaff9598cae46dd7d1dd.png" alt="image-20210103195309236"></p> <h2><a id="4Git_60"></a>4.修改博客Git远程提交的地址</h2> <pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"># 修改 https 协议为 ssh 协议(仓库的ssh地址)git remote set-url origin git@github.com:xxx/xxx.git<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li></p></pre> <h2><a id="5hexo_configyml_67"></a>5.修改hexo根目录下的_config.yml文件中的远程仓库设置</h2> <pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;"># Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: git  repository: git@github.com:looles/looles.github.io.git  branch: master<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li><li style="color: rgb(153, 153, 153);">4</li><li style="color: rgb(153, 153, 153);">5</li><li style="color: rgb(153, 153, 153);">6</li></p></pre> <h2><a id="6_78"></a>6.部署推送到远程仓库</h2> <p>ub.com:looles/looles.github.io.git<br> branch: master</p> <pre class="prettyprint"><code class="has-numbering" onclick="mdcp.copyCode(event)" style="position: unset;">#### 6.部署推送到远程仓库<div class="hljs-button &#123;2&#125;" data-title="复制" data-report-click="&#123;&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;&#125;"></div></code><p class="pre-numbering" style><li style="color: rgb(153, 153, 153);">1</li><li style="color: rgb(153, 153, 153);">2</li><li style="color: rgb(153, 153, 153);">3</li></p></pre>                <div><div></div></div>                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css" rel="stylesheet">                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-80ad9b4f5b.css" rel="stylesheet">        <p>转载于: <a href="https://blog.csdn.net/qq_43729277/article/details/112150367?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control&dist_request_id=ad442711-b6a8-4c52-8eb8-433089bfe963&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3.control">2021-01-03-设解决使用hexo deploy推送代码到github仓库时重复输入账户密码</a></p><hr><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><blockquote><p>1、如果之前设置过ssh，但是部署的时候需要输入密码，可能是没有配置好，用<code>ssh -T <a href="mailto:git@GitHub.com">git@GitHub.com</a></code>检查的时候需要输入密码，则代表没有配置好。建议重头配置一次，提示是否要overwrite的时候y就行了。<br>2、另外粘贴密钥的时候可能会遇到问题 <em>“Key is invalid. You must supply a key in OpenSSH public key format github”</em>，请继续往后看。</p></blockquote><hr><h1 id="add-ssh-key报错"><a href="#add-ssh-key报错" class="headerlink" title="add ssh key报错"></a>add ssh key报错</h1><div id="article_content" class="article_content clearfix">        <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css">                <div id="content_views" class="markdown_views prism-atom-one-light">                    <svg xmlns="http://www.w3.org/2000/svg" style="display: none;">                        <path stroke-linecap="round" d="M5,0 0,2.5 5,5z" id="raphael-marker-block" style="-webkit-tap-highlight-color: rgba(0, 0, 0, 0);"/>                    </svg>                    <p>直接复制粘贴 .ssh的文件<strong>会破坏格式</strong><br> 需要打开 git bash<br> <img src="https://img-blog.csdnimg.cn/20200609194954856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYwNDI1Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br> 输入命令<code>clip &lt; ~/.ssh/id_rsa.pub</code><br> 回车后就复制到剪切板了，到github添加ssh keys的地方直接就能粘贴上<br> 如图：<br> <img src="https://img-blog.csdnimg.cn/20200609195404177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTYwNDI1Nw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>                </div><div><div></div></div>                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/markdown_views-d7a94ec6ab.css" rel="stylesheet">                <link href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/style-80ad9b4f5b.css" rel="stylesheet">        </div><p>转载于：<a href="https://blog.csdn.net/weixin_45604257/article/details/106649576">Key is invalid. You must supply a key in OpenSSH public key format github</a></p><hr><p>以上就完成了对hexo deploy的所有配置。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ssh配置&quot;&gt;&lt;a href=&quot;#ssh配置&quot; class=&quot;headerlink&quot; title=&quot;ssh配置&quot;&gt;&lt;/a&gt;ssh配置&lt;/h1&gt;&lt;h2&gt;&lt;a id=&quot;1SSH_13&quot;&gt;&lt;/a&gt;1.生成SSH密钥&lt;/h2&gt; 
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;has-numbering&quot; onclick=&quot;mdcp.copyCode(event)&quot; style=&quot;position: unset;&quot;&gt;cd ~/.ssh
&lt;div class=&quot;hljs-button &amp;#123;2&amp;#125;&quot; data-title=&quot;复制&quot; data-report-click=&quot;&amp;#123;&amp;quot;spm&amp;quot;:&amp;quot;1001.2101.3001.4259&amp;quot;&amp;#125;&quot;&gt;&lt;/div&gt;&lt;/code&gt;&lt;p class=&quot;pre-numbering&quot; style&gt;&lt;li style=&quot;color: rgb(153, 153, 153);&quot;&gt;1&lt;/li&gt;&lt;/p&gt;&lt;/pre&gt; 
&lt;p&gt;使用ssh -Keygen 生成密钥&lt;/p&gt; 
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;has-numbering&quot; onclick=&quot;mdcp.copyCode(event)&quot; style=&quot;position: unset;&quot;&gt;ssh-keygen -t rsa -C &quot;your_email@example.com&quot;
&lt;div class=&quot;hljs-button &amp;#123;2&amp;#125;&quot; data-title=&quot;复制&quot; data-report-click=&quot;&amp;#123;&amp;quot;spm&amp;quot;:&amp;quot;1001.2101.3001.4259&amp;quot;&amp;#125;&quot;&gt;&lt;/div&gt;&lt;/code&gt;&lt;p class=&quot;pre-numbering&quot; style&gt;&lt;li style=&quot;color: rgb(153, 153, 153);&quot;&gt;1&lt;/li&gt;&lt;/p&gt;&lt;/pre&gt; 
&lt;p&gt;后面的输入均使用默认值，点击&lt;strong&gt;enter回车&lt;/strong&gt;跳过&lt;/p&gt; 
&lt;p&gt;密钥生成成功&lt;/p&gt; 
&lt;pre class=&quot;prettyprint&quot;&gt;&lt;code class=&quot;has-numbering&quot; onclick=&quot;mdcp.copyCode(event)&quot; style=&quot;position: unset;&quot;&gt;Your identification has been saved in /home/you/.ssh/id_rsa.
Your public key has been saved in /home/you/.ssh/id_rsa.pub.
The key fingerprint is:
…………………此处是密钥内容…………………… your_email@example.com
&lt;div class=&quot;hljs-button &amp;#123;2&amp;#125;&quot; data-title=&quot;复制&quot; data-report-click=&quot;&amp;#123;&amp;quot;spm&amp;quot;:&amp;quot;1001.2101.3001.4259&amp;quot;&amp;#125;&quot;&gt;&lt;/div&gt;&lt;/code&gt;&lt;p class=&quot;pre-numbering&quot; style&gt;&lt;li style=&quot;color: rgb(153, 153, 153);&quot;&gt;1&lt;/li&gt;&lt;li style=&quot;color: rgb(153, 153, 153);&quot;&gt;2&lt;/li&gt;&lt;li style=&quot;color: rgb(153, 153, 153);&quot;&gt;3&lt;/li&gt;&lt;li style=&quot;color: rgb(153, 153, 153);&quot;&gt;4&lt;/li&gt;&lt;/p&gt;&lt;/pre&gt; 
&lt;p&gt;点击复制&lt;/p&gt; 
&lt;h2&gt;&lt;a id=&quot;2GitHub_38&quot;&gt;&lt;/a&gt;2.设置GitHub仓库的密钥&lt;/h2&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="deploy" scheme="https://asea.fun/tags/deploy/"/>
    
  </entry>
  
  <entry>
    <title>看垃圾</title>
    <link href="https://asea.fun/post/c337a479.html"/>
    <id>https://asea.fun/post/c337a479.html</id>
    <published>2021-02-22T06:58:54.000Z</published>
    <updated>2021-02-22T06:59:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="看垃圾"><a href="#看垃圾" class="headerlink" title="看垃圾"></a>看垃圾</h1><p>徐店长店还开着的时候就给老药罐找了这个工作。<br>老药罐因为身体原因常年服药，趁不便走动，遂听徐店长安排在南丰镇东接了家商店。只用做些简单的售卖工作，来的人自己挑，完事把钱放进箱子里就行，要是遇到有人不付账按一下手里的按钮就行了，里面集成有现成的报警电话，所以闲适得很。况且这地方空气刺鼻，人烟稀少，仅有运垃圾的司机到这讨几瓶水喝，有时也顺带进个货——这店好似个服务区。老药罐这名字喊的人多了就被传开了，三人成虎，结果最后被人叫成了老妖怪，也巧，和这地方挺搭。商店再往东二里地是个垃圾站，镇里所有的垃圾都要拉到这里来处理。南丰镇近年来大兴养殖，垃圾只多不少。</p><p>那天空气燥热，正午的太阳高悬头顶，烈日下一辆辆垃圾车跑来跑去，和隔壁镇的一天两趟完全不同，南丰这地方简直是个工地。路边的商店里，不知谁用帘子隔了个小地方，里面放了个躺椅，一个身材羸弱皮包骨的老汉躺在上面有气无力地摇动扇子，这便是老妖怪了。郊外的野风不见踪影，今天热得出奇。老妖怪虽是身子不便运动，但是脑子却是清醒的很，即便到了午睡的时候，他也能时刻留意周边的变化，仿佛有双无形的眼睛注视着门外的一切，包括来往的车辆。<br>老妖怪眼皮动了动，他知道，有人来了，紧接着，另一只眼皮也动了，“还不只一个”，他想。<br>很快，只见一个身高不足一米的小孩哒哒哒地跑进来，却不见旁人的踪影——一人而已。脚步快得离谱，加之酷热使得声浪扭曲，老汉第一次听错了。<br>那小孩像是走进自己家一样，径直跑向冰柜，掀开上面的褥子，打开柜子，扒拉到柜子边上，抽出两根冰棍来，朝老汉方向晃了晃，老妖怪眯着的眼睛缓缓打开条缝隙又合上，不注意完全看不出来他动了眼皮子，是个死人——扇子也没摇了。小孩把五块钱扔进箱子里就跑了，动作熟练，谁能看出来他是个小孩呢。<br>远处垃圾车轰隆启动了，又开始奔驰在这条走了无数次的路上，车里副驾上的小孩正掏出冰棍塞到驾驶员的嘴里。</p><p>“我给你找了个地儿，你就去咱垃圾站当个门卫吧，有车来了开个门就行。”说话的人是乡长，躺在病床上的是刚做完手术的徐店长。老徐之前开了家修车店，十多年，人们叫习惯了。乡长看看旁边的孩子，“老徐，我只能帮你到这了。早知道你就应该好好当个店长，跑来做什么垃圾运输员。现在少了条腿委实找不来好差事，当个门卫挺好的。”乡长是个好人，不客套，帮徐店长另谋生路也不是他的责任，只看在当年一起打拼的情分上帮一把。“我知道。”老徐有点不好意思了，尽管腿上的痛还在，但就是不好意思了，他也没想到这个时候他会羞，乡长的救济他很难再说三道四了。<br>“吃个橘子？”老徐拆开乡长拿的果篮。<br>乡长头也没回走了。<br>此后小孩每次到外面玩腻了就跑回垃圾站门口的小房间里去，他亲爱的父亲在里面靠着墙，一条腿悬在床边看着进进出出的车辆，不停的按下手中的遥控。生活从方向盘变成了遥控器而已。</p><p>说起小孩他妈——因为孩子爸家暴、婚后出轨还拒不认账，几年前就已经离婚了，她跟了乡长，一直经营着一家宾馆，巧的是宾馆的地址正在垃圾站的对面。客户目标很明显了，正是来来往往的司机们，他也曾经住在这里过。小孩妈妈叫雪琴，宾馆是她在老徐之前的丈夫留给他的，没啥情分，这宾馆最后一定亏干净了，根本不盈利啊，来开垃圾车的都是些什么走投无路的人。雪琴自己的房间在二楼正中，从窗户可以看见垃圾站的正大门，老徐所在的小房子也尽收眼底。她每天在自己的房间里和乡长如胶似漆后就坐在床边歪着脖子看下面的垃圾站。她看不见老徐，从她听说老徐搬进去就再也没见过他，老徐从来没有站起来过，所以她天天等着，却连个剪影都等不到。她多想看见那个男人一瘸一拐的走出来，走到她宾馆的下面，然后她一口唾沫啐下去，“这就是你的报应！”</p><p>老妖怪眼皮动了一下，另一只眼皮也动了一下，他坐起来，看着小孩跑进来拿出来两根冰棍，朝他晃了晃，没有放钱，竟是直接跑出去了。他按下手里的按钮，看着小孩慢慢跑远，最后停在马路边上。那小孩拿着冰棒，眼睛直愣愣看着前面，一根含在嘴里，一根朝着来来往往的垃圾车扔去。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;看垃圾&quot;&gt;&lt;a href=&quot;#看垃圾&quot; class=&quot;headerlink&quot; title=&quot;看垃圾&quot;&gt;&lt;/a&gt;看垃圾&lt;/h1&gt;&lt;p&gt;徐店长店还开着的时候就给老药罐找了这个工作。&lt;br&gt;老药罐因为身体原因常年服药，趁不便走动，遂听徐店长安排在南丰镇东接了家商店。只用做些简单的售卖工作，来的人自己挑，完事把钱放进箱子里就行，要是遇到有人不付账按一下手里的按钮就行了，里面集成有现成的报警电话，所以闲适得很。况且这地方空气刺鼻，人烟稀少，仅有运垃圾的司机到这讨几瓶水喝，有时也顺带进个货——这店好似个服务区。老药罐这名字喊的人多了就被传开了，三人成虎，结果最后被人叫成了老妖怪，也巧，和这地方挺搭。商店再往东二里地是个垃圾站，镇里所有的垃圾都要拉到这里来处理。南丰镇近年来大兴养殖，垃圾只多不少。&lt;/p&gt;
&lt;p&gt;那天空气燥热，正午的太阳高悬头顶，烈日下一辆辆垃圾车跑来跑去，和隔壁镇的一天两趟完全不同，南丰这地方简直是个工地。路边的商店里，不知谁用帘子隔了个小地方，里面放了个躺椅，一个身材羸弱皮包骨的老汉躺在上面有气无力地摇动扇子，这便是老妖怪了。郊外的野风不见踪影，今天热得出奇。老妖怪虽是身子不便运动，但是脑子却是清醒的很，即便到了午睡的时候，他也能时刻留意周边的变化，仿佛有双无形的眼睛注视着门外的一切，包括来往的车辆。&lt;br&gt;老妖怪眼皮动了动，他知道，有人来了，紧接着，另一只眼皮也动了，“还不只一个”，他想。&lt;br&gt;很快，只见一个身高不足一米的小孩哒哒哒地跑进来，却不见旁人的踪影——一人而已。脚步快得离谱，加之酷热使得声浪扭曲，老汉第一次听错了。&lt;br&gt;那小孩像是走进自己家一样，径直跑向冰柜，掀开上面的褥子，打开柜子，扒拉到柜子边上，抽出两根冰棍来，朝老汉方向晃了晃，老妖怪眯着的眼睛缓缓打开条缝隙又合上，不注意完全看不出来他动了眼皮子，是个死人——扇子也没摇了。小孩把五块钱扔进箱子里就跑了，动作熟练，谁能看出来他是个小孩呢。&lt;br&gt;远处垃圾车轰隆启动了，又开始奔驰在这条走了无数次的路上，车里副驾上的小孩正掏出冰棍塞到驾驶员的嘴里。&lt;/p&gt;
&lt;p&gt;“我给你找了个地儿，你就去咱垃圾站当个门卫吧，有车来了开个门就行。”说话的人是乡长，躺在病床上的是刚做完手术的徐店长。老徐之前开了家修车店，十多年，人们叫习惯了。乡长看看旁边的孩子，“老徐，我只能帮你到这了。早知道你就应该好好当个店长，跑来做什么垃圾运输员。现在少了条腿委实找不来好差事，当个门卫挺好的。”乡长是个好人，不客套，帮徐店长另谋生路也不是他的责任，只看在当年一起打拼的情分上帮一把。“我知道。”老徐有点不好意思了，尽管腿上的痛还在，但就是不好意思了，他也没想到这个时候他会羞，乡长的救济他很难再说三道四了。&lt;br&gt;“吃个橘子？”老徐拆开乡长拿的果篮。&lt;br&gt;乡长头也没回走了。&lt;br&gt;此后小孩每次到外面玩腻了就跑回垃圾站门口的小房间里去，他亲爱的父亲在里面靠着墙，一条腿悬在床边看着进进出出的车辆，不停的按下手中的遥控。生活从方向盘变成了遥控器而已。&lt;/p&gt;
&lt;p&gt;说起小孩他妈——因为孩子爸家暴、婚后出轨还拒不认账，几年前就已经离婚了，她跟了乡长，一直经营着一家宾馆，巧的是宾馆的地址正在垃圾站的对面。客户目标很明显了，正是来来往往的司机们，他也曾经住在这里过。小孩妈妈叫雪琴，宾馆是她在老徐之前的丈夫留给他的，没啥情分，这宾馆最后一定亏干净了，根本不盈利啊，来开垃圾车的都是些什么走投无路的人。雪琴自己的房间在二楼正中，从窗户可以看见垃圾站的正大门，老徐所在的小房子也尽收眼底。她每天在自己的房间里和乡长如胶似漆后就坐在床边歪着脖子看下面的垃圾站。她看不见老徐，从她听说老徐搬进去就再也没见过他，老徐从来没有站起来过，所以她天天等着，却连个剪影都等不到。她多想看见那个男人一瘸一拐的走出来，走到她宾馆的下面，然后她一口唾沫啐下去，“这就是你的报应！”&lt;/p&gt;
&lt;p&gt;老妖怪眼皮动了一下，另一只眼皮也动了一下，他坐起来，看着小孩跑进来拿出来两根冰棍，朝他晃了晃，没有放钱，竟是直接跑出去了。他按下手里的按钮，看着小孩慢慢跑远，最后停在马路边上。那小孩拿着冰棒，眼睛直愣愣看着前面，一根含在嘴里，一根朝着来来往往的垃圾车扔去。&lt;/p&gt;

    
    </summary>
    
    
      <category term="文学" scheme="https://asea.fun/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="literature" scheme="https://asea.fun/tags/literature/"/>
    
  </entry>
  
  <entry>
    <title>更新帖</title>
    <link href="https://asea.fun/post/2ee0f961.html"/>
    <id>https://asea.fun/post/2ee0f961.html</id>
    <published>2021-02-16T04:44:29.000Z</published>
    <updated>2021-04-27T15:46:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这里记录网站更新内容"><a href="#这里记录网站更新内容" class="headerlink" title="这里记录网站更新内容"></a><font color="#495969">这里记录网站更新内容</font></h2><blockquote><p>本贴更新不及时，想要及时收到网站更新的邮件提醒可在下方留言处留下你的邮箱。</p></blockquote><div class="tabs" id><ul class="nav-tabs"><li class="tab active"><a href="#-1">Butterfly主题更新内容</a></li><li class="tab"><a href="#-2">Next主题更新内容</a></li></ul><div class="tab-content"><div class="tab-pane active" id="-1"><table><tr><td bgcolor="#f1f5ec"><ul><li><em>2021-01-20</em><br>更新文章界面两篇置顶；<br>开通<a href="https://blog.asea.fun/talk/">说说</a>界面；<br><a href="https://blog.asea.fun/talk/">说说</a>界面优化，增加说说评论功能（访客都可以评论）；<br>新增说说发布权限用户；<br>优化不同用户的头像问题；<br>优化navigationbar；</li><li><em>2021-02-09</em><br>更新post<a href="https://blog.asea.fun/post/16fab331.html">《网站收藏》</a>；<br>优化<a href="https://blog.asea.fun/post/16fab331.html">《网站收藏》</a>的界面；<br>优化文章排序和置顶问题（<a href="https://gsy00517.github.io/hexo20200207151318/">参考文章</a>）；<br>修改<a href="https://blog.asea.fun/">主页</a>post图文排版；</li><li><em>2021-02-16</em><br>发布post<a href="https://blog.asea.fun/post/6d79d7dd.html">《老地方》</a>；</li><li><em>2021-02-22</em><br>发布post<a href="https://blog.asea.fun/post/c337a479.html">《看垃圾》</a>；<br>更新post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li><li><em>2021-02-23</em><br>更新post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a>；<br>发布post<a href="https://blog.asea.fun/post/f7b96544.html">《hexo deploy——重复输入账户密码》</a>；<br>添加<a href="https://blog.asea.fun/fun/chi/">《吃什么》</a><a href="https://blog.asea.fun/fun/du/">《毒鸡汤》</a><a href="https://blog.asea.fun/fun/hua/">《画板》</a><a href="https://blog.asea.fun/fun/mi/">《随机密码》</a>四个界面(累趴了)；</li><li><em>2021-02-24</em><br><a href="https://next.asea.fun">新主题（Next）博客</a>重磅上线</li><li><em>2021-02-25</em><br>置顶post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a></li><li><em>2021-02-28</em><br>发布post<a href="https://blog.asea.fun/post/b6589fc3.html">《返校日记》</a><br>更新post<a href="https://blog.asea.fun/post/6d79d7dd.html">《老地方》</a>,优化排版；</li><li><em>2021-03-02</em><br>增加<a href="https://blog.asea.fun/fun/apesk/">《APESK-荣格理论测试》</a>界面。</li><li><em>2021-03-04</em><br>更新post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a></li><li><em>2021-03-07</em><br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a><br>启动gulp服务，优化加载速度</li><li><em>2021-03-13</em><br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a><br>修改本页样式</li><li><em>2021-03-16</em><br>调整主页布局，增加<strong>分类</strong>模块</li><li><em>2021-03-20</em><br>使用python增加博客更新邮件提醒功能<br>使用python增加自动修改本贴的更新时间功能<br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a></li><li><em>2021-03-27</em><br>更新post<a href="https://blog.asea.fun/post/c00b24b1.html">《python笔记》</a><br>发布post<a href="https://blog.asea.fun/post/71485f5b.html">《python项目练习》</a></li><li><em>2021-03-30</em><br>调整代码块为默认不展开<br>更新post<a href="https://blog.asea.fun/post/71485f5b.html">《python项目练习》</a><br>更新post<a href="https://blog.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li><li><em>2021-04-07</em><br>Butterfly博客上线到服务器，因为懒得备案，所以只能用IP地址了。<a href="http://39.103.144.114">地址</a></li><li><em>2021-04-27</em><br>最近更新的几篇post没来得及放更新帖<br><a href="https://blog.asea.fun/post/55d182ea.html">PHP学习笔记</a><br><a href="https://blog.asea.fun/post/5f7056f2.html">electron学习笔记</a><br><a href="https://blog.asea.fun/post/7e086bda.html">我的记忆只有一扇门</a></li></ul></td></tr></table></div><div class="tab-pane" id="-2"><table><tr><td bgcolor="#f6f5ec"><ul><li><em>2021-01-20</em><br>更新文章界面两篇置顶；<br>开通<a href="https://next.asea.fun/talk/">说说</a>界面；<br><a href="https://next.asea.fun/talk/">说说</a>界面优化，增加说说评论功能（访客都可以评论）；<br>新增说说发布权限用户；<br>优化不同用户的头像问题；<br>优化navigationbar；</li><li><em>2021-02-09</em><br>更新post<a href="https://next.asea.fun/post/16fab331.html">《网站收藏》</a>；<br>优化<a href="https://next.asea.fun/post/16fab331.html">《网站收藏》</a>的界面；<br>优化文章排序和置顶问题（<a href="https://gsy00517.github.io/hexo20200207151318/">参考文章</a>）；<br>修改<a href="https://next.asea.fun/">主页</a>post图文排版；</li><li><em>2021-02-16</em><br>发布post<a href="https://next.asea.fun/post/6d79d7dd.html">《老地方》</a>；</li><li><em>2021-02-22</em><br>发布post<a href="https://next.asea.fun/post/c337a479.html">《看垃圾》</a>；<br>更新post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li><li><em>2021-02-23</em><br>更新post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a>；<br>发布post<a href="https://next.asea.fun/post/f7b96544.html">《hexo deploy——重复输入账户密码》</a>；<br>添加<a href="https://next.asea.fun/fun/chi/">《吃什么》</a><a href="https://next.asea.fun/fun/du/">《毒鸡汤》</a><a href="https://next.asea.fun/fun/hua/">《画板》</a><a href="https://next.asea.fun/fun/mi/">《随机密码》</a>四个界面(累趴了)；</li><li><em>2021-02-24</em><br><a href="https://next.asea.fun">新主题（Next）博客</a>重磅上线</li><li><em>2021-02-25</em><br>置顶post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a><br>网页底部增加运行时间、访客数、总字数<br>增加看板“猫”<br>关联其它链接<br>增加留言板块</li><li><em>2021-02-28</em><br>发布post<a href="https://next.asea.fun/post/b6589fc3.html">《返校日记》</a><br>更新post<a href="https://next.asea.fun/post/6d79d7dd.html">《老地方》</a>,优化排版；</li><li><em>2021-03-02</em><br>增加<a href="https://next.asea.fun/fun/apesk/">《APESK-荣格理论测试》</a>界面。</li><li><em>2021-03-04</em><br>更新post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a>；</li><li><em>2021-03-07</em><br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a><br>启动gulp服务，优化加载速度</li></ul></td></tr></table><li><em>2021-03-13</em><br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a><br>修改本页样式</li><li><em>2021-03-20</em><br>使用python增加博客更新邮件提醒功能<br>使用python增加博客更新邮件提醒功能<br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a></li><li><em>2021-03-27</em><br>更新post<a href="https://next.asea.fun/post/c00b24b1.html">《python笔记》</a><br>发布post<a href="https://next.asea.fun/post/71485f5b.html">《python项目练习》</a></li><li><em>2021-03-30</em><br>调整代码块为默认不展开<br>更新post<a href="https://next.asea.fun/post/71485f5b.html">《python项目练习》</a><br>更新post<a href="https://next.asea.fun/post/cf7f39c3.html">《技术贴》</a></li><li><em>2021-04-27</em><br>最近更新的几篇post没来得及放更新帖<br><a href="https://next.asea.fun/post/55d182ea.html">PHP学习笔记</a><br><a href="https://next.asea.fun/post/5f7056f2.html">electron学习笔记</a><br><a href="https://next.asea.fun/post/7e086bda.html">我的记忆只有一扇门</a></li></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;这里记录网站更新内容&quot;&gt;&lt;a href=&quot;#这里记录网站更新内容&quot; class=&quot;headerlink&quot; title=&quot;这里记录网站更新内容&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#495969&quot;&gt;这里记录网站更新内容&lt;/font&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;本贴更新不及时，想要及时收到网站更新的邮件提醒可在下方留言处留下你的邮箱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;tabs&quot; id&gt;&lt;ul class=&quot;nav-tabs&quot;&gt;&lt;li class=&quot;tab active&quot;&gt;&lt;a href=&quot;#-1&quot;&gt;Butterfly主题更新内容&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;tab&quot;&gt;&lt;a href=&quot;#-2&quot;&gt;Next主题更新内容&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class=&quot;tab-content&quot;&gt;&lt;div class=&quot;tab-pane active&quot; id=&quot;-1&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#f1f5ec&quot;&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;2021-01-20&lt;/em&gt;&lt;br&gt;更新文章界面两篇置顶；&lt;br&gt;开通&lt;a href=&quot;https://blog.asea.fun/talk/&quot;&gt;说说&lt;/a&gt;界面；&lt;br&gt;&lt;a href=&quot;https://blog.asea.fun/talk/&quot;&gt;说说&lt;/a&gt;界面优化，增加说说评论功能（访客都可以评论）；&lt;br&gt;新增说说发布权限用户；&lt;br&gt;优化不同用户的头像问题；&lt;br&gt;优化navigationbar；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-09&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/16fab331.html&quot;&gt;《网站收藏》&lt;/a&gt;；&lt;br&gt;优化&lt;a href=&quot;https://blog.asea.fun/post/16fab331.html&quot;&gt;《网站收藏》&lt;/a&gt;的界面；&lt;br&gt;优化文章排序和置顶问题（&lt;a href=&quot;https://gsy00517.github.io/hexo20200207151318/&quot;&gt;参考文章&lt;/a&gt;）；&lt;br&gt;修改&lt;a href=&quot;https://blog.asea.fun/&quot;&gt;主页&lt;/a&gt;post图文排版；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-16&lt;/em&gt;&lt;br&gt;发布post&lt;a href=&quot;https://blog.asea.fun/post/6d79d7dd.html&quot;&gt;《老地方》&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-22&lt;/em&gt;&lt;br&gt;发布post&lt;a href=&quot;https://blog.asea.fun/post/c337a479.html&quot;&gt;《看垃圾》&lt;/a&gt;；&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/cf7f39c3.html&quot;&gt;《技术贴》&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-23&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/cf7f39c3.html&quot;&gt;《技术贴》&lt;/a&gt;；&lt;br&gt;发布post&lt;a href=&quot;https://blog.asea.fun/post/f7b96544.html&quot;&gt;《hexo deploy——重复输入账户密码》&lt;/a&gt;；&lt;br&gt;添加&lt;a href=&quot;https://blog.asea.fun/fun/chi/&quot;&gt;《吃什么》&lt;/a&gt;&lt;a href=&quot;https://blog.asea.fun/fun/du/&quot;&gt;《毒鸡汤》&lt;/a&gt;&lt;a href=&quot;https://blog.asea.fun/fun/hua/&quot;&gt;《画板》&lt;/a&gt;&lt;a href=&quot;https://blog.asea.fun/fun/mi/&quot;&gt;《随机密码》&lt;/a&gt;四个界面(累趴了)；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-24&lt;/em&gt;&lt;br&gt;&lt;a href=&quot;https://next.asea.fun&quot;&gt;新主题（Next）博客&lt;/a&gt;重磅上线&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-25&lt;/em&gt;&lt;br&gt;置顶post&lt;a href=&quot;https://blog.asea.fun/post/cf7f39c3.html&quot;&gt;《技术贴》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-28&lt;/em&gt;&lt;br&gt;发布post&lt;a href=&quot;https://blog.asea.fun/post/b6589fc3.html&quot;&gt;《返校日记》&lt;/a&gt;&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/6d79d7dd.html&quot;&gt;《老地方》&lt;/a&gt;,优化排版；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-02&lt;/em&gt;&lt;br&gt;增加&lt;a href=&quot;https://blog.asea.fun/fun/apesk/&quot;&gt;《APESK-荣格理论测试》&lt;/a&gt;界面。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-04&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/cf7f39c3.html&quot;&gt;《技术贴》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-07&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/c00b24b1.html&quot;&gt;《python笔记》&lt;/a&gt;&lt;br&gt;启动gulp服务，优化加载速度&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-13&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/c00b24b1.html&quot;&gt;《python笔记》&lt;/a&gt;&lt;br&gt;修改本页样式&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-16&lt;/em&gt;&lt;br&gt;调整主页布局，增加&lt;strong&gt;分类&lt;/strong&gt;模块&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-20&lt;/em&gt;&lt;br&gt;使用python增加博客更新邮件提醒功能&lt;br&gt;使用python增加自动修改本贴的更新时间功能&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/c00b24b1.html&quot;&gt;《python笔记》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-27&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/c00b24b1.html&quot;&gt;《python笔记》&lt;/a&gt;&lt;br&gt;发布post&lt;a href=&quot;https://blog.asea.fun/post/71485f5b.html&quot;&gt;《python项目练习》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-30&lt;/em&gt;&lt;br&gt;调整代码块为默认不展开&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/71485f5b.html&quot;&gt;《python项目练习》&lt;/a&gt;&lt;br&gt;更新post&lt;a href=&quot;https://blog.asea.fun/post/cf7f39c3.html&quot;&gt;《技术贴》&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-04-07&lt;/em&gt;&lt;br&gt;Butterfly博客上线到服务器，因为懒得备案，所以只能用IP地址了。&lt;a href=&quot;http://39.103.144.114&quot;&gt;地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-04-27&lt;/em&gt;&lt;br&gt;最近更新的几篇post没来得及放更新帖&lt;br&gt;&lt;a href=&quot;https://blog.asea.fun/post/55d182ea.html&quot;&gt;PHP学习笔记&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.asea.fun/post/5f7056f2.html&quot;&gt;electron学习笔记&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://blog.asea.fun/post/7e086bda.html&quot;&gt;我的记忆只有一扇门&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;


&lt;/div&gt;&lt;div class=&quot;tab-pane&quot; id=&quot;-2&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#f6f5ec&quot;&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;2021-01-20&lt;/em&gt;&lt;br&gt;更新文章界面两篇置顶；&lt;br&gt;开通&lt;a href=&quot;https://next.asea.fun/talk/&quot;&gt;说说&lt;/a&gt;界面；&lt;br&gt;&lt;a href=&quot;https://next.asea.fun/talk/&quot;&gt;说说&lt;/a&gt;界面优化，增加说说评论功能（访客都可以评论）；&lt;br&gt;新增说说发布权限用户；&lt;br&gt;优化不同用户的头像问题；&lt;br&gt;优化navigationbar；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-09&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/16fab331.html&quot;&gt;《网站收藏》&lt;/a&gt;；&lt;br&gt;优化&lt;a href=&quot;https://next.asea.fun/post/16fab331.html&quot;&gt;《网站收藏》&lt;/a&gt;的界面；&lt;br&gt;优化文章排序和置顶问题（&lt;a href=&quot;https://gsy00517.github.io/hexo20200207151318/&quot;&gt;参考文章&lt;/a&gt;）；&lt;br&gt;修改&lt;a href=&quot;https://next.asea.fun/&quot;&gt;主页&lt;/a&gt;post图文排版；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-16&lt;/em&gt;&lt;br&gt;发布post&lt;a href=&quot;https://next.asea.fun/post/6d79d7dd.html&quot;&gt;《老地方》&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-22&lt;/em&gt;&lt;br&gt;发布post&lt;a href=&quot;https://next.asea.fun/post/c337a479.html&quot;&gt;《看垃圾》&lt;/a&gt;；&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/cf7f39c3.html&quot;&gt;《技术贴》&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-23&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/cf7f39c3.html&quot;&gt;《技术贴》&lt;/a&gt;；&lt;br&gt;发布post&lt;a href=&quot;https://next.asea.fun/post/f7b96544.html&quot;&gt;《hexo deploy——重复输入账户密码》&lt;/a&gt;；&lt;br&gt;添加&lt;a href=&quot;https://next.asea.fun/fun/chi/&quot;&gt;《吃什么》&lt;/a&gt;&lt;a href=&quot;https://next.asea.fun/fun/du/&quot;&gt;《毒鸡汤》&lt;/a&gt;&lt;a href=&quot;https://next.asea.fun/fun/hua/&quot;&gt;《画板》&lt;/a&gt;&lt;a href=&quot;https://next.asea.fun/fun/mi/&quot;&gt;《随机密码》&lt;/a&gt;四个界面(累趴了)；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-24&lt;/em&gt;&lt;br&gt;&lt;a href=&quot;https://next.asea.fun&quot;&gt;新主题（Next）博客&lt;/a&gt;重磅上线&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-25&lt;/em&gt;&lt;br&gt;置顶post&lt;a href=&quot;https://next.asea.fun/post/cf7f39c3.html&quot;&gt;《技术贴》&lt;/a&gt;&lt;br&gt;网页底部增加运行时间、访客数、总字数&lt;br&gt;增加看板“猫”&lt;br&gt;关联其它链接&lt;br&gt;增加留言板块&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-02-28&lt;/em&gt;&lt;br&gt;发布post&lt;a href=&quot;https://next.asea.fun/post/b6589fc3.html&quot;&gt;《返校日记》&lt;/a&gt;&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/6d79d7dd.html&quot;&gt;《老地方》&lt;/a&gt;,优化排版；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-02&lt;/em&gt;&lt;br&gt;增加&lt;a href=&quot;https://next.asea.fun/fun/apesk/&quot;&gt;《APESK-荣格理论测试》&lt;/a&gt;界面。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-04&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/cf7f39c3.html&quot;&gt;《技术贴》&lt;/a&gt;；&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-07&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/c00b24b1.html&quot;&gt;《python笔记》&lt;/a&gt;&lt;br&gt;启动gulp服务，优化加载速度&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;li&gt;&lt;em&gt;2021-03-13&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/c00b24b1.html&quot;&gt;《python笔记》&lt;/a&gt;&lt;br&gt;修改本页样式&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-20&lt;/em&gt;&lt;br&gt;使用python增加博客更新邮件提醒功能&lt;br&gt;使用python增加博客更新邮件提醒功能&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/c00b24b1.html&quot;&gt;《python笔记》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-27&lt;/em&gt;&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/c00b24b1.html&quot;&gt;《python笔记》&lt;/a&gt;&lt;br&gt;发布post&lt;a href=&quot;https://next.asea.fun/post/71485f5b.html&quot;&gt;《python项目练习》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-03-30&lt;/em&gt;&lt;br&gt;调整代码块为默认不展开&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/71485f5b.html&quot;&gt;《python项目练习》&lt;/a&gt;&lt;br&gt;更新post&lt;a href=&quot;https://next.asea.fun/post/cf7f39c3.html&quot;&gt;《技术贴》&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2021-04-27&lt;/em&gt;&lt;br&gt;最近更新的几篇post没来得及放更新帖&lt;br&gt;&lt;a href=&quot;https://next.asea.fun/post/55d182ea.html&quot;&gt;PHP学习笔记&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://next.asea.fun/post/5f7056f2.html&quot;&gt;electron学习笔记&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://next.asea.fun/post/7e086bda.html&quot;&gt;我的记忆只有一扇门&lt;/a&gt;
&lt;/li&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;


    
    </summary>
    
    
      <category term="本站" scheme="https://asea.fun/categories/%E6%9C%AC%E7%AB%99/"/>
    
    
      <category term="update" scheme="https://asea.fun/tags/update/"/>
    
  </entry>
  
  <entry>
    <title>老地方</title>
    <link href="https://asea.fun/post/6d79d7dd.html"/>
    <id>https://asea.fun/post/6d79d7dd.html</id>
    <published>2021-02-16T03:33:57.000Z</published>
    <updated>2021-02-28T10:09:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h1><blockquote><p>前几天年前回了趟老家，要说也不是一直没回去过，但前几次都只是走马观花，单觉得那地方也不属于我了，没啥观察的必要了，加之来去匆忙，相较于这次回家大不一样了。认真打扫了院子，清理了巨量的落叶，扫干净后又像小时候的院子了。打扫的间隙也不断地发现了各种以前的老物件，可谓历史悠久，少则几年，多则十几年。</p></blockquote><hr><h1 id="爬行"><a href="#爬行" class="headerlink" title="爬行"></a>爬行</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b3f6d3ffa7d37b3a19fe7.jpg">    <br>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b3f6d3ffa7d37b3a19fef.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">家里最大的一颗葡萄树，支架塌了之后枝蔓沿着院子里晾衣服的绳子爬了十几米远</div></center><h1 id="堵"><a href="#堵" class="headerlink" title="堵"></a>堵</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b3f803ffa7d37b3a1a898.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">院子里的水龙头，因为家里没人住了而且这个水龙头虽然穿得很厚但是每到冬天还是会冻坏所以直接停用了。</div></center><h1 id="倒地祝福"><a href="#倒地祝福" class="headerlink" title="倒地祝福"></a>倒地祝福</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b3f803ffa7d37b3a1a8a8.jpg">    <br>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b3f6d3ffa7d37b3a19fe3.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">贴对联之前把去年的对联撕了下来，掉在地上落叶里的“万事如意”“合家欢乐”。</div></center><h1 id="冷暖"><a href="#冷暖" class="headerlink" title="冷暖"></a>冷暖</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b45aa3ffa7d37b3a4a3e7.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">用了很多年的煤火炉想起来之前在厨房烤火烧橘子的日子，很遥远，</div></center><h1 id="魔幻手机"><a href="#魔幻手机" class="headerlink" title="魔幻手机"></a>魔幻手机</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b45f33ffa7d37b3a4c8e8.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">记忆力我妈最早的一部手机可以用笔或者任何东西触控，很小的时候，在上面玩猫熊，看斗罗大陆，还有可以运行Java，可以语音指令，可以背单词听听力看电影。我也用它拍过很好玩的视频，总之它很值得尊敬，尽管我不知道它是啥牌子。</div></center><h1 id="尸体"><a href="#尸体" class="headerlink" title="尸体"></a>尸体</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b46da3ffa7d37b3a532af.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">床因为不睡了所以拿东西罩了起来，回来时发现上面躺了一只很大的蜂，不知道死前经历了什么，大概是出不去了吧。</div></center><h1 id="墨"><a href="#墨" class="headerlink" title="墨"></a>墨</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b47b13ffa7d37b3a59491.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">前年的春节在自己房间里拿笔写了些字，也尝试写了对联，但由于写的太烂又找别人写了。今天写的还算能看过去，也就将就着贴了。</div>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b48a83ffa7d37b3a612d3.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">这是今年写的丢人对联</div></center><h1 id="🐕🏠"><a href="#🐕🏠" class="headerlink" title="🐕🏠"></a>🐕🏠</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b48d93ffa7d37b3a62c91.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">悲痛是具象的，以后专门写它。</div></center><h1 id="艺术"><a href="#艺术" class="headerlink" title="艺术"></a>艺术</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b49353ffa7d37b3a65c59.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">高中和阮同桌天天没事画来画去，有几张觉得还挺有趣的就保留了下来，现在看来仍历历在目。</div></center><h1 id="星星"><a href="#星星" class="headerlink" title="星星"></a>星星</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b499b3ffa7d37b3a6907e.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">拍星星的时候忘记还在长曝光，乱晃的结果，还不错</div></center>   <h1 id="蝴蝶"><a href="#蝴蝶" class="headerlink" title="蝴蝶"></a>蝴蝶</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b4b263ffa7d37b3a74cee.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">（网站主题就是Butterfly的）在老家落叶堆里见到的，没想到冬天能在老家见到蝴蝶。另外觉得，光学变焦太重要了。</div></center>   <h1 id="繁星"><a href="#繁星" class="headerlink" title="繁星"></a>繁星</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b4bab3ffa7d37b3a78c2f.png">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">老家的星星确实挺好看的，拍出来效果更绝，挑了一张好看的放这。放大调亮屏幕能看见更多星星。</div></center>   <h1 id="榆木疙瘩"><a href="#榆木疙瘩" class="headerlink" title="榆木疙瘩"></a>榆木疙瘩</h1><center>    <img style="border-radius: 0.3125em;    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px" src="https://img.imgdb.cn/item/602b4bfa3ffa7d37b3a7afae.jpg">    <br>    <div style="color:orange; border-bottom: 1px solid #d9d9d9;    display: inline-block;    color: #999;    padding: 2px;">我还记得这颗树，是我家后院的一颗很大很大的榆树。记不清几年级学了榆钱才知道这东西叫榆树，榆钱还能吃，但我记得没啥甜味。后来学到读诗读到“道傍榆荚仍似钱，摘来沽酒君肯否。”，颇有意思。树上那个缝是当时拿锯子锯的时候锯不断，就换了好几个地方，不得不说这东西真硬。</div></center>   ]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;说在前面&quot;&gt;&lt;a href=&quot;#说在前面&quot; class=&quot;headerlink&quot; title=&quot;说在前面&quot;&gt;&lt;/a&gt;说在前面&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;前几天年前回了趟老家，要说也不是一直没回去过，但前几次都只是走马观花，单觉得那地方也不属于我了，没啥观察的必要了，加之来去匆忙，相较于这次回家大不一样了。认真打扫了院子，清理了巨量的落叶，扫干净后又像小时候的院子了。打扫的间隙也不断地发现了各种以前的老物件，可谓历史悠久，少则几年，多则十几年。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;爬行&quot;&gt;&lt;a href=&quot;#爬行&quot; class=&quot;headerlink&quot; title=&quot;爬行&quot;&gt;&lt;/a&gt;爬行&lt;/h1&gt;&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px&quot; src=&quot;https://img.imgdb.cn/item/602b3f6d3ffa7d37b3a19fe7.jpg&quot;&gt;
    &lt;br&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px&quot; src=&quot;https://img.imgdb.cn/item/602b3f6d3ffa7d37b3a19fef.jpg&quot;&gt;
    &lt;br&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;家里最大的一颗葡萄树，支架塌了之后枝蔓沿着院子里晾衣服的绳子爬了十几米远&lt;/div&gt;
&lt;/center&gt;

&lt;h1 id=&quot;堵&quot;&gt;&lt;a href=&quot;#堵&quot; class=&quot;headerlink&quot; title=&quot;堵&quot;&gt;&lt;/a&gt;堵&lt;/h1&gt;&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px&quot; src=&quot;https://img.imgdb.cn/item/602b3f803ffa7d37b3a1a898.png&quot;&gt;
    &lt;br&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;院子里的水龙头，因为家里没人住了而且这个水龙头虽然穿得很厚但是每到冬天还是会冻坏所以直接停用了。&lt;/div&gt;
&lt;/center&gt;

&lt;h1 id=&quot;倒地祝福&quot;&gt;&lt;a href=&quot;#倒地祝福&quot; class=&quot;headerlink&quot; title=&quot;倒地祝福&quot;&gt;&lt;/a&gt;倒地祝福&lt;/h1&gt;&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px&quot; src=&quot;https://img.imgdb.cn/item/602b3f803ffa7d37b3a1a8a8.jpg&quot;&gt;
    &lt;br&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08); width: 300px&quot; src=&quot;https://img.imgdb.cn/item/602b3f6d3ffa7d37b3a19fe3.png&quot;&gt;
    &lt;br&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;贴对联之前把去年的对联撕了下来，掉在地上落叶里的“万事如意”“合家欢乐”。&lt;/div&gt;
&lt;/center&gt;

&lt;h1 id=&quot;冷暖&quot;&gt;&lt;a href=&quot;#冷暖&quot; class=&quot;headerlink&quot; title=&quot;冷暖&quot;&gt;&lt;/a&gt;冷暖&lt;/h1&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>技术贴</title>
    <link href="https://asea.fun/post/cf7f39c3.html"/>
    <id>https://asea.fun/post/cf7f39c3.html</id>
    <published>2021-01-19T17:10:21.000Z</published>
    <updated>2021-04-17T16:14:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这里收录一些小技巧"><a href="#这里收录一些小技巧" class="headerlink" title="这里收录一些小技巧"></a><font color="#495969">这里收录一些小技巧</font></h2><blockquote><ul><li>网页长截图可以F12——&gt;Ctrl Shift P——&gt;Capture full size screenshot</li><li>new post 的格式在root\scafflods里面修改</li><li>利用bat快速生成newpost,可以参考<br><code>hexo new post newpost&amp;&amp;code E:\blog\source\_posts\newpost.md&amp;&amp;rd E:\blog\source\_posts\newpost</code></li><li>在微软输入法设置里面可以添加自定义短语，例如我输入sj，自动弹出当前时间，具体格式:<code>%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%</code>。</li><li>win10 突然发现某些地方的图标字体变得很大，和分辨率不匹配，可能是因为开机时连接了hdmi线所致，可以拔掉hdmi线然后重启。</li><li>obs录屏如果显卡和节能都调过了，但是某一天突然有黑屏，可以去图形设置里面把obs删了，重新添加一下，因为某些原因可能导致文件路径出错。</li><li>转载csdn的博客：复制<code>&lt;div id=&quot;article_content&quot;&gt;...&lt;/div&gt;</code>里的html代码，粘贴到md文件里就行。</li><li>bilibili等视频网站自定义倍速播放：如在浏览器控制台输入<code>document.getElementsByTagName(&quot;video&quot;)[0].playbackRate = 3</code></li><li>gulp压缩参考：<a href="https://blog.csdn.net/GerZhouGengCheng/article/details/106074545">使用Gulp压缩Hexo博客静态资源</a>,imagemin可能比较慢，不报错的话建议耐心点。</li><li>放个订阅地址：<a href="https://l.dabai.pw/link/z2SMogEehRtWyNWq?sub=3&extend=1">地址</a></li><li>当需要查看浏览器的密码输入框里面的密码时，可以审查元素将<code>type</code>改成<code>text</code>就可以显示了。</li><li>浏览器快捷键：录屏<code>ctrl+alt+s</code>  元素检查<code>ctrl+shift+c</code></li><li>云服务器上python发送邮件连接失败：<code>smtp = smtplib.SMTP(mailserver,port=25)</code>修改成<code>smtp=smtplib.SMTP_SSL(mailserver,port=465)</code>。</li><li>word表格转excel可以通过html作为中转。</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;这里收录一些小技巧&quot;&gt;&lt;a href=&quot;#这里收录一些小技巧&quot; class=&quot;headerlink&quot; title=&quot;这里收录一些小技巧&quot;&gt;&lt;/a&gt;&lt;font color=&quot;#495969&quot;&gt;这里收录一些小技巧&lt;/font&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;网页长截图可以F12——&amp;gt;Ctrl Shift P——&amp;gt;Capture full size screenshot&lt;/li&gt;
&lt;li&gt;new post 的格式在root\scafflods里面修改&lt;/li&gt;
&lt;li&gt;利用bat快速生成newpost,可以参考&lt;br&gt;&lt;code&gt;hexo new post newpost&amp;amp;&amp;amp;code E:\blog\source\_posts\newpost.md&amp;amp;&amp;amp;rd E:\blog\source\_posts\newpost&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在微软输入法设置里面可以添加自定义短语，例如我输入sj，自动弹出当前时间，具体格式:&lt;code&gt;%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;win10 突然发现某些地方的图标字体变得很大，和分辨率不匹配，可能是因为开机时连接了hdmi线所致，可以拔掉hdmi线然后重启。&lt;/li&gt;
&lt;li&gt;obs录屏如果显卡和节能都调过了，但是某一天突然有黑屏，可以去图形设置里面把obs删了，重新添加一下，因为某些原因可能导致文件路径出错。&lt;/li&gt;
&lt;li&gt;转载csdn的博客：复制&lt;code&gt;&amp;lt;div id=&amp;quot;article_content&amp;quot;&amp;gt;...&amp;lt;/div&amp;gt;&lt;/code&gt;里的html代码，粘贴到md文件里就行。&lt;/li&gt;
&lt;li&gt;bilibili等视频网站自定义倍速播放：如在浏览器控制台输入&lt;code&gt;document.getElementsByTagName(&amp;quot;video&amp;quot;)[0].playbackRate = 3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;gulp压缩参考：&lt;a href=&quot;https://blog.csdn.net/GerZhouGengCheng/article/details/106074545&quot;&gt;使用Gulp压缩Hexo博客静态资源&lt;/a&gt;,imagemin可能比较慢，不报错的话建议耐心点。&lt;/li&gt;
&lt;li&gt;放个订阅地址：&lt;a href=&quot;https://l.dabai.pw/link/z2SMogEehRtWyNWq?sub=3&amp;extend=1&quot;&gt;地址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;当需要查看浏览器的密码输入框里面的密码时，可以审查元素将&lt;code&gt;type&lt;/code&gt;改成&lt;code&gt;text&lt;/code&gt;就可以显示了。&lt;/li&gt;
&lt;li&gt;浏览器快捷键：录屏&lt;code&gt;ctrl+alt+s&lt;/code&gt;  元素检查&lt;code&gt;ctrl+shift+c&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;云服务器上python发送邮件连接失败：&lt;code&gt;smtp = smtplib.SMTP(mailserver,port=25)&lt;/code&gt;修改成&lt;code&gt;smtp=smtplib.SMTP_SSL(mailserver,port=465)&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;word表格转excel可以通过html作为中转。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="tools" scheme="https://asea.fun/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>2021年的大瓜</title>
    <link href="https://asea.fun/post/35baf9b8.html"/>
    <id>https://asea.fun/post/35baf9b8.html</id>
    <published>2021-01-19T12:45:06.000Z</published>
    <updated>2021-03-23T14:08:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="🍉"><a href="#🍉" class="headerlink" title="🍉"></a>🍉</h2><p>不追星，但喜欢一种仪式感。体现在对薛之谦新歌的期待，尽管不好听；体现在关注的某个up更新；体现在他刚好符合我的某个理想中的状态，这算不算追星？不算吧，顶多是从生活里找乐子，也是一种临时逃避生活的借口。<br>当开始认真关注一些人，目标不限于室友，囊括偶像在内的所有人，都会开始发现，对方比你了解的复杂很多。接着我会对就近的采取策略，而且还卓有成效。至于远处诗和远方，偶像不是诗和远方，充其量是个载体，没了载体理想依然能存在。我回想起来高中搬个凳子在狭小的厕所里写日记，有段时间话题无不关于陆之昂立夏几人。说白了就是我把很大一部分纯粹放在电视剧里，放在其中某个人身上了，但绝不是演员身上。这种纯粹每个人或多或少都有一些，而且纯粹的载体是随着时间不断更迭不断推陈的。我发现年龄增长带来了纯粹的减少，但好在记忆还在，它独有的积累效果不言而喻，多年以前的两平米里的冷和感动至今历历在目。这些很珍贵。<br>这两天的爆料很雷人，但我没难过。我又发现一些小的道理：当一个人的能力越来越大，就越来越容易干坏事。想起来限制与自由的论述，恰好符合。身为普通人，幻想着腰缠万贯或者惨遭封禁都是遥不可及的事情，而当有一天你发现你已经腰缠万贯，这时候就要十分警惕，你是否要悬崖勒马，甚至调个头往回走几步了。<br>这是一点想法。</p><h2 id="✍"><a href="#✍" class="headerlink" title="✍"></a>✍</h2><p>考试结束一直都很想找个机会总结一下这一学年，但是没安下心，一直在补漏下的娱乐。很久没有一个人呆在一个地方了，这样的感觉和高考前两天颇相似，但是却有着截然不同的使命。<br>很多人都总结的很到位，我显然就暗淡很多，不要抱多大希望。<br>这一学年还是没什么可说的，我太没兴趣了，列个表格。</p><table><thead><tr><th>好</th><th>坏</th></tr></thead><tbody><tr><td>小有收益</td><td>四级没过</td></tr><tr><td>打入外卖</td><td>没报四级</td></tr><tr><td>理论力学成绩还行</td><td>工时没做</td></tr><tr><td>看了很多电影</td><td>没有参加比赛</td></tr><tr><td>开了新坑</td><td>崴脚</td></tr><tr><td>尝试了兼职</td><td>但没要我</td></tr><tr><td>书尽量读了三本</td><td>热工不行</td></tr><tr><td>…</td><td>…</td></tr></tbody></table><p>这样单纯的分析利弊好像又没什么意思啊，人单纯就是想看些主观的思考，但说实话我越来越懒了，厌倦思考。所以，如果，真的需要我说点什么的话，我觉得这是幸福的一学期，没有什么大富大贵，但至少无病无灾，在我看来已经极其幸运的了，至少在我活过的十几年里，算是第一梯队的一学期。<br>未来逐渐到来，过去逐渐远去。<br>希望假期能把挖的坑填上，提前祝大家新年快乐。</p><p>3.23修补了一下后台配置。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;🍉&quot;&gt;&lt;a href=&quot;#🍉&quot; class=&quot;headerlink&quot; title=&quot;🍉&quot;&gt;&lt;/a&gt;🍉&lt;/h2&gt;&lt;p&gt;不追星，但喜欢一种仪式感。体现在对薛之谦新歌的期待，尽管不好听；体现在关注的某个up更新；体现在他刚好符合我的某个理想中的状态，这算不算追星？不算吧，顶多是从生活里找乐子，也是一种临时逃避生活的借口。&lt;br&gt;当开始认真关注一些人，目标不限于室友，囊括偶像在内的所有人，都会开始发现，对方比你了解的复杂很多。接着我会对就近的采取策略，而且还卓有成效。至于远处诗和远方，偶像不是诗和远方，充其量是个载体，没了载体理想依然能存在。我回想起来高中搬个凳子在狭小的厕所里写日记，有段时间话题无不关于陆之昂立夏几人。说白了就是我把很大一部分纯粹放在电视剧里，放在其中某个人身上了，但绝不是演员身上。这种纯粹每个人或多或少都有一些，而且纯粹的载体是随着时间不断更迭不断推陈的。我发现年龄增长带来了纯粹的减少，但好在记忆还在，它独有的积累效果不言而喻，多年以前的两平米里的冷和感动至今历历在目。这些很珍贵。&lt;br&gt;这两天的爆料很雷人，但我没难过。我又发现一些小的道理：当一个人的能力越来越大，就越来越容易干坏事。想起来限制与自由的论述，恰好符合。身为普通人，幻想着腰缠万贯或者惨遭封禁都是遥不可及的事情，而当有一天你发现你已经腰缠万贯，这时候就要十分警惕，你是否要悬崖勒马，甚至调个头往回走几步了。&lt;br&gt;这是一点想法。&lt;/p&gt;
&lt;h2 id=&quot;✍&quot;&gt;&lt;a href=&quot;#✍&quot; class=&quot;headerlink&quot; title=&quot;✍&quot;&gt;&lt;/a&gt;✍&lt;/h2&gt;&lt;p&gt;考试结束一直都很想找个机会总结一下这一学年，但是没安下心，一直在补漏下的娱乐。很久没有一个人呆在一个地方了，这样的感觉和高考前两天颇相似，但是却有着截然不同的使命。&lt;br&gt;很多人都总结的很到位，我显然就暗淡很多，不要抱多大希望。&lt;br&gt;这一学年还是没什么可说的，我太没兴趣了，列个表格。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;好&lt;/th&gt;
&lt;th&gt;坏&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;小有收益&lt;/td&gt;
&lt;td&gt;四级没过&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;打入外卖&lt;/td&gt;
&lt;td&gt;没报四级&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;理论力学成绩还行&lt;/td&gt;
&lt;td&gt;工时没做&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;看了很多电影&lt;/td&gt;
&lt;td&gt;没有参加比赛&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;开了新坑&lt;/td&gt;
&lt;td&gt;崴脚&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;尝试了兼职&lt;/td&gt;
&lt;td&gt;但没要我&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;书尽量读了三本&lt;/td&gt;
&lt;td&gt;热工不行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;td&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;这样单纯的分析利弊好像又没什么意思啊，人单纯就是想看些主观的思考，但说实话我越来越懒了，厌倦思考。所以，如果，真的需要我说点什么的话，我觉得这是幸福的一学期，没有什么大富大贵，但至少无病无灾，在我看来已经极其幸运的了，至少在我活过的十几年里，算是第一梯队的一学期。&lt;br&gt;未来逐渐到来，过去逐渐远去。&lt;br&gt;希望假期能把挖的坑填上，提前祝大家新年快乐。&lt;/p&gt;
&lt;p&gt;3.23修补了一下后台配置。&lt;/p&gt;

    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
  </entry>
  
</feed>
