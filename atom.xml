<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AseaBlog</title>
  <icon>https://www.gravatar.com/avatar/2ab32513ce6dc86cc9542de0cb40ddbe</icon>
  <subtitle>我的个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://asea.fun/"/>
  <updated>2021-08-17T06:58:52.000Z</updated>
  <id>https://asea.fun/</id>
  
  <author>
    <name>Asea</name>
    <email>gyvip001@126.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>东华大学程序设计基础OJ题目</title>
    <link href="https://asea.fun/post/5b353da9.html"/>
    <id>https://asea.fun/post/5b353da9.html</id>
    <published>2021-08-17T06:40:08.000Z</published>
    <updated>2021-08-17T06:58:52.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>记录一下自己做题的时候遇到的比较困扰的题</p></blockquote><h2 id="数列2"><a href="#数列2" class="headerlink" title="数列2"></a>数列2</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>思维的严密性是相当重要的，尤其是在程序设计中，一个小小的错误，就可能导致无法想象的后果。明明的爸爸是一名富有经验的程序设计专家，深知思维严密的重要性，于是在明明很小的时候，就通过游戏的方式，训练明明的思维严密性。今天，明明的爸爸和明明做了一个数列的游戏。这个游戏很简单，就是有一数列，现在需要在这数列中选出一个或者若干个数（可以不连续），要求这些数的和能被11整除。明明的爸爸想锻炼明明思维的严密性，因此要求明明尽可能多的找出符合条件的数列来，最好一个也不要漏掉。 例如一数列为“11 22 33”，其中11可以被11整除，22可以被11整除，33可以被11整除，11+22=33能被11整除，22+33=55能被11整除，11+33=44能被11整除，11+22+33=66能被11整除。所以以上一数列能被11整除的情况一共有7种。 明明对于这个游戏很感兴趣，高兴地玩了起来。由于粗心，明明总是无法一次就把所有的情况都找出来，这使得他爸爸不是很满意。于是明明爸爸决定先降低游戏的难度，事先告诉明明某一数列总共有多少种符合条件的选择数字的方法，然后再让明明去选。明明的爸爸请你帮一个忙，他不想自己找出所有的情况，因此请你写一个程序，用程序来找出一共有多少种符合选数的情况，并把结果告诉他。 </p><p>明明爸爸的问题可以归结为：给你一个数列，从中选出1个或若干个数（可以不连续），要求这些数的和能被11整除，问这样的选数方法一共有多少种。</p><h3 id="输入说明"><a href="#输入说明" class="headerlink" title="输入说明"></a>输入说明</h3><p>你写的程序要求从标准输入设备中读入测试数据作为你所写程序的输入数据。标准输入设备中有多组测试数据，每组测试数据有两行，每组测试数据的第一行有一个整数n(1≤n≤15)，表示数列中有多少个整数，每组测试数据的第二行有n个整数，整数的大小都大于等于0且小于等于100，整数之间用一个空格隔开。每组测试数据与其后一组测试数据之间没有任何空行，第一组测试数据前面以及最后一组测试数据后面也都没有任何空行。</p><h3 id="输出说明"><a href="#输出说明" class="headerlink" title="输出说明"></a>输出说明</h3><p>对于每一组测试数据，你写的程序要求计算出一组相应的运算结果，并将每组运算结果作为你所写程序的输出数据依次写入到标准输出设备中。每组运算结果为一个整数，即表示一共有多少种选数方法。每组运算结果单独形成一行数据，其行首和行尾都没有任何空格，每组运算结果与其后一组运算结果之间没有任何空行，第一组运算结果前面以及最后一组运算结果后面也都没有任何空行。 注：通常，显示屏为标准输出设备。</p><h3 id="输入范例"><a href="#输入范例" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">11</span><br><span class="line">3</span><br><span class="line">11 22 33</span><br></pre></td></tr></table></figure><h3 id="输出范例"><a href="#输出范例" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>本题主要考察数组应用和递归思想</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_num</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> num, <span class="keyword">int</span> &amp;sum, <span class="keyword">int</span> n, <span class="keyword">int</span> *arr, <span class="keyword">int</span> countor, <span class="keyword">int</span> num_sum)</span> <span class="comment">//参数意义：遍历起始地址，遍历总个数，满足条件的个数，数组长度，数组，计数器，和</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    countor ++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = start; i &lt; n-num+countor; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(countor &lt; num)</span><br><span class="line">            get_num(i+<span class="number">1</span>, num, sum, n, arr, countor, num_sum + arr[i]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((num_sum+arr[i])% <span class="number">11</span> == <span class="number">0</span> &amp;&amp; (num_sum + arr[i]) != <span class="number">0</span>) &#123;sum++;&#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> arr[<span class="number">15</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">             get_num(<span class="number">0</span>, i, sum, n, arr, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="打印十字图"><a href="#打印十字图" class="headerlink" title="打印十字图"></a>打印十字图</h2><h3 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h3><p>小明为某机构设计了一个十字型的徽标（并非红十字会啊），如下所示：</p><p>..$$$$$$$$$$$$$..<br>..$………..$..<br>$$$.$$$$$$$$$.$$$<br>$…$…….$…$<br>$.$$$.$$$$$.$$$.$<br>$.$…$…$…$.$<br>$.$.$$$.$.$$$.$.$<br>$.$.$…$…$.$.$<br>$.$.$.$$$$$.$.$.$<br>$.$.$…$…$.$.$<br>$.$.$$$.$.$$$.$.$<br>$.$…$…$…$.$<br>$.$$$.$$$$$.$$$.$<br>$…$…….$…$<br>$$$.$$$$$$$$$.$$$<br>..$………..$..<br>..$$$$$$$$$$$$$..</p><p>对方同时也需要在电脑dos窗口中以字符的形式输出该标志（图中红色只是为了标记处十字符号，输出时都用黑色），并能任意控十字外面包围的符号的层数。</p><h3 id="输入说明-1"><a href="#输入说明-1" class="headerlink" title="输入说明"></a>输入说明</h3><p>一个正整数 n (n&lt;30) 表示要求打印图形的层数。</p><h3 id="输出说明-1"><a href="#输出说明-1" class="headerlink" title="输出说明"></a>输出说明</h3><p>对应包围层数的该标志。</p><p>比如：</p><p>输入</p><p>1</p><p>输出</p><p>..$$$$$..<br>..$…$..<br>$$$.$.$$$<br>$…$…$<br>$.$$$$$.$<br>$…$…$<br>$$$.$.$$$<br>..$…$..<br>..$$$$$..</p><p>输入</p><p>3</p><p>输出</p><p>..$$$$$$$$$$$$$..<br>..$………..$..<br>$$$.$$$$$$$$$.$$$<br>$…$…….$…$<br>$.$$$.$$$$$.$$$.$<br>$.$…$…$…$.$<br>$.$.$$$.$.$$$.$.$<br>$.$.$…$…$.$.$<br>$.$.$.$$$$$.$.$.$<br>$.$.$…$…$.$.$<br>$.$.$$$.$.$$$.$.$<br>$.$…$…$…$.$<br>$.$$$.$$$$$.$$$.$<br>$…$…….$…$<br>$$$.$$$$$$$$$.$$$<br>..$………..$..<br>..$$$$$$$$$$$$$.. </p><p>请仔细观察样例，尤其要注意句点的数量和输出位置。</p><h3 id="输入范例-1"><a href="#输入范例-1" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="输出范例-1"><a href="#输出范例-1" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">..$$$$$$$$$$$$$..</span><br><span class="line">..$...........$..</span><br><span class="line">$$$.$$$$$$$$$.$$$</span><br><span class="line">$...$.......$...$</span><br><span class="line">$.$$$.$$$$$.$$$.$</span><br><span class="line">$.$...$...$...$.$</span><br><span class="line">$.$.$$$.$.$$$.$.$</span><br><span class="line">$.$.$...$...$.$.$</span><br><span class="line">$.$.$.$$$$$.$.$.$</span><br><span class="line">$.$.$...$...$.$.$</span><br><span class="line">$.$.$$$.$.$$$.$.$</span><br><span class="line">$.$...$...$...$.$</span><br><span class="line">$.$$$.$$$$$.$$$.$</span><br><span class="line">$...$.......$...$</span><br><span class="line">$$$.$$$$$$$$$.$$$</span><br><span class="line">..$...........$..</span><br><span class="line">..$$$$$$$$$$$$$..</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="主要代码-1"><a href="#主要代码-1" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>利用好对称，找规律。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;<span class="number">2</span>*n+<span class="number">3</span>)</span><br><span class="line">        i = n*<span class="number">4</span>+<span class="number">6</span>-i;</span><br><span class="line">    <span class="keyword">if</span>(j&gt;<span class="number">2</span>*n+<span class="number">3</span>)</span><br><span class="line">        j = n*<span class="number">4</span>+<span class="number">6</span>-j;</span><br><span class="line">        <span class="keyword">if</span>(i == <span class="number">1</span> &amp;&amp; j == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = i;</span><br><span class="line">        i = j;</span><br><span class="line">        j = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">2</span> != <span class="number">0</span> &amp;&amp; j != i + <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span> &amp;&amp; j == i + <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;n)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n*<span class="number">4</span>+<span class="number">5</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n*<span class="number">4</span>+<span class="number">5</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (judge(i, j, n))</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;$&#x27;</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="质数的乘积"><a href="#质数的乘积" class="headerlink" title="质数的乘积"></a>质数的乘积</h2><h3 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h3><p>　Torry从小喜爱数学。一天，老师告诉他，像2、3、5、7……这样的数叫做质数。Torry突然想到一个问题，前10、100、1000、10000……个质数的乘积是多少呢？他把这个问题告诉老师。老师愣住了，一时回答不出来。于是Torry求助于会编程的你，请你算出前n个质数的乘积。不过，考虑到你才接触编程不久，Torry只要你算出这个数模上50000的值。</p><h3 id="输入说明-2"><a href="#输入说明-2" class="headerlink" title="输入说明"></a>输入说明</h3><p>仅包含一个正整数n，其中n&lt;=100000。</p><h3 id="输出说明-2"><a href="#输出说明-2" class="headerlink" title="输出说明"></a>输出说明</h3><p>输出一行，即前n个质数的乘积模50000的值。</p><h3 id="输入范例-2"><a href="#输入范例-2" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="输出范例-2"><a href="#输出范例-2" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">30</span><br></pre></td></tr></table></figure><h3 id="主要代码-2"><a href="#主要代码-2" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>如何判断指数，基本数据类型（int 、long long）的取值范围</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_zhi</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(a); i++)&#123; <span class="comment">//注意是&lt;=</span></span><br><span class="line">        <span class="keyword">if</span>(a%i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sum_arr[<span class="number">100000</span>];</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> sum = <span class="number">1</span>;<span class="comment">//int最大值2^32-1</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; k &lt; <span class="number">100000</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(is_zhi(i)) &#123;sum = sum*i%<span class="number">50000</span>; sum_arr[k++] = sum;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum_arr[n<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="航班时间"><a href="#航班时间" class="headerlink" title="航班时间"></a>航班时间</h2><h3 id="问题描述-3"><a href="#问题描述-3" class="headerlink" title="问题描述"></a>问题描述</h3><p>【问题背景】</p><p>小h前往美国参加了蓝桥杯国际赛。小h的女朋友发现小h上午十点出发，上午十二点到达美国，于是感叹到“现在飞机飞得真快，两小时就能到美国了”。</p><p>小h对超音速飞行感到十分恐惧。仔细观察后发现飞机的起降时间都是当地时间。由于北京和美国东部有12小时时差，故飞机总共需要14小时的飞行时间。</p><p>不久后小h的女朋友去中东交换。小h并不知道中东与北京的时差。但是小h得到了女朋友来回航班的起降时间。小h想知道女朋友的航班飞行时间是多少。</p><p>【问题描述】</p><p>对于一个可能跨时区的航班，给定来回程的起降时间。假设飞机来回飞行时间相同，求飞机的飞行时间。</p><h3 id="输入说明-3"><a href="#输入说明-3" class="headerlink" title="输入说明"></a>输入说明</h3><p>从标准输入读入数据。</p><p>一个输入包含多组数据。</p><p>输入第一行为一个正整数T，表示输入数据组数。</p><p>每组数据包含两行，第一行为去程的 起降 时间，第二行为回程的 起降 时间。</p><p>起降时间的格式如下</p><p>h1:m1:s1 h2:m2:s2</p><p>或</p><p>h1:m1:s1 h3:m3:s3 (+1)</p><p>或</p><p>h1:m1:s1 h4:m4:s4 (+2)</p><p>表示该航班在当地时间h1时m1分s1秒起飞，</p><p>第一种格式表示在当地时间 当日 h2时m2分s2秒降落</p><p>第二种格式表示在当地时间 次日 h3时m3分s3秒降落。</p><p>第三种格式表示在当地时间 第三天 h4时m4分s4秒降落。</p><p>对于此题目中的所有以 h : m : s形式给出的时间, 保证 ( 0&lt;=h&lt;=23, 0&lt;=m,s&lt;=59 ).</p><p>保证输入时间合法，飞行时间不超过24小时。</p><h3 id="输出说明-3"><a href="#输出说明-3" class="headerlink" title="输出说明"></a>输出说明</h3><p>输出到标准输出。</p><p>对于每一组数据输出一行一个时间hh:mm:ss，表示飞行时间为hh小时mm分ss秒。</p><p>注意，当时间为一位数时，要补齐前导零。如三小时四分五秒应写为03:04:05。</p><h3 id="输入范例-3"><a href="#输入范例-3" class="headerlink" title="输入范例"></a>输入范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">17:48:19 21:57:24</span><br><span class="line">11:05:18 15:14:23</span><br><span class="line">17:21:07 00:31:46 (+1)</span><br><span class="line">23:02:41 16:13:20 (+1)</span><br><span class="line">10:19:19 20:41:24</span><br><span class="line">22:19:04 16:41:09 (+1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="输出范例-3"><a href="#输出范例-3" class="headerlink" title="输出范例"></a>输出范例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">04:09:05</span><br><span class="line">12:10:39</span><br><span class="line">14:22:05</span><br></pre></td></tr></table></figure><h3 id="主要代码-3"><a href="#主要代码-3" class="headerlink" title="主要代码"></a>主要代码</h3><blockquote><p>两次时间平均可以抵消时区差，算时间最好全都换成秒再一一还原</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_num</span><span class="params">(<span class="built_in">string</span> str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> mutiple = <span class="number">3600</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i+=<span class="number">3</span>)&#123;</span><br><span class="line">        sum += ((str[<span class="number">9</span>+i]-<span class="string">&#x27;0&#x27;</span>)*<span class="number">10</span> + (str[<span class="number">10</span>+i] - <span class="string">&#x27;0&#x27;</span>) - (str[<span class="number">0</span>+i]-<span class="string">&#x27;0&#x27;</span>)*<span class="number">10</span> - (str[<span class="number">1</span>+i]-<span class="string">&#x27;0&#x27;</span>))*mutiple;</span><br><span class="line">        mutiple /= <span class="number">60</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(str.length() &gt; <span class="number">20</span>)&#123;</span><br><span class="line">        sum += <span class="number">86400</span>*(str[<span class="number">20</span>] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">  getchar();</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">      <span class="built_in">string</span> str1, str2;</span><br><span class="line">      getline(<span class="built_in">cin</span>, str1);</span><br><span class="line">      getline(<span class="built_in">cin</span>, str2);</span><br><span class="line">      <span class="keyword">int</span> h = (get_num(str1) + get_num(str2))/<span class="number">2</span>/<span class="number">3600</span>;</span><br><span class="line">      <span class="keyword">int</span> m = (get_num(str1) + get_num(str2))/<span class="number">2</span>%<span class="number">3600</span>/<span class="number">60</span>;<span class="comment">//z</span></span><br><span class="line">      <span class="keyword">int</span> s = (get_num(str1) + get_num(str2))/<span class="number">2</span>%<span class="number">60</span>;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%02d:%02d:%02d\n&quot;</span>,h, m, s);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;记录一下自己做题的时候遇到的比较困扰的题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;数列2&quot;&gt;&lt;a href=&quot;#数列2&quot; class=&quot;headerlink&quot; title=&quot;数列2&quot;&gt;&lt;/a&gt;数列2&lt;/h2&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;思维的严密性是相当重要的，尤其是在程序设计中，一个小小的错误，就可能导致无法想象的后果。明明的爸爸是一名富有经验的程序设计专家，深知思维严密的重要性，于是在明明很小的时候，就通过游戏的方式，训练明明的思维严密性。今天，明明的爸爸和明明做了一个数列的游戏。这个游戏很简单，就是有一数列，现在需要在这数列中选出一个或者若干个数（可以不连续），要求这些数的和能被11整除。明明的爸爸想锻炼明明思维的严密性，因此要求明明尽可能多的找出符合条件的数列来，最好一个也不要漏掉。 例如一数列为“11 22 33”，其中11可以被11整除，22可以被11整除，33可以被11整除，11+22=33能被11整除，22+33=55能被11整除，11+33=44能被11整除，11+22+33=66能被11整除。所以以上一数列能被11整除的情况一共有7种。 明明对于这个游戏很感兴趣，高兴地玩了起来。由于粗心，明明总是无法一次就把所有的情况都找出来，这使得他爸爸不是很满意。于是明明爸爸决定先降低游戏的难度，事先告诉明明某一数列总共有多少种符合条件的选择数字的方法，然后再让明明去选。明明的爸爸请你帮一个忙，他不想自己找出所有的情况，因此请你写一个程序，用程序来找出一共有多少种符合选数的情况，并把结果告诉他。 &lt;/p&gt;
&lt;p&gt;明明爸爸的问题可以归结为：给你一个数列，从中选出1个或若干个数（可以不连续），要求这些数的和能被11整除，问这样的选数方法一共有多少种。&lt;/p&gt;
&lt;h3 id=&quot;输入说明&quot;&gt;&lt;a href=&quot;#输入说明&quot; class=&quot;headerlink&quot; title=&quot;输入说明&quot;&gt;&lt;/a&gt;输入说明&lt;/h3&gt;&lt;p&gt;你写的程序要求从标准输入设备中读入测试数据作为你所写程序的输入数据。标准输入设备中有多组测试数据，每组测试数据有两行，每组测试数据的第一行有一个整数n(1≤n≤15)，表示数列中有多少个整数，每组测试数据的第二行有n个整数，整数的大小都大于等于0且小于等于100，整数之间用一个空格隔开。每组测试数据与其后一组测试数据之间没有任何空行，第一组测试数据前面以及最后一组测试数据后面也都没有任何空行。&lt;/p&gt;
&lt;h3 id=&quot;输出说明&quot;&gt;&lt;a href=&quot;#输出说明&quot; class=&quot;headerlink&quot; title=&quot;输出说明&quot;&gt;&lt;/a&gt;输出说明&lt;/h3&gt;&lt;p&gt;对于每一组测试数据，你写的程序要求计算出一组相应的运算结果，并将每组运算结果作为你所写程序的输出数据依次写入到标准输出设备中。每组运算结果为一个整数，即表示一共有多少种选数方法。每组运算结果单独形成一行数据，其行首和行尾都没有任何空格，每组运算结果与其后一组运算结果之间没有任何空行，第一组运算结果前面以及最后一组运算结果后面也都没有任何空行。 注：通常，显示屏为标准输出设备。&lt;/p&gt;
&lt;h3 id=&quot;输入范例&quot;&gt;&lt;a href=&quot;#输入范例&quot; class=&quot;headerlink&quot; title=&quot;输入范例&quot;&gt;&lt;/a&gt;输入范例&lt;/h3&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="OJ" scheme="https://asea.fun/tags/OJ/"/>
    
      <category term="DHU" scheme="https://asea.fun/tags/DHU/"/>
    
  </entry>
  
  <entry>
    <title>如何利用CDN加速你的博客</title>
    <link href="https://asea.fun/post/c17a20e4.html"/>
    <id>https://asea.fun/post/c17a20e4.html</id>
    <published>2021-08-08T14:56:19.000Z</published>
    <updated>2021-08-08T15:30:37.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在准备采用CDN动态加速之前，我的状态是：<strong>vercel托管，域名已经备案，但是访问速度不稳定，需要提高访问速度，且不想购买服务器</strong>。了解到七牛云的平台，于是开始着手操作。由于有些教程太老了，很多地方已经不正确，于是把自己的步骤记录下来。</p></blockquote><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>首先你需要有一个免费的部署平台，例如gitpages、vercel，部署之后你可以拿到平台分配给你的免费的域名，然后去七牛去和腾讯云注册账号。</p><hr><h2 id="申请ssl证书"><a href="#申请ssl证书" class="headerlink" title="申请ssl证书"></a>申请ssl证书</h2><p>腾讯云平台，搜索ssl，申请免费的ssl证书，免费证书不支持泛域名，所以二级域名和其子域名都需要各自申请（如果你有需求的话）。申请本身没有难度，不过采用DNS验证的时候有一个难点，你的域名解析可能会验证失败，你可以用<a href="https://myssl.com/dns_check.html#ssl_verify">这个网站</a>自主查询一下自己是否解析成功，注意这里子域名的TXT值要去查子域名，而不是二级域名。如果提示失败，看一下自己的解析是否正确，如果正确，请暂停掉所有的CNAME记录，再尝试。此时应该可以查询到，等待腾讯云颁发证书，下载，解压。</p><p>注意：申请完的TXT记录可以删除。</p><hr><h2 id="七牛云绑定"><a href="#七牛云绑定" class="headerlink" title="七牛云绑定"></a>七牛云绑定</h2><p>注册，登录，打开CDN，并添加域名。<br>各处的值分别是：<br>你的域名、HTTPS、大陆、动态加速、vercel给的域名、你的域名</p><p> <strong>注意两点</strong></p><ol><li>选择HTTPS后，需要上传自己的ssl证书，根据七牛云指引，上传自有证书，上传的时候，第一处备注随便写，第二处就是下载下来的证书里面的pem文件，记事本打开，复制粘贴。第二个密钥就是key文件，同样记事本打开，复制粘贴即可。</li><li>最后一个验证文件，例如你的域名是<code>xxx.com</code>，那么你需要确保<code>xxx.com/test.html</code>可以被访问到，这里的<code>test.html</code>可以是txt等，体积要小。放好之后，点击源站测试，自动识别，识别成功后即可创建。</li></ol><p>七牛云会给你CNAME记录值，最后去你的域名服务商添加一条解析即可，随后可见<code>已配置</code>，以及<code>成功</code>的字样则表示成功。</p><p>稍等几分钟就可以访问了，你会发现加载速度果然流畅不少。</p><hr><h2 id="流量说明"><a href="#流量说明" class="headerlink" title="流量说明"></a>流量说明</h2><p>新人赠送三个月100G，个人博客够用，流量购买也很便宜，个人认证也会送免费的额度，但好像不是支持https动态加速的，总之先用吧。随后再说。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在准备采用CDN动态加速之前，我的状态是：&lt;strong&gt;vercel托管，域名已经备案，但是访问速度不稳定，需要提高访问速度，且不想购买服务器&lt;/strong&gt;。了解到七牛云的平台，于是开始着手操作。由于有些教程太老了，很多地方已经不正确，于是把自己的步骤记录下来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;首先你需要有一个免费的部署平台，例如gitpages、vercel，部署之后你可以拿到平台分配给你的免费的域名，然后去七牛去和腾讯云注册账号。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;申请ssl证书&quot;&gt;&lt;a href=&quot;#申请ssl证书&quot; class=&quot;headerlink&quot; title=&quot;申请ssl证书&quot;&gt;&lt;/a&gt;申请ssl证书&lt;/h2&gt;&lt;p&gt;腾讯云平台，搜索ssl，申请免费的ssl证书，免费证书不支持泛域名，所以二级域名和其子域名都需要各自申请（如果你有需求的话）。申请本身没有难度，不过采用DNS验证的时候有一个难点，你的域名解析可能会验证失败，你可以用&lt;a href=&quot;https://myssl.com/dns_check.html#ssl_verify&quot;&gt;这个网站&lt;/a&gt;自主查询一下自己是否解析成功，注意这里子域名的TXT值要去查子域名，而不是二级域名。如果提示失败，看一下自己的解析是否正确，如果正确，请暂停掉所有的CNAME记录，再尝试。此时应该可以查询到，等待腾讯云颁发证书，下载，解压。&lt;/p&gt;
&lt;p&gt;注意：申请完的TXT记录可以删除。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;七牛云绑定&quot;&gt;&lt;a href=&quot;#七牛云绑定&quot; class=&quot;headerlink&quot; title=&quot;七牛云绑定&quot;&gt;&lt;/a&gt;七牛云绑定&lt;/h2&gt;&lt;p&gt;注册，登录，打开CDN，并添加域名。&lt;br&gt;各处的值分别是：&lt;br&gt;你的域名、HTTPS、大陆、动态加速、vercel给的域名、你的域名&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="CDN" scheme="https://asea.fun/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>一天的快乐</title>
    <link href="https://asea.fun/post/97862041.html"/>
    <id>https://asea.fun/post/97862041.html</id>
    <published>2021-08-06T14:51:27.000Z</published>
    <updated>2021-08-06T15:15:29.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一天会有多少快乐</p></blockquote><h2 id="早上起来去吃了早饭"><a href="#早上起来去吃了早饭" class="headerlink" title="早上起来去吃了早饭"></a>早上起来去吃了早饭</h2><p><img src="https://pic.imgdb.cn/item/610d50165132923bf8dfb49a.jpg" alt><br><img src="https://pic.imgdb.cn/item/610d50165132923bf8dfb4ad.jpg" alt><br><img src="https://pic.imgdb.cn/item/610d50165132923bf8dfb487.jpg" alt></p><hr><h2 id="回来后完成并且不断优化了挂件"><a href="#回来后完成并且不断优化了挂件" class="headerlink" title="回来后完成并且不断优化了挂件"></a>回来后完成并且不断优化了挂件</h2><p><img src="https://pic.imgdb.cn/item/610d4e805132923bf8dbc490.jpg" alt></p><hr><h2 id="躺下睡了个小觉"><a href="#躺下睡了个小觉" class="headerlink" title="躺下睡了个小觉"></a>躺下睡了个小觉</h2><hr><h2 id="拍云的时候找到了丢失已久的钥匙"><a href="#拍云的时候找到了丢失已久的钥匙" class="headerlink" title="拍云的时候找到了丢失已久的钥匙"></a>拍云的时候找到了丢失已久的钥匙</h2><p><img src="https://pic.imgdb.cn/item/610d4e085132923bf8daa73b.jpg" alt></p><hr><h2 id="给钥匙挂在了一个小钥匙串上（这样比较大，不容易丢吧）"><a href="#给钥匙挂在了一个小钥匙串上（这样比较大，不容易丢吧）" class="headerlink" title="给钥匙挂在了一个小钥匙串上（这样比较大，不容易丢吧）"></a>给钥匙挂在了一个小钥匙串上（这样比较大，不容易丢吧）</h2><p><img src="https://pic.imgdb.cn/item/610d4e465132923bf8db3ef7.jpg" alt></p><hr><h2 id="去试🔑的时候看到猫猫，于是上楼拿了充气宝和猫粮，一边给车胎打气，一边喂猫猫，三只猫，太可爱了"><a href="#去试🔑的时候看到猫猫，于是上楼拿了充气宝和猫粮，一边给车胎打气，一边喂猫猫，三只猫，太可爱了" class="headerlink" title="去试🔑的时候看到猫猫，于是上楼拿了充气宝和猫粮，一边给车胎打气，一边喂猫猫，三只猫，太可爱了"></a>去试🔑的时候看到猫猫，于是上楼拿了充气宝和猫粮，一边给车胎打气，一边喂猫猫，三只猫，太可爱了</h2><p><img src="https://pic.imgdb.cn/item/610d4e075132923bf8daa439.jpg" alt></p><hr><h2 id="洗了个澡吃完饭看男团比赛"><a href="#洗了个澡吃完饭看男团比赛" class="headerlink" title="洗了个澡吃完饭看男团比赛"></a>洗了个澡吃完饭看男团比赛</h2><hr><h2 id="心动的加更，甜！"><a href="#心动的加更，甜！" class="headerlink" title="心动的加更，甜！"></a>心动的加更，甜！</h2><p><img src="https://pic.imgdb.cn/item/610d50525132923bf8e051c2.jpg" alt></p><hr><h2 id="骑了会车，最后干脆下来推车走了一圈，凉风真不错"><a href="#骑了会车，最后干脆下来推车走了一圈，凉风真不错" class="headerlink" title="骑了会车，最后干脆下来推车走了一圈，凉风真不错"></a>骑了会车，最后干脆下来推车走了一圈，凉风真不错</h2><p><img src="https://pic.imgdb.cn/item/610d4e085132923bf8daa716.jpg" alt></p><hr><h2 id="支付宝红包！买东西的时候突然想起来啦哈哈哈哈，居然真的有用！"><a href="#支付宝红包！买东西的时候突然想起来啦哈哈哈哈，居然真的有用！" class="headerlink" title="支付宝红包！买东西的时候突然想起来啦哈哈哈哈，居然真的有用！"></a>支付宝红包！买东西的时候突然想起来啦哈哈哈哈，居然真的有用！</h2><p><img src="https://pic.imgdb.cn/item/610d507f5132923bf8e0ce19.jpg" alt></p><hr><h2 id="看了无间道！"><a href="#看了无间道！" class="headerlink" title="看了无间道！"></a>看了无间道！</h2><p><img src="https://pic.imgdb.cn/item/610d50a15132923bf8e1246c.jpg" alt></p><hr><h2 id="和老同学打了个电话"><a href="#和老同学打了个电话" class="headerlink" title="和老同学打了个电话"></a>和老同学打了个电话</h2><h2 id="最后就是还买了几件衣服！"><a href="#最后就是还买了几件衣服！" class="headerlink" title="最后就是还买了几件衣服！"></a>最后就是还买了几件衣服！</h2><hr><blockquote><p>快乐来自内心，而烦扰源于他人，每一天都快乐</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一天会有多少快乐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;早上起来去吃了早饭&quot;&gt;&lt;a href=&quot;#早上起来去吃了早饭&quot; class=&quot;headerlink&quot; title=&quot;早上起来去吃了早饭&quot;&gt;&lt;/a&gt;早上起来去吃了早饭&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/610d50165132923bf8dfb49a.jpg&quot; alt&gt;&lt;br&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/610d50165132923bf8dfb4ad.jpg&quot; alt&gt;&lt;br&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/610d50165132923bf8dfb487.jpg&quot; alt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;回来后完成并且不断优化了挂件&quot;&gt;&lt;a href=&quot;#回来后完成并且不断优化了挂件&quot; class=&quot;headerlink&quot; title=&quot;回来后完成并且不断优化了挂件&quot;&gt;&lt;/a&gt;回来后完成并且不断优化了挂件&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/610d4e805132923bf8dbc490.jpg&quot; alt&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;躺下睡了个小觉&quot;&gt;&lt;a href=&quot;#躺下睡了个小觉&quot; class=&quot;headerlink&quot; title=&quot;躺下睡了个小觉&quot;&gt;&lt;/a&gt;躺下睡了个小觉&lt;/h2&gt;&lt;hr&gt;
&lt;h2 id=&quot;拍云的时候找到了丢失已久的钥匙&quot;&gt;&lt;a href=&quot;#拍云的时候找到了丢失已久的钥匙&quot; class=&quot;headerlink&quot; title=&quot;拍云的时候找到了丢失已久的钥匙&quot;&gt;&lt;/a&gt;拍云的时候找到了丢失已久的钥匙&lt;/h2&gt;
    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>留言本</title>
    <link href="https://asea.fun/post/5d8c0cb2.html"/>
    <id>https://asea.fun/post/5d8c0cb2.html</id>
    <published>2021-08-03T13:18:45.000Z</published>
    <updated>2021-08-03T13:22:08.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0732eaedc4eb733fa9418f3f5c2830fbcb4b0dd981ec7c3e90a187ee22bebce9">574b1481c95b9d13566c06ed649275dfa0dcd4a557eb09a03d605f102811239c26ebe9ec0fc5a0e7c03356a08fd08ac840ae03afa68566b4f7f64743ed3f206dc80a4f8f39e903e885a3cc46708651e07bd723ba3cda18322470bd46bd6e304cb4ed4ae5f98fc42242aa72e0bbc943165e348871d0dbe79c56793bf3498e58fa0dd0f1ea62a1a369b519090d74b622ab10e40769132e7552b8a5c260739bd21f310a0b0d20c978c4ddb4c316739ed44e09350f1f4f251d8c70f55727e8b1bd7736471bc92fd1e97fe742998791a90d07c30df8315fe91d8f4bb7c614b9a0715186012945dc46b32980e5b2521869e3922274842e5641c418b3fd613fca64ddb7e62ee60d3837331530fb584a9872ede09da80582924099246bf7587127bf8136dcb44ad9d4616f07fae1996cea4e88b458b533350ed949136bbceac585703bd6b17c0cb00c0ec518b9ec0f976e2e736b8cb603452c119f569a6c596416b3a431ea764ccd6250174e16bba56dba35f334aa91cdd537883d25e4969e5b08a80bf665aed3a63c72e0b064dfc4aa15842543cb2abbed29c9f7c51e59f7367b5ce4ce85c43a2c939f681473e81f36b3ccd7b8d4ff39aaf6052a639ea2a63f5b0c9a93ea9fcc67378bbb710a2fc3e6cd8228a1c4acf529dee469bd33dfcd2757fc181b8d53280b89656bc979b6c2cc1542d2423e781561f8bc6a83b8c74263e2768c223dbe46ea1bf76f4091a21f2cf82263f36d905cb0b9d764fd6a71f88f26440f8457cbb64e8c4770047e18f18ae11d1258bb1f6be75de472085c7b552b9e5f6acdf871262e6aa81613effcc359879ba56de9d8dd62bae162cf602eab9e6c7053815deef9b47dfc03331ee2faa8032e0c91b5f83e3d0d7a97191402d112ad92b56faf867574f90f478eca9df0c55ac677209fa3f449daa79bffbfd86a80ae8ae91e5d57641e7e8cc24a3ca420685e9b7b896a94b7a7ad7b4e3f3824326f36b40ee9e08204c1592c357655cc1c2ce11e827bcf09255ee9e7e01cd4e288262e53eb197364b8573abd3cc88390f9fc4a3a69661fbaa4b29cf3d55f42055e81f22da2470cfdc9df53b0ec78e786050d7338e173be0f07fee3d31c53fa8f99b32dd60ba7ce830f453172b88f21ade33a3b36239cf68a6ab0627f67ae6ccc4c332cd56a56a862b89ea83845ef9952922b6bfe7dd5aa2bc41da59e59e42e9dbc1722d05f6de145049c17983f03c7aade2d45996732adb57eba56422987c2ee041e821ea0e6791e84d64b66fd85deb779ac324e9227946c57b0f45a8c5782533459f2551c84cfeed045bcc37a3139b6e83c7328f48d223b4734ef216d96bcbfd4bb826989cb97037679096ecad230ad8efeabc0469a6c04d34c58ef0fb5d55920bf0f02cd1588bc3a611c61d426dcf4189d8be2af90dca3f433fac365ae3f487b7a47184c400c56c00f3c86180742e0b2b5ad5c8dadaec58da689e00061a5d5e724c5c2bfb0cd2ce51be329d860cc312b5100347863fcb7e3208a13668243cb98205fa750e2131bc3350d3678309eeb5f74c2cfb0b3ee46d732aca82e8584aa5e933d7abde5e097c1741d92ecc4b3a120ce6c7ca850177ac5910af967c00ae31991d7752fd6a3b54fbaa5853676f3d57c08630cac1c1772b7aecd0071410c8b6ccc807891b7a7d675788ed9e7042c1417d5dc96148d90bbd08f782bf6cb2a8574d83918b347e3770ccd210250b1ed9f0d91974fcbdb0744c008f9dab6138a6b0e5ac1a14487cc3945caaaa4fa1a0109e0eb658510b609e8da0b9dbe713f091bc3899101a188a3b9fe3a67b6dfc5935436c06bec6c4b751039263c94255537164899a00b5ddf8e4edf1a44e6b15dc7fa3f75b24eb4998047e77e1e516caac94b64834e23aa9bb4c84ceab013fa9a6e70a6bb5256477efe2864a5332c298da42e7412237bf20278ecc05f139c9efa44eb05b5a32b9c7ee8a7f9ea71047079d733acbb4ad7bcc25ce7725e492b9e7cf7994e6db758f38929469d570695f585e02be60b3c95424ee5060e5c6cf55ab117bfb11b680c49c13e8866bfaaf823ff46ab34c99250ded50bdb1bd32c4db0d14610a39d46424f0fb9db8dc176e80725577632bc48c23d9a71584defb4bf4c447486d211df814e81794b5f373f3431de969f1b16a7db441ca08775f8c7c7de649e64b098294b1b660d52cccff50003bd485f757701eef9b4fe2c932e1c99342194afc123f0bdc2484a2d39108871b81c6cb2803d4d6928364c62f2aeefa15dafda5b6194a4bfa5674049f4acaa55ead9f3b71f422584baf6febdda55247693b29856d40a3bb2ac809cf6d4a5e8b512840189fa1e4599700454e5e2ce4069a1f2206d71ccfab6ac878057284a6836616689a32cc03d4cef079cb30ae029c663cfcdd1945a6c80440ae87b03d45f154ed5bc17b2aef9c23e99f1ef8b7527ef8f5355f162349f9c1b3d3df5e24a5e12e2c5555defdc79c95855c80b07a2da92d0c9447f3b535d91cf5c750d5f7c9cceee932f4800e196ca883a75611ee4f7e7ade350aa9032e20b64362934709fd5617d0ed4fa1710bc4614e15186e7688648d19d76725fc3a07c74521b7f9bc219164b01fddab9828656a935acc7830752fd94d7c4311a9abc5da2e351fe18d5b905c88db88f6d03b2b8eb1bc7cdc6009e0d3604975a148e2735ebca</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">已加密，请在这里密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;hbe hbe-container&quot; id=&quot;hexo-blog-encrypt&quot; data-wpm=&quot;抱歉, 这个密码看着不太对, 请再试试.&quot; data-whm=&quot;抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.&quot;&gt;
  &lt;script id=&quot;hbeData&quot; type=&quot;hbeData&quot; data-hmacdigest=&quot;0732eaedc4eb733fa9418f3f5c2830fbcb4b0dd981ec7c3e90a187ee22bebce9&quot;&gt;574b1481c95b9d13566c06ed649275dfa0dcd4a557eb09a03d605f102811239c26ebe9ec0fc5a0e7c03356a08fd08ac840ae03afa68566b4f7f64743ed3f206dc80a4f8f39e903e885a3cc46708651e07bd723ba3cda18322470bd46bd6e304cb4ed4ae5f98fc42242aa72e0bbc943165e348871d0dbe79c56793bf3498e58fa0dd0f1ea62a1a369b519090d74b622ab10e40769132e7552b8a5c260739bd21f310a0b0d20c978c4ddb4c316739ed44e09350f1f4f251d8c70f55727e8b1bd7736471bc92fd1e97fe742998791a90d07c30df8315fe91d8f4bb7c614b9a0715186012945dc46b32980e5b2521869e3922274842e5641c418b3fd613fca64ddb7e62ee60d3837331530fb584a9872ede09da80582924099246bf7587127bf8136dcb44ad9d4616f07fae1996cea4e88b458b533350ed949136bbceac585703bd6b17c0cb00c0ec518b9ec0f976e2e736b8cb603452c119f569a6c596416b3a431ea764ccd6250174e16bba56dba35f334aa91cdd537883d25e4969e5b08a80bf665aed3a63c72e0b064dfc4aa15842543cb2abbed29c9f7c51e59f7367b5ce4ce85c43a2c939f681473e81f36b3ccd7b8d4ff39aaf6052a639ea2a63f5b0c9a93ea9fcc67378bbb710a2fc3e6cd8228a1c4acf529dee469bd33dfcd2757fc181b8d53280b89656bc979b6c2cc1542d2423e781561f8bc6a83b8c74263e2768c223dbe46ea1bf76f4091a21f2cf82263f36d905cb0b9d764fd6a71f88f26440f8457cbb64e8c4770047e18f18ae11d1258bb1f6be75de472085c7b552b9e5f6acdf871262e6aa81613effcc359879ba56de9d8dd62bae162cf602eab9e6c7053815deef9b47dfc03331ee2faa8032e0c91b5f83e3d0d7a97191402d112ad92b56faf867574f90f478eca9df0c55ac677209fa3f449daa79bffbfd86a80ae8ae91e5d57641e7e8cc24a3ca420685e9b7b896a94b7a7ad7b4e3f3824326f36b40ee9e08204c1592c357655cc1c2ce11e827bcf09255ee9e7e01cd4e288262e53eb197364b8573abd3cc88390f9fc4a3a69661fbaa4b29cf3d55f42055e81f22da2470cfdc9df53b0ec78e786050d7338e173be0f07fee3d31c53fa8f99b32dd60ba7ce830f453172b88f21ade33a3b36239cf68a6ab0627f67ae6ccc4c332cd56a56a862b89ea83845ef9952922b6bfe7dd5aa2bc41da59e59e42e9dbc1722d05f6de145049c17983f03c7aade2d45996732adb57eba56422987c2ee041e821ea0e6791e84d64b66fd85deb779ac324e9227946c57b0f45a8c5782533459f2551c84cfeed045bcc37a3139b6e83c7328f48d223b4734ef216d96bcbfd4bb826989cb97037679096ecad230ad8efeabc0469a6c04d34c58ef0fb5d55920bf0f02cd1588bc3a611c61d426dcf4189d8be2af90dca3f433fac365ae3f487b7a47184c400c56c00f3c86180742e0b2b5ad5c8dadaec58da689e00061a5d5e724c5c2bfb0cd2ce51be329d860cc312b5100347863fcb7e3208a13668243cb98205fa750e2131bc3350d3678309eeb5f74c2cfb0b3ee46d732aca82e8584aa5e933d7abde5e097c1741d92ecc4b3a120ce6c7ca850177ac5910af967c00ae31991d7752fd6a3b54fbaa5853676f3d57c08630cac1c1772b7aecd0071410c8b6ccc807891b7a7d675788ed9e7042c1417d5dc96148d90bbd08f782bf6cb2a8574d83918b347e3770ccd210250b1ed9f0d91974fcbdb0744c008f9dab6138a6b0e5ac1a14487cc3945caaaa4fa1a0109e0eb658510b609e8da0b9dbe713f091bc3899101a188a3b9fe3a67b6dfc5935436c06bec6c4b751039263c94255537164899a00b5ddf8e4edf1a44e6b15dc7fa3f75b24eb4998047e77e1e516caac94b64834e23aa9bb4c84ceab013fa9a6e70a6bb5256477efe2864a5332c298da42e7412237bf20278ecc05f139c9efa44eb05b5a32b9c7ee8a7f9ea71047079d733acbb4ad7bcc25ce7725e492b9e7cf7994e6db758f38929469d570695f585e02be60b3c95424ee5060e5c6cf55ab117bfb11b680c49c13e8866bfaaf823ff46ab34c99250ded50bdb1bd32c4db0d14610a39d46424f0fb9db8dc176e80725577632bc48c23d9a71584defb4bf4c447486d211df814e81794b5f373f3431de969f1b16a7db441ca08775f8c7c7de649e64b098294b1b660d52cccff50003bd485f757701eef9b4fe2c932e1c99342194afc123f0bdc2484a2d39108871b81c6cb2803d4d6928364c62f2aeefa15dafda5b6194a4bfa5674049f4acaa55ead9f3b71f422584baf6febdda55247693b29856d40a3bb2ac809cf6d4a5e8b512840189fa1e4599700454e5e2ce4069a1f2206d71ccfab6ac878057284a6836616689a32cc03d4cef079cb30ae029c663cfcdd1945a6c80440ae87b03d45f154ed5bc17b2aef9c23e99f1ef8b7527ef8f5355f162349f9c1b3d3df5e24a5e12e2c5555defdc79c95855c80b07a2da92d0c9447f3b535d91cf5c750d5f7c9cceee932f4800e196ca883a75611ee4f7e7ade350aa9032e20b64362934709fd5617d0ed4fa1710bc4614e15186e7688648d19d76725fc3a07c74521b7f9bc219164b01fddab9828656a935acc7830752fd94d7c4311a9abc5da2e351fe18d5b905c88db88f6d03b2b8eb1bc7cdc6009e0d3604975a148e2735ebca&lt;/script&gt;
  &lt;div class=&quot;hbe hbe-content&quot;&gt;
    &lt;div class=&quot;hbe hbe-input hbe-input-default&quot;&gt;
      &lt;input class=&quot;hbe hbe-input-field hbe-input-field-default&quot; type=&quot;password&quot; id=&quot;hbePass&quot;&gt;
      &lt;label class=&quot;hbe hbe-input-label hbe-input-label-default&quot; for=&quot;hbePass&quot;&gt;
        &lt;span class=&quot;hbe hbe-input-label-content hbe-input-label-content-default&quot;&gt;已加密，请在这里密码.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&quot;/lib/hbe.js&quot;&gt;&lt;/script&gt;&lt;link href=&quot;/css/hbe.style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>c++学习笔记</title>
    <link href="https://asea.fun/post/258a2097.html"/>
    <id>https://asea.fun/post/258a2097.html</id>
    <published>2021-07-25T15:40:14.000Z</published>
    <updated>2021-07-25T15:40:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="c-学习笔记"><a href="#c-学习笔记" class="headerlink" title="c++学习笔记"></a>c++学习笔记</h1><h2 id="四大件"><a href="#四大件" class="headerlink" title="四大件"></a>四大件</h2><ol><li>数据结构和算法</li><li>计算机网络</li><li>操作系统</li><li>设计模式组成原理</li></ol><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ol><li>常量</li></ol><p>​    宏常量 #define</p><p>​    const 修饰变量</p><p>​    均不可修改</p><ol><li>字符串<ol><li>char str[] = “ldksjfa”</li><li>string str = “dlkjafd” 需要头文件<string></string></li></ol></li></ol><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ol><li>三目运算符可以返回变量也可以返回变量值</li></ol><h2 id="控制结构"><a href="#控制结构" class="headerlink" title="控制结构"></a>控制结构</h2><ol><li>if - else if - else</li><li>switch - case break- case break-default break ==只能是int 或者 char，必须break==</li><li>循环结构 while（）{},do{}while()，for(int i =0;i&lt;10;i++)</li><li>goto FLAG; FLAG:</li><li>continue</li></ol><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><ol><li><p>定义数组</p><ol><li>int a[10];</li><li>int a[10] = {0,1,2,3,4,5,6,7,8,9}</li><li>int a[] = {0,1,2,3}</li></ol></li><li><p>特点</p><ol><li>数据类型相同</li><li>内存空间连续</li></ol></li><li><p>二维数组</p><ol><li>行数</li><li>元素数目（用好sizeof())</li><li>理解好变量名与地址的关系</li></ol></li></ol><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><pre><code>1. 声明可以写多次，定义只能写一次</code></pre><h2 id="分文件编写"><a href="#分文件编写" class="headerlink" title="分文件编写"></a>分文件编写</h2><ol><li>.h写声明，.cpp写定义，最后新的cpp里引用.h即可</li></ol><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> * p = &amp;a;</span><br><span class="line">cou&lt;&lt;*p; <span class="comment">//解引用，找到内存中的数据</span></span><br></pre></td></tr></table></figure><p>任何类型的指针都占四个字节</p><h3 id="空指针和野指针"><a href="#空指针和野指针" class="headerlink" title="空指针和野指针"></a>空指针和野指针</h3><ol><li>空指针：指向内存编号为0的指针，一般用来初始换（0-255）不可访问，系统占用。<code>int * p = nullptr</code></li><li>野指针：指向非法空间（是一种错误），无法访问。</li></ol><h3 id="const修饰指针"><a href="#const修饰指针" class="headerlink" title="const修饰指针"></a>const修饰指针</h3><h4 id="常量指针"><a href="#常量指针" class="headerlink" title="常量指针"></a>常量指针</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * p = &amp;a;</span><br><span class="line">cou&lt;&lt;*p&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">a = <span class="number">20</span>; <span class="comment">//这样是可以的</span></span><br><span class="line">*p = <span class="number">20</span>; <span class="comment">//不可以！！指针的指向可以修改，但不可以通过解引用来修改</span></span><br></pre></td></tr></table></figure><h4 id="指针常量"><a href="#指针常量" class="headerlink" title="指针常量"></a>指针常量</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> * <span class="keyword">const</span> p = &amp;a; <span class="comment">//指向不可以改，解引用可以改。</span></span><br></pre></td></tr></table></figure><h4 id="常量指针常量"><a href="#常量指针常量" class="headerlink" title="常量指针常量"></a>常量指针常量</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * <span class="keyword">const</span> p = &amp;a; <span class="comment">//都不可以改</span></span><br></pre></td></tr></table></figure><h3 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> * p = arr;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用指针遍历数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    p++; <span class="comment">//向后走四个字节，即到下个元素</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针与函数（引用（地址）传递）"><a href="#指针与函数（引用（地址）传递）" class="headerlink" title="指针与函数（引用（地址）传递）"></a>指针与函数（引用（地址）传递）</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> * p1, <span class="keyword">int</span> * p2)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span>(*p1 + *p2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; add(&amp;a, &amp;b);</span><br></pre></td></tr></table></figure><h2 id="杂乱"><a href="#杂乱" class="headerlink" title="杂乱"></a>杂乱</h2><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><ol><li><ctime></ctime></li><li><iostream></iostream></li></ol><h3 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h3><ol><li>pow是浮点计算，貌似算出来的数可能导致不相等，可以加个(int)，加（int）会导致不准确，需要自己写函数（不同编译器不一样效果）</li><li>cout输出小数不会带后面的0；</li><li>当在循环的时候要找到最好的判断方式，在最合适的地方break，不然很容易超时！</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;c-学习笔记&quot;&gt;&lt;a href=&quot;#c-学习笔记&quot; class=&quot;headerlink&quot; title=&quot;c++学习笔记&quot;&gt;&lt;/a&gt;c++学习笔记&lt;/h1&gt;&lt;h2 id=&quot;四大件&quot;&gt;&lt;a href=&quot;#四大件&quot; class=&quot;headerlink&quot; title=&quot;四大件&quot;&gt;&lt;/a&gt;四大件&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;数据结构和算法&lt;/li&gt;
&lt;li&gt;计算机网络&lt;/li&gt;
&lt;li&gt;操作系统&lt;/li&gt;
&lt;li&gt;设计模式组成原理&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据类型&quot;&gt;&lt;/a&gt;数据类型&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;常量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​    宏常量 #define&lt;/p&gt;
&lt;p&gt;​    const 修饰变量&lt;/p&gt;
&lt;p&gt;​    均不可修改&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;字符串&lt;ol&gt;
&lt;li&gt;char str[] = “ldksjfa”&lt;/li&gt;
&lt;li&gt;string str = “dlkjafd” 需要头文件&lt;string&gt;&lt;/string&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;运算符&quot;&gt;&lt;a href=&quot;#运算符&quot; class=&quot;headerlink&quot; title=&quot;运算符&quot;&gt;&lt;/a&gt;运算符&lt;/h2&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="c++" scheme="https://asea.fun/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>c++学习笔记</title>
    <link href="https://asea.fun/post/258a2097.html"/>
    <id>https://asea.fun/post/258a2097.html</id>
    <published>2021-07-25T15:40:14.000Z</published>
    <updated>2021-08-17T07:00:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="四大件"><a href="#四大件" class="headerlink" title="四大件"></a>四大件</h2><ol><li>数据结构和算法</li><li>计算机网络</li><li>操作系统</li><li>设计模式组成原理</li></ol><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ol><li>常量</li></ol><p>​    宏常量 #define</p><p>​    const 修饰变量</p><p>​    均不可修改</p><ol><li>字符串<ol><li>char str[] = “ldksjfa”</li><li>string str = “dlkjafd” 需要头文件<string></string></li></ol></li></ol><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ol><li>三目运算符可以返回变量也可以返回变量值</li></ol><h2 id="控制结构"><a href="#控制结构" class="headerlink" title="控制结构"></a>控制结构</h2><ol><li>if - else if - else</li><li>switch - case break- case break-default break ==只能是int 或者 char，必须break==</li><li>循环结构 while（）{},do{}while()，for(int i =0;i&lt;10;i++)</li><li>goto FLAG; FLAG:</li><li>continue</li></ol><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><ol><li><p>定义数组</p><ol><li>int a[10];</li><li>int a[10] = {0,1,2,3,4,5,6,7,8,9}</li><li>int a[] = {0,1,2,3}</li></ol></li><li><p>特点</p><ol><li>数据类型相同</li><li>内存空间连续</li></ol></li><li><p>赋值</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">//初始化表长度小于要被初始化的数组的元素数目，剩余元素均为0；</span></span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>==注意==</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> a[n]; <span class="comment">//这是错误的写法，尽管有些编译器可能不会报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b[<span class="number">0</span>]; <span class="comment">//长度为0的数组没有任何意义</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;c[<span class="number">11</span>]; <span class="comment">//越界但可以输出</span></span><br></pre></td></tr></table></figure></li><li><p>排序查找</p><p>选择排序</p><p>冒泡排序</p></li></ol><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><ol><li><p>初始化赋值</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;, &#123;<span class="number">2</span>,<span class="number">3</span>&#125;, &#123;<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> a[][<span class="number">10</span>] = &#123;&#123;&#125;,&#123;&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li>==注意==<ol><li>行数</li><li>元素数目（用好sizeof())</li><li>理解好变量名与地址的关系</li></ol></li></ol><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ol><li><p>初始化</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[] = &#123;<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> ch[] = &#123;<span class="string">&quot;hello&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> ch[] = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> ch[] = <span class="string">&quot;hello&quot;</span>; <span class="comment">//这是错误的</span></span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">10</span>] = <span class="string">&quot;hello&quot;</span>; <span class="comment">//后面的字符都是&#x27;\0&#x27;,&#x27;\0&#x27;是不可显示的</span></span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">6</span>] = &#123;<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>&#125; <span class="comment">//是字符串</span></span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">5</span>] = &#123;<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>&#125; <span class="comment">//不是字符串</span></span><br></pre></td></tr></table></figure></li><li><p>空字符串</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[] = <span class="string">&quot;&quot;</span>; <span class="comment">//占用一个字节存储&#x27;\0&#x27;</span></span><br><span class="line"><span class="comment">//&#x27;a&#x27;与&quot;a&quot;，前者是简单的变量，后者是数组</span></span><br></pre></td></tr></table></figure></li><li><p>遍历</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>（<span class="keyword">int</span> i = <span class="number">0</span>; str[i]!=<span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;str[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>输入输出</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">6</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;str; <span class="comment">//空格字符会结束输入</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;str; <span class="comment">//遇到第一个&#x27;\0&#x27;结束。</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>.get(str, length, endchar); <span class="comment">//结束字符默认是&#x27;\n&#x27;,结束字符会留在输入流中</span></span><br><span class="line"><span class="built_in">cin</span>.getline(str, length, endchar); <span class="comment">//结束字符默认是&#x27;\n&#x27;，结束字符不会留在输入流中</span></span><br></pre></td></tr></table></figure></li><li><p>string</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="built_in">strlen</span>(str);<span class="comment">//可见字符串长度，不包括&#x27;\0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">strcpy</span>(str1, str2); <span class="comment">//不能用str1 = str2赋值，str1 要 大于 str2，//字符串排序</span></span><br><span class="line"><span class="built_in">strcat</span>(str1, str2); <span class="comment">//拼接</span></span><br><span class="line"><span class="built_in">strcmp</span>(str1, str2); <span class="comment">//比较大小，挨个比较ascii码 返回值是-1，0，1</span></span><br><span class="line"><span class="comment">//以上三个都有n族，即strncpy,strncat,strncmp，即操作前n个字符</span></span><br><span class="line"></span><br><span class="line">strlwr(str); <span class="comment">//转换为小写</span></span><br><span class="line">strupr(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//应用</span></span><br><span class="line">len = <span class="built_in">strlen</span>(str1);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123; <span class="comment">//不推荐</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str1[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>声明可以写多次，定义只能写一次</li><li>scanf返回值是读入的个数，<code>ctrl Z</code>返回-1</li><li>cin返回值是<code>true</code>或<code>false</code></li></ol><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ol><li><p>定义的时候如果不声明返回值类型，默认是<code>int</code></p></li><li><p>如果return类型和定义类型不同，则强转（以定义为准）</p></li><li><p>函数不可以嵌套定义，但可以嵌套调用。</p></li></ol><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><ol><li>传入的类型不对时会发强转</li></ol><h3 id="变量作用域"><a href="#变量作用域" class="headerlink" title="变量作用域"></a>变量作用域</h3><ol><li>复合语句内是局部变量</li><li>复合语句是指大括号内，不一定是循环或者函数，大括号可以随时出现，组成复合语句。</li></ol><h3 id="变量存储类型"><a href="#变量存储类型" class="headerlink" title="变量存储类型"></a>变量存储类型</h3><blockquote><p>每个变量都有两种属性，分别是<strong>数据类型</strong>和<strong>存储类型</strong>，因此标准的变量定义应该是<code>标准类型 数据类型 变量名</code></p></blockquote><ol><li>auto（自动变量）</li><li>register（寄存器变量）</li><li>extern（外部变量）引用另外文件的函数前面的extern可以省略</li><li>static（静态（外部）变量）其他文件引用不到</li></ol><h3 id="数组作为参数"><a href="#数组作为参数" class="headerlink" title="数组作为参数"></a>数组作为参数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myFun</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myFun2</span><span class="params">(<span class="keyword">int</span> arr[][<span class="number">3</span>], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr1[<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> arr2[][<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    myFun(arr1, <span class="number">3</span>); <span class="comment">//注意，函数不会重新创建新的数组</span></span><br><span class="line">    myFun2(arr2, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="带默认值的函数"><a href="#带默认值的函数" class="headerlink" title="带默认值的函数"></a>带默认值的函数</h3><ol><li>缺省形参值必须从右向左连续定义（自右向左入栈）</li><li>如果省掉了某个实参，直到最右边的实参都要省</li><li>缺省值应该在函数原型就给出</li><li>同一作用域，不可以重复定义缺省值</li><li>函数原型给出缺省值时，形参名可以省略</li></ol><h3 id="内联函数"><a href="#内联函数" class="headerlink" title="内联函数"></a>内联函数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">fun</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fun(); <span class="comment">//本质是编译的时候将此处替换了，即变成了顺序执行，空间换取时间</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>==仅在原型出加<code>inline</code>无效，内联函数的定义必须出现在调用之前，否则就是普通函数==</p><p>==如果函数体积较大或者函数内有循环比较耗时，则不宜用内联==</p><h3 id="重载函数"><a href="#重载函数" class="headerlink" title="重载函数"></a>重载函数</h3><ol><li>c语言是不支持的</li><li>仅仅是返回值不同是不行的，编译不通过</li><li>编译器决定调用哪个函数的过程称之为<strong>绑定</strong></li><li>绑定的优先级：精确-&gt;低转高-&gt;高转低</li><li>带默认值的函数等可能引起二议性</li></ol><h3 id="函数模板"><a href="#函数模板" class="headerlink" title="函数模板"></a>函数模板</h3><ol><li>泛型化（类型的参数化）</li></ol><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;  <span class="comment">//也可以用class</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Swap</span><span class="params">(T&amp; a, T&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T tmp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = tmp;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">    Swap(a, b);<span class="comment">//自动推到调用</span></span><br><span class="line">    <span class="comment">//Swap&lt;int&gt;(a, b);//显示指定调用</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">float</span> c = <span class="number">12.3</span>;</span><br><span class="line">    <span class="keyword">float</span> d = <span class="number">23.4</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//Swap(c, d); //自动推到调用</span></span><br><span class="line">    Swap&lt;<span class="keyword">float</span>&gt;(c, d); <span class="comment">//显示指定调用</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;d = &quot;</span> &lt;&lt; d &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/lms1008611/article/details/81985815">参考资料《C++中的函数模板》</a></p><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><h3 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> * p = &amp;a;</span><br><span class="line">cou&lt;&lt;*p; <span class="comment">//解引用，找到内存中的数据</span></span><br></pre></td></tr></table></figure><p>任何类型的指针都占四个字节</p><h3 id="空指针和野指针"><a href="#空指针和野指针" class="headerlink" title="空指针和野指针"></a>空指针和野指针</h3><blockquote><p>当指针定义为0、NULL、或者不赋值，此时不能解引用，否则崩溃</p></blockquote><ol><li>空指针：指向内存编号为0的指针，一般用来初始换（0-255）不可访问，系统占用。<code>int * p = NULL</code>或<code>int * p = 0</code></li><li>野指针：指向非法空间（是一种错误），无法访问。</li></ol><h3 id="const修饰指针"><a href="#const修饰指针" class="headerlink" title="const修饰指针"></a>const修饰指针</h3><blockquote><p>指针就是一种特殊的变量，专门用来存放地址。地址可以看作一个特殊的数据类型，地址不可以复制给int变量，但可以赋值给指针变量，int的地址，只能复制给int *。地址可以解引用，所以&amp;a和p的用法是一样的。</p></blockquote><h4 id="常量指针"><a href="#常量指针" class="headerlink" title="常量指针"></a>常量指针</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * p = &amp;a;</span><br><span class="line">cou&lt;&lt;*p&lt;&lt;*&amp;a&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p %p&quot;</span>,&amp;a, p); <span class="comment">//地址的占位符应该用%p</span></span><br><span class="line">a = <span class="number">20</span>; <span class="comment">//这样是可以的</span></span><br><span class="line">*p = <span class="number">20</span>; <span class="comment">//不可以！！指针的指向可以修改，但不可以通过解引用来修改</span></span><br></pre></td></tr></table></figure><h4 id="指针常量"><a href="#指针常量" class="headerlink" title="指针常量"></a>指针常量</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> * <span class="keyword">const</span> p = &amp;a; <span class="comment">//指向不可以改，解引用可以改。</span></span><br></pre></td></tr></table></figure><h4 id="常量指针常量"><a href="#常量指针常量" class="headerlink" title="常量指针常量"></a>常量指针常量</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * <span class="keyword">const</span> p = &amp;a; <span class="comment">//都不可以改</span></span><br></pre></td></tr></table></figure><h3 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h3><blockquote><p>此处，若那指针p指向数组首地址，那么此时的<strong>数组名</strong>和<strong>指针名</strong>的本质其实都是一个<strong>指针</strong>，访问数组的元素可以通过<u>方括号</u>来访问，也可以用<u>*</u>来访问。需要注意的是p和a的区别，p是变量，但a是常量指针，a不可以进行a++等运算。另外，指针相加无意义，相减有意义。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> * p = arr;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用指针遍历数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    p++; <span class="comment">//向后走四个字节，即到下个元素，p+1指向下一个元素，p-1指向上一个元素</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过指针引用数组元素</span></span><br><span class="line"><span class="comment">//下标法 和  指针法</span></span><br><span class="line">p[i];</span><br><span class="line">a[i];</span><br><span class="line">*(p+i);</span><br><span class="line">*(a+i);</span><br></pre></td></tr></table></figure><h3 id="指针与字符串"><a href="#指针与字符串" class="headerlink" title="指针与字符串"></a>指针与字符串</h3><blockquote><p>指向字符串常量和指向字符数组的指针有什么区别呢？</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> *<span class="built_in">string</span>;</span><br><span class="line"><span class="built_in">string</span> = <span class="string">&quot;abcd&quot;</span>; <span class="comment">//string是常量区（数据段）里&quot;abcd&quot;的首地址，不可以修改*string2的值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *string2, ss[] = <span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">string2 = ss; <span class="comment">//string2是栈里&quot;abcd&quot;的首地址，可以修改*string2的值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">string</span>; <span class="comment">//即从string开始，知道&#x27;\0&#x27;结束，所以类推cout&lt;&lt;string+1即输出&quot;bcd&quot;</span></span><br></pre></td></tr></table></figure><p>要搞清楚<code>string</code>、<code>string2</code>、<code>ss</code>三者的区别：</p><ol><li>*string不可以修改，两外两个可以</li><li>ss不可以修改，两外两个可以</li><li>三者都属于指针，第一个指向常量即<strong>常量指针</strong>，第二个正常指针，第三个本身是常量即<strong>指针常量</strong></li></ol><h1 id="c-学习笔记"><a href="#c-学习笔记" class="headerlink" title="c++学习笔记"></a>c++学习笔记</h1><h2 id="四大件-1"><a href="#四大件-1" class="headerlink" title="四大件"></a>四大件</h2><ol><li>数据结构和算法</li><li>计算机网络</li><li>操作系统</li><li>设计模式组成原理</li></ol><h2 id="数据类型-1"><a href="#数据类型-1" class="headerlink" title="数据类型"></a>数据类型</h2><ol><li>常量</li></ol><p>​    宏常量 #define</p><p>​    const 修饰变量</p><p>​    均不可修改</p><ol><li>字符串<ol><li>char str[] = “ldksjfa”</li><li>string str = “dlkjafd” 需要头文件<string></string></li></ol></li></ol><h2 id="运算符-1"><a href="#运算符-1" class="headerlink" title="运算符"></a>运算符</h2><ol><li>三目运算符可以返回变量也可以返回变量值</li></ol><h2 id="控制结构-1"><a href="#控制结构-1" class="headerlink" title="控制结构"></a>控制结构</h2><ol><li>if - else if - else</li><li>switch - case break- case break-default break <strong>只能是int 或者 char，必须break</strong></li><li>循环结构 while（）{},do{}while()，for(int i =0;i&lt;10;i++)</li><li>goto FLAG; FLAG:</li><li>continue</li></ol><h2 id="数组-1"><a href="#数组-1" class="headerlink" title="数组"></a>数组</h2><h3 id="一维数组-1"><a href="#一维数组-1" class="headerlink" title="一维数组"></a>一维数组</h3><ol><li><p>定义数组</p><ol><li>int a[10];</li><li>int a[10] = {0,1,2,3,4,5,6,7,8,9}</li><li>int a[] = {0,1,2,3}</li></ol></li><li><p>特点</p><ol><li>数据类型相同</li><li>内存空间连续</li></ol></li><li><p>赋值</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">//初始化表长度小于要被初始化的数组的元素数目，剩余元素均为0；</span></span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p><strong>注意</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">int</span> a[n]; <span class="comment">//这是错误的写法，尽管有些编译器可能不会报错</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b[<span class="number">0</span>]; <span class="comment">//长度为0的数组没有任何意义</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;c[<span class="number">11</span>]; <span class="comment">//越界但可以输出</span></span><br></pre></td></tr></table></figure></li><li><p>排序查找</p><p>选择排序</p><p>冒泡排序</p></li></ol><h3 id="二维数组-1"><a href="#二维数组-1" class="headerlink" title="二维数组"></a>二维数组</h3><ol><li><p>初始化赋值</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>][<span class="number">10</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;, &#123;<span class="number">2</span>,<span class="number">3</span>&#125;, &#123;<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> a[][<span class="number">10</span>] = &#123;&#123;&#125;,&#123;&#125;&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><strong>注意</strong><ol><li>行数</li><li>元素数目（用好sizeof())</li><li>理解好变量名与地址的关系</li></ol></li></ol><h3 id="字符串-1"><a href="#字符串-1" class="headerlink" title="字符串"></a>字符串</h3><ol><li><p>初始化</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[] = &#123;<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> ch[] = &#123;<span class="string">&quot;hello&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> ch[] = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> ch[] = <span class="string">&quot;hello&quot;</span>; <span class="comment">//这是错误的</span></span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">10</span>] = <span class="string">&quot;hello&quot;</span>; <span class="comment">//后面的字符都是&#x27;\0&#x27;,&#x27;\0&#x27;是不可显示的</span></span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">6</span>] = &#123;<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>&#125; <span class="comment">//是字符串</span></span><br><span class="line"><span class="keyword">char</span> ch[<span class="number">5</span>] = &#123;<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>&#125; <span class="comment">//不是字符串</span></span><br></pre></td></tr></table></figure></li><li><p>空字符串</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> ch[] = <span class="string">&quot;&quot;</span>; <span class="comment">//占用一个字节存储&#x27;\0&#x27;</span></span><br><span class="line"><span class="comment">//&#x27;a&#x27;与&quot;a&quot;，前者是简单的变量，后者是数组</span></span><br></pre></td></tr></table></figure></li><li><p>遍历</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>（<span class="keyword">int</span> i = <span class="number">0</span>; str[i]!=<span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;str[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>输入输出</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> str[<span class="number">6</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;str; <span class="comment">//空格字符会结束输入</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;str; <span class="comment">//遇到第一个&#x27;\0&#x27;结束。</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span>.get(str, length, endchar); <span class="comment">//结束字符默认是&#x27;\n&#x27;,结束字符会留在输入流中</span></span><br><span class="line"><span class="built_in">cin</span>.getline(stxr, length, endchar); <span class="comment">//结束字符默认是&#x27;\n&#x27;，结束字符不会留在输入流中,读入的字符是length减一，因为&#x27;\0&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>string</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="built_in">strlen</span>(str);<span class="comment">//可见字符串长度，不包括&#x27;\0&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">strcpy</span>(str1, str2); <span class="comment">//不能用str1 = str2赋值，str1 要 大于 str2，//字符串排序</span></span><br><span class="line"><span class="built_in">strcat</span>(str1, str2); <span class="comment">//拼接</span></span><br><span class="line"><span class="built_in">strcmp</span>(str1, str2); <span class="comment">//比较大小，挨个比较ascii码 返回值是-1，0，1</span></span><br><span class="line"><span class="comment">//以上三个都有n族，即strncpy,strncat,strncmp，即操作前n个字符</span></span><br><span class="line"></span><br><span class="line">strlwr(str); <span class="comment">//转换为小写</span></span><br><span class="line">strupr(str);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//应用</span></span><br><span class="line">len = <span class="built_in">strlen</span>(str1);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)&#123; <span class="comment">//不推荐</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; str1[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="函数-1"><a href="#函数-1" class="headerlink" title="函数"></a>函数</h2><h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><ol><li>声明可以写多次，定义只能写一次</li><li>scanf返回值是读入的个数，<code>ctrl Z</code>返回-1</li><li>cin返回值是<code>true</code>或<code>false</code></li></ol><h3 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h3><ol><li><p>定义的时候如果不声明返回值类型，默认是<code>int</code></p></li><li><p>如果return类型和定义类型不同，则强转（以定义为准）</p></li><li><p>函数不可以嵌套定义，但可以嵌套调用。</p></li></ol><h3 id="传参-1"><a href="#传参-1" class="headerlink" title="传参"></a>传参</h3><ol><li>传入的类型不对时会发强转</li></ol><h3 id="变量作用域-1"><a href="#变量作用域-1" class="headerlink" title="变量作用域"></a>变量作用域</h3><ol><li>复合语句内是局部变量</li><li>复合语句是指大括号内，不一定是循环或者函数，大括号可以随时出现，组成复合语句。</li></ol><h3 id="变量存储类型-1"><a href="#变量存储类型-1" class="headerlink" title="变量存储类型"></a>变量存储类型</h3><blockquote><p>每个变量都有两种属性，分别是<strong>数据类型</strong>和<strong>存储类型</strong>，因此标准的变量定义应该是<code>标准类型 数据类型 变量名</code></p></blockquote><ol><li>auto（自动变量）</li><li>register（寄存器变量）</li><li>extern（外部变量）引用另外文件的函数前面的extern可以省略</li><li>static（静态（外部）变量）其他文件引用不到</li></ol><h3 id="数组作为参数-1"><a href="#数组作为参数-1" class="headerlink" title="数组作为参数"></a>数组作为参数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myFun</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myFun2</span><span class="params">(<span class="keyword">int</span> arr[][<span class="number">3</span>], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr1[<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> arr2[][<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    myFun(arr1, <span class="number">3</span>); <span class="comment">//注意，函数不会重新创建新的数组</span></span><br><span class="line">    myFun2(arr2, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="带默认值的函数-1"><a href="#带默认值的函数-1" class="headerlink" title="带默认值的函数"></a>带默认值的函数</h3><ol><li>缺省形参值必须从右向左连续定义（自右向左入栈）</li><li>如果省掉了某个实参，直到最右边的实参都要省</li><li>缺省值应该在函数原型就给出</li><li>同一作用域，不可以重复定义缺省值</li><li>函数原型给出缺省值时，形参名可以省略</li></ol><h3 id="内联函数-1"><a href="#内联函数-1" class="headerlink" title="内联函数"></a>内联函数</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">fun</span><span class="params">()</span></span>&#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fun(); <span class="comment">//本质是编译的时候将此处替换了，即变成了顺序执行，空间换取时间</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>仅在原型出加<code>inline</code>无效，内联函数的定义必须出现在调用之前，否则就是普通函数</strong></p><p><strong>如果函数体积较大或者函数内有循环比较耗时，则不宜用内联</strong></p><h3 id="重载函数-1"><a href="#重载函数-1" class="headerlink" title="重载函数"></a>重载函数</h3><ol><li>c语言是不支持的</li><li>仅仅是返回值不同是不行的，编译不通过</li><li>编译器决定调用哪个函数的过程称之为<strong>绑定</strong></li><li>绑定的优先级：精确-&gt;低转高-&gt;高转低</li><li>带默认值的函数等可能引起二议性</li></ol><h3 id="函数模板-1"><a href="#函数模板-1" class="headerlink" title="函数模板"></a>函数模板</h3><ol><li>泛型化（类型的参数化）</li></ol><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;  <span class="comment">//也可以用class</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Swap</span><span class="params">(T&amp; a, T&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    T tmp = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = tmp;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line">    Swap(a, b);<span class="comment">//自动推到调用</span></span><br><span class="line">    <span class="comment">//Swap&lt;int&gt;(a, b);//显示指定调用</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">float</span> c = <span class="number">12.3</span>;</span><br><span class="line">    <span class="keyword">float</span> d = <span class="number">23.4</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//Swap(c, d); //自动推到调用</span></span><br><span class="line">    Swap&lt;<span class="keyword">float</span>&gt;(c, d); <span class="comment">//显示指定调用</span></span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;d = &quot;</span> &lt;&lt; d &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/lms1008611/article/details/81985815">参考资料《C++中的函数模板》</a></p><h2 id="指针-1"><a href="#指针-1" class="headerlink" title="指针"></a>指针</h2><h3 id="定义-3"><a href="#定义-3" class="headerlink" title="定义"></a>定义</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> * p = &amp;a;</span><br><span class="line">cou&lt;&lt;*p; <span class="comment">//解引用，找到内存中的数据</span></span><br></pre></td></tr></table></figure><p>任何类型的指针都占四个字节</p><h3 id="空指针和野指针-1"><a href="#空指针和野指针-1" class="headerlink" title="空指针和野指针"></a>空指针和野指针</h3><blockquote><p>当指针定义为0、NULL、或者不赋值，此时不能解引用，否则崩溃</p></blockquote><ol><li>空指针：指向内存编号为0的指针，一般用来初始换（0-255）不可访问，系统占用。<code>int * p = NULL</code>或<code>int * p = 0</code></li><li>野指针：指向非法空间（是一种错误），无法访问。</li></ol><h3 id="const修饰指针-1"><a href="#const修饰指针-1" class="headerlink" title="const修饰指针"></a>const修饰指针</h3><blockquote><p>指针就是一种特殊的变量，专门用来存放地址。地址可以看作一个特殊的数据类型，地址不可以复制给int变量，但可以赋值给指针变量，int的地址，只能复制给int *。地址可以解引用，所以&amp;a和p的用法是一样的。</p></blockquote><h4 id="常量指针-1"><a href="#常量指针-1" class="headerlink" title="常量指针"></a>常量指针</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * p = &amp;a;</span><br><span class="line">cou&lt;&lt;*p&lt;&lt;*&amp;a&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p %p&quot;</span>,&amp;a, p); <span class="comment">//地址的占位符应该用%p</span></span><br><span class="line">a = <span class="number">20</span>; <span class="comment">//这样是可以的</span></span><br><span class="line">*p = <span class="number">20</span>; <span class="comment">//不可以！！指针的指向可以修改，但不可以通过解引用来修改</span></span><br></pre></td></tr></table></figure><h4 id="指针常量-1"><a href="#指针常量-1" class="headerlink" title="指针常量"></a>指针常量</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> * <span class="keyword">const</span> p = &amp;a; <span class="comment">//指向不可以改，解引用可以改。</span></span><br></pre></td></tr></table></figure><h4 id="常量指针常量-1"><a href="#常量指针常量-1" class="headerlink" title="常量指针常量"></a>常量指针常量</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> * <span class="keyword">const</span> p = &amp;a; <span class="comment">//都不可以改</span></span><br></pre></td></tr></table></figure><h3 id="指针和数组-1"><a href="#指针和数组-1" class="headerlink" title="指针和数组"></a>指针和数组</h3><blockquote><p>此处，若那指针p指向数组首地址，那么此时的<strong>数组名</strong>和<strong>指针名</strong>的本质其实都是一个<strong>指针</strong>，访问数组的元素可以通过<u>方括号</u>来访问，也可以用<u>*</u>来访问。需要注意的是p和a的区别，p是变量，但a是常量指针，a不可以进行a++等运算。另外，指针相加无意义，相减有意义。</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> * p = arr;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用指针遍历数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; *p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    p++; <span class="comment">//向后走四个字节，即到下个元素，p+1指向下一个元素，p-1指向上一个元素</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过指针引用数组元素</span></span><br><span class="line"><span class="comment">//下标法 和  指针法</span></span><br><span class="line">p[i];</span><br><span class="line">a[i];</span><br><span class="line">*(p+i);</span><br><span class="line">*(a+i);</span><br></pre></td></tr></table></figure><blockquote><p>利用指针进行排序，可以避免复杂的例如结构体、字符串的赋值，效率更高</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> arr[<span class="number">8</span>] = &#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">3</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> *p[<span class="number">8</span>];</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i ++)&#123;</span><br><span class="line">      p[i] = &amp;arr[i];</span><br><span class="line">      </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i ++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; <span class="number">8</span>; j++)&#123;</span><br><span class="line">          <span class="keyword">if</span>(*p[i] &gt; *p[j])&#123;</span><br><span class="line">              <span class="keyword">int</span> *temp = p[i]; </span><br><span class="line">              p[i] = p[j];</span><br><span class="line">              p[j] = temp; <span class="comment">//只交换指针的指向，而不更改</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)&#123;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;*p[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="指针与字符串-1"><a href="#指针与字符串-1" class="headerlink" title="指针与字符串"></a>指针与字符串</h3><blockquote><p>指向字符串常量和指向字符数组的指针有什么区别呢？</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> *<span class="built_in">string</span>;</span><br><span class="line"><span class="built_in">string</span> = <span class="string">&quot;abcd&quot;</span>; <span class="comment">//string是常量区（数据段）里&quot;abcd&quot;的首地址，不可以修改*string2的值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *string2, ss[] = <span class="string">&quot;abcd&quot;</span>;</span><br><span class="line">string2 = ss; <span class="comment">//string2是栈里&quot;abcd&quot;的首地址，可以修改*string2的值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">string</span>; <span class="comment">//即从string开始，知道&#x27;\0&#x27;结束，所以类推cout&lt;&lt;string+1即输出&quot;bcd&quot;</span></span><br></pre></td></tr></table></figure><p>要搞清楚<code>string</code>、<code>string2</code>、<code>ss</code>三者的区别：</p><ol><li>*string不可以修改，两外两个可以</li><li>ss不可以修改，两外两个可以</li><li>三者都属于指针，第一个指向常量即<strong>常量指针</strong>，第二个正常指针，第三个本身是常量即<strong>指针常量</strong></li></ol><blockquote><p>利用指针编程的实例（复制字符串）</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//把字符数组a赋值给b</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[] = <span class="string">&quot;abcd&quot;</span>,b[<span class="number">10</span>],*p1,*p2;</span><br><span class="line">    p1 = a;</span><br><span class="line">    p2 = b;</span><br><span class="line">    <span class="keyword">while</span>(*p1)</span><br><span class="line">        *p2++ = *p1++;</span><br><span class="line">    *p2 = <span class="string">&#x27;\0&#x27;</span>; <span class="comment">//不要忘了最后加上&#x27;\0&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针与函数（地址传递）"><a href="#指针与函数（地址传递）" class="headerlink" title="指针与函数（地址传递）"></a>指针与函数（地址传递）</h3><blockquote><p>主要注意传递指针以及返回指针</p></blockquote><p><strong>值传递是文件复制，地址传递是建立快捷方式</strong></p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> * p1, <span class="keyword">int</span> * p2)</span></span>&#123;</span><br><span class="line"> <span class="keyword">return</span>(*p1 + *p2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; add(&amp;a, &amp;b);</span><br></pre></td></tr></table></figure><h3 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h3><blockquote><p>与指针类似，但更安全、简单，主要用于函数的参数，不需要解引用，也不需要传参的时候传递地址</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> &amp;b = a; <span class="comment">//a,b地址一样，且定义的时候必须初始化，不能先定义再赋值，且以后b不能再修改</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> &amp; r)</span></span>&#123;</span><br><span class="line">    r = <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">3</span>;</span><br><span class="line">    f(x);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;x; <span class="comment">//5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 返回值为引用类型的引用</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> &amp; <span class="title">max</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;a[t]) t = i;</span><br><span class="line">        <span class="keyword">return</span> a[t]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> &amp; sum(<span class="keyword">int</span> a[], <span class="keyword">int</span> n)&#123;</span><br><span class="line">    <span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        s += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> &amp; m1 = max(a, <span class="number">10</span>); <span class="comment">//此处m1即为a[4]</span></span><br><span class="line">    <span class="keyword">int</span> &amp; m2 = sum(a, <span class="number">10</span>); <span class="comment">//此处m2即为s，但是s为局部变量，s释放之后，m2是随机值。</span></span><br><span class="line">    </span><br><span class="line">    max(a, <span class="number">10</span>)++; <span class="comment">//返回值是引用的话可以对返回值直接进行运算操作</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>常引用：不能通过常引用来修改变量的值，所以常引用可以用来引用常量，表达式等，通常用来作为只读形参。传引用更快，但又不希望被改动，所以更安全</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> &amp; b = a; <span class="comment">//a，b地址相同，唯一区别是只能通过a来修改该地址的值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> &amp; x, <span class="keyword">int</span> &amp; y)</span></span>&#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maing</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    f(<span class="number">100</span>, a); <span class="comment">// 第一个参数可以传常量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="动态内存"><a href="#动态内存" class="headerlink" title="动态内存"></a>动态内存</h3><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><blockquote><p>先记录一个常见的错误</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">int</span> a[n]; <span class="comment">//不合法，应该使用动态数组 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>动态数组</p></blockquote><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *q;</span><br><span class="line">    q = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">10</span>]; <span class="comment">//new得到的是申请到的空间的地址，当系统用完时可能会失败，当失败时会返回空指针</span></span><br><span class="line">    <span class="keyword">if</span>(!q)&#123; <span class="comment">//检查new的结果</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;failed&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">strcpy</span>(q, <span class="string">&quot;abcde&quot;</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;q&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">delete</span> []q;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a><strong>补充</strong></h4><blockquote><p>关于内存分配的一些问题</p></blockquote><p><img src="https://pic.imgdb.cn/item/6112334a5132923bf840aea3.jpg" alt></p><p>对于三个区域，<strong>数据段、栈、堆</strong>，全局变量存储在数据段，局部栈，动态分配堆。对于一些很大的例如<strong>大数组</strong>，不能直接在堆里创建，否则会崩溃，需要在堆里<code>new</code>，且用完之后一定要<code>delete</code>否则会不断累积，造成内存泄漏，但要注意<code>delete</code>之后不允许再操作此处内存；也可以放在数据段里，即定义全局变量。</p><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h3 id="定义与使用"><a href="#定义与使用" class="headerlink" title="定义与使用"></a>定义与使用</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;s3 <span class="comment">//这里可以在定义的时候直接创建一个实例，不建议用</span></span><br><span class="line"><span class="comment">//创建后赋值</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">student1</span>;</span> <span class="comment">//struct可以省略</span></span><br><span class="line">student1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">student1.age = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//创建时赋值</span></span><br><span class="line">Student student1 = &#123;</span><br><span class="line">    <span class="string">&quot;张三&quot;</span>,<span class="number">10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">arr</span>[3]=</span></span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="string">&quot;张三&quot;</span>, <span class="number">10</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;李四&quot;</span>, <span class="number">20</span>&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">student</span> =</span> &#123;<span class="string">&quot;张三&quot;</span>, <span class="number">10</span>&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Student * p = student;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p-&gt;name; <span class="comment">//相当于(*p).name</span></span><br></pre></td></tr></table></figure><h3 id="结构体嵌套"><a href="#结构体嵌套" class="headerlink" title="结构体嵌套"></a>结构体嵌套</h3><p>要在之前声明</p><h3 id="结构体传参"><a href="#结构体传参" class="headerlink" title="结构体传参"></a>结构体传参</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">## 面向对象编程</span><br><span class="line"></span><br><span class="line">### 类</span><br><span class="line"></span><br><span class="line">`<span class="keyword">private</span>`（成员函数可以访问本类其它对象私有成员）、`<span class="keyword">public</span>`、`<span class="keyword">protected</span>`（该类以及子类）出现的次序和顺序可以任意，默认是<span class="keyword">private</span></span><br><span class="line"></span><br><span class="line">类本身并不占内存</span><br><span class="line"></span><br><span class="line">### 数据成员</span><br><span class="line"></span><br><span class="line">可以使用已定义完整的类，但当前正在定义的类没有定义完整，所以不能实例化</span><br><span class="line"></span><br><span class="line">```c++</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Grade</span>&#123;</span></span><br><span class="line">  <span class="keyword">int</span> a; <span class="comment">//不占用内存空间，不可以赋初值。新标准可以赋值，但其实是通过构造函数赋值。</span></span><br><span class="line">  Grade *p;</span><br><span class="line">  Grade &amp;r;</span><br><span class="line">  Grade b; <span class="comment">//错误</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="函数成员"><a href="#函数成员" class="headerlink" title="函数成员"></a>函数成员</h3><ol><li><p>类内定义的称为内联函数，若要在类外定义，必须在类里声明原型</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Clock::SetTime</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> m, <span class="keyword">int</span> s)</span></span>&#123; <span class="comment">//::是作用域分辨符</span></span><br><span class="line">    ... <span class="comment">//访问类里变量时直接访问就可以，写法和内联一样</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>默认形参可以放在原型里也可以放在定义处，不可都放，一般放原型</p></li><li><p>只有一份，不会给每个实例都放个函数</p></li></ol><h3 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h3><ol><li>没有返回值类型，且不用void的，一般函数需要void</li><li>构造函数只能被自动调用</li><li>构造函数要放在<code>pubilc</code>里面，否则无法实例化</li><li>构造函数可以重载</li><li>只有在不定义构造函数的时候才会自动生成无参构造函数</li><li>定义有参构造函数时最好再重载一个无参构造</li></ol><h3 id="对象数组"><a href="#对象数组" class="headerlink" title="对象数组"></a>对象数组</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Score</span>&#123;</span></span><br><span class="line">    </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Score ScoreArr[<span class="number">3</span>]; <span class="comment">//调用不带参数的构造函数</span></span><br><span class="line">    Score ScoreArr[<span class="number">3</span>] = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;&#125;; <span class="comment">//带参构造函数，两种都行，初值表</span></span><br><span class="line">    Score ScoreArr[<span class="number">3</span>] = &#123;</span><br><span class="line">        Score(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>),</span><br><span class="line">        Score(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>),</span><br><span class="line">        Score(<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="分文件编写"><a href="#分文件编写" class="headerlink" title="分文件编写"></a>分文件编写</h2><ol><li>h写声明，.cpp写定义，最后新的cpp里引用.h即可</li></ol><h2 id="杂乱"><a href="#杂乱" class="headerlink" title="杂乱"></a>杂乱</h2><h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h3><ol><li><ctime></ctime></li><li><iostream></iostream></li></ol><h3 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h3><ol><li><p>pow是浮点计算，貌似算出来的数可能导致不相等，可以加个(int)，加（int）会导致不准确，需要自己写函数（不同编译器不一样效果）</p></li><li><p>cout输出小数不会带后面的0；</p></li><li><p>当在循环的时候要找到最好的判断方式，在最合适的地方break，不然很容易超时！</p></li><li><p>cin&gt;&gt;char1不会读入空格，scanf可以</p></li><li><p>第一个cin.getline之前要放一个getchar</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">char</span> str[<span class="number">60</span>];</span><br><span class="line">        <span class="built_in">cin</span>.getline(str, <span class="number">60</span>);</span><br><span class="line">        <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len<span class="number">-1</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(str[j] == <span class="string">&#x27; &#x27;</span> &amp;&amp; str[j+<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>) sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(str[<span class="number">0</span>] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            sum--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum+<span class="number">1</span> &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><ol start="6"><li></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;四大件&quot;&gt;&lt;a href=&quot;#四大件&quot; class=&quot;headerlink&quot; title=&quot;四大件&quot;&gt;&lt;/a&gt;四大件&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;数据结构和算法&lt;/li&gt;
&lt;li&gt;计算机网络&lt;/li&gt;
&lt;li&gt;操作系统&lt;/li&gt;
&lt;li&gt;设计模式组成原理&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据类型&quot;&gt;&lt;/a&gt;数据类型&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;常量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​    宏常量 #define&lt;/p&gt;
&lt;p&gt;​    const 修饰变量&lt;/p&gt;
&lt;p&gt;​    均不可修改&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;字符串&lt;ol&gt;
&lt;li&gt;char str[] = “ldksjfa”&lt;/li&gt;
&lt;li&gt;string str = “dlkjafd” 需要头文件&lt;string&gt;&lt;/string&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;运算符&quot;&gt;&lt;a href=&quot;#运算符&quot; class=&quot;headerlink&quot; title=&quot;运算符&quot;&gt;&lt;/a&gt;运算符&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;三目运算符可以返回变量也可以返回变量值&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="c++" scheme="https://asea.fun/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>初探Java</title>
    <link href="https://asea.fun/post/eb0811b7.html"/>
    <id>https://asea.fun/post/eb0811b7.html</id>
    <published>2021-07-21T16:12:40.000Z</published>
    <updated>2021-07-25T15:40:41.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h2><blockquote><p>推荐环境统一放在一个environment的文件夹下，最新的jdk的jre不用自己配置，只需要配置java_home以及path即可。<br>安装后移动jdk路径，会导致cmd无任何输出，可以重新安装一下（如果你想换位置的话）。</p></blockquote><h2 id="DOS命令"><a href="#DOS命令" class="headerlink" title="DOS命令"></a>DOS命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1. dir</span><br><span class="line">2. cd /d E:\xxx 跨盘操作</span><br><span class="line">3. cls (clear screen)</span><br><span class="line">4. exit</span><br><span class="line">5. ipconfig</span><br><span class="line">6. calc</span><br><span class="line">7. mspaint</span><br><span class="line">8. notepad</span><br><span class="line">9. ping + domain</span><br><span class="line">10. md test</span><br><span class="line">11. cd&gt;a.txt</span><br><span class="line">12. del a.txt</span><br><span class="line">13. rd test</span><br></pre></td></tr></table></figure><h2 id="基础知识点"><a href="#基础知识点" class="headerlink" title="基础知识点"></a>基础知识点</h2><ol><li><p>大小写敏感、强类型</p></li><li><p>char c  = ‘\u0061’</p></li><li><p>引用类型比较地址 基本类型比较值</p></li><li><p>高到低：强制转换；低到高：自动转换</p><ol><li>byte-&gt;short-&gt;hcar-&gt;int-&gt;long-&gt;float-&gt;double</li></ol></li><li><p>JDK7后数字可以用下划线分割</p></li><li><p>方法重载（参数类型、个数、排序不同）</p></li><li><p>数组</p><ol><li><p>int[] nums; （首选）</p></li><li><p>int nums[]; （C的风格）</p></li><li><p>int[] nums = new int[10];nums[0] = 1（动态初始化，先声明，后赋值）隐式初始化，int默认0，string默认null</p></li><li><p>int [] nums = {1,2,3}（静态初始化：创建直接赋值）</p></li><li><p>长度是确定的，不可更改，元素类型相同，可以是基本类型也可是引用类型</p></li><li><p>for-each:</p><ol><li><pre><code class="java"><span class="keyword">for</span>(<span class="keyword">int</span> array : arrays)&#123;    System.out.println(array);&#125;</code></pre></li></ol></li><li><p>Arrays类</p><ol><li>Arrays.sort()</li><li>Arrays.fill()</li><li>Arrays.tostring()</li></ol></li><li><p>稀疏数组</p><ol><li>总行 总列 有效值个数</li><li>行 列 值</li><li>…</li></ol></li></ol></li></ol><h2 id="面向对象（OOP）"><a href="#面向对象（OOP）" class="headerlink" title="面向对象（OOP）"></a>面向对象（OOP）</h2><ol><li><p>非静态方法需要实例化才能调用</p></li><li><p>引用传递、值传递</p></li><li><p>构造器（方法名和类名一致）,new本质是在调用构造器</p></li><li><p>无参构造再不定义任何构造时会自动生成，反之必须自己显示定义。</p></li><li><p>idea :  alt+insert 自动生成构造器</p></li><li><p>封装：属性私有，get，set</p></li><li><p>继承：实例化子类时，会先调用父类构造器，如果显式定义构造器，super（）必须在子类构造器的第一行。ctrl + h继承树</p></li><li><p>重写：方法名和参数列表必须一样</p></li><li><p>多态：能调用的方法只看引用类型，且如果子类重写父类方法，则运行子类方法。 多态是方法的多态</p></li><li><p>A instanceof B</p></li><li></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;踩坑&quot;&gt;&lt;a href=&quot;#踩坑&quot; class=&quot;headerlink&quot; title=&quot;踩坑&quot;&gt;&lt;/a&gt;踩坑&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;推荐环境统一放在一个environment的文件夹下，最新的jdk的jre不用自己配置，只需要配置java_home以及path即可。&lt;br&gt;安装后移动jdk路径，会导致cmd无任何输出，可以重新安装一下（如果你想换位置的话）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;DOS命令&quot;&gt;&lt;a href=&quot;#DOS命令&quot; class=&quot;headerlink&quot; title=&quot;DOS命令&quot;&gt;&lt;/a&gt;DOS命令&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. dir&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. cd /d E:\xxx 跨盘操作&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3. cls (clear screen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4. exit&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5. ipconfig&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6. calc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7. mspaint&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8. notepad&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9. ping + domain&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10. md test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11. cd&amp;gt;a.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12. del a.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13. rd test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;基础知识点&quot;&gt;&lt;a href=&quot;#基础知识点&quot; class=&quot;headerlink&quot; title=&quot;基础知识点&quot;&gt;&lt;/a&gt;基础知识点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;大小写敏感、强类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;char c  = ‘\u0061’&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引用类型比较地址 基本类型比较值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;高到低：强制转换；低到高：自动转换&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;byte-&amp;gt;short-&amp;gt;hcar-&amp;gt;int-&amp;gt;long-&amp;gt;float-&amp;gt;double&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JDK7后数字可以用下划线分割&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方法重载（参数类型、个数、排序不同）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;数组&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;int[] nums; （首选）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int nums[]; （C的风格）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int[] nums = new int[10];nums[0] = 1（动态初始化，先声明，后赋值）隐式初始化，int默认0，string默认null&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;int [] nums = {1,2,3}（静态初始化：创建直接赋值）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;长度是确定的，不可更改，元素类型相同，可以是基本类型也可是引用类型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;for-each:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; array : arrays)&amp;#123;
    System.out.println(array);
&amp;#125;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Arrays类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Arrays.sort()&lt;/li&gt;
&lt;li&gt;Arrays.fill()&lt;/li&gt;
&lt;li&gt;Arrays.tostring()&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;稀疏数组&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;总行 总列 有效值个数&lt;/li&gt;
&lt;li&gt;行 列 值&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;面向对象（OOP）&quot;&gt;&lt;a href=&quot;#面向对象（OOP）&quot; class=&quot;headerlink&quot; title=&quot;面向对象（OOP）&quot;&gt;&lt;/a&gt;面向对象（OOP）&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;非静态方法需要实例化才能调用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引用传递、值传递&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;构造器（方法名和类名一致）,new本质是在调用构造器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;无参构造再不定义任何构造时会自动生成，反之必须自己显示定义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;idea :  alt+insert 自动生成构造器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;封装：属性私有，get，set&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;继承：实例化子类时，会先调用父类构造器，如果显式定义构造器，super（）必须在子类构造器的第一行。ctrl + h继承树&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重写：方法名和参数列表必须一样&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;多态：能调用的方法只看引用类型，且如果子类重写父类方法，则运行子类方法。 多态是方法的多态&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A instanceof B&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java" scheme="https://asea.fun/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>如何搭建自己的网页编程（Jupyter）</title>
    <link href="https://asea.fun/post/ecef5fd9.html"/>
    <id>https://asea.fun/post/ecef5fd9.html</id>
    <published>2021-07-19T10:04:48.000Z</published>
    <updated>2021-07-19T12:17:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于如何利用Jupyter-Notebook搭建网页编程"><a href="#关于如何利用Jupyter-Notebook搭建网页编程" class="headerlink" title="关于如何利用Jupyter Notebook搭建网页编程"></a>关于如何利用Jupyter Notebook搭建网页编程</h1><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><p><img src="https://pic.imgdb.cn/item/60f54fb95132923bf82d6ab0.jpg" alt></p><h2 id="安装jupyter"><a href="#安装jupyter" class="headerlink" title="安装jupyter"></a>安装jupyter</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install jupyter</span><br><span class="line"># 安装失败的可以考虑换阿里源</span><br><span class="line"># 修改.&#x2F;pip&#x2F;pip.ini 为</span><br><span class="line">[global]</span><br><span class="line">index-url &#x3D; https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple</span><br><span class="line">[install]</span><br><span class="line">trusted-host &#x3D; mirrors.aliyun.com</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><code>jupyter notebook --generate-config</code></p><ol><li>第一种密码配置<br><code>jupyter notebook password</code><br>确认密码后得到密文，复制。<br>在.py文件末尾填上如下几句<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c.NotebookApp.password &#x3D; u&#39;这里填写密文&#39;       # 刚才复制的那个密文</span><br><span class="line">c.NotebookApp.open_browser &#x3D; False       # 禁止自动打开浏览器  </span><br><span class="line">c.NotebookApp.port &#x3D;8888                         #随便指定一个端口，默认就是8888，也可以不写</span><br><span class="line">c.NotebookApp.certfile &#x3D; u&#39;c:&#x2F;&#x2F;xxx&#x2F;&#x2F;xxx&#39;   # 根目录，一定要写转义符（我就是错在这里，要认真看报错）</span><br></pre></td></tr></table></figure></li><li>第二种密码配置<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> IPython</span><br><span class="line">IPython.lib.passwd()</span><br></pre></td></tr></table></figure>得到密文，修改.py文件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c.NotebookApp.password &#x3D; u&#39;这里填写密文&#39;       # 刚才复制的那个密文</span><br><span class="line">c.NotebookApp.open_browser &#x3D; False       # 禁止自动打开浏览器  </span><br><span class="line">c.NotebookApp.port &#x3D;8888                         #随便指定一个端口，默认就是8888，也可以不写</span><br><span class="line">c.NotebookApp.certfile &#x3D; u&#39;c:&#x2F;&#x2F;xxx&#x2F;&#x2F;xxx&#39;   # 根目录，一定要写转义符（我就是错在这里，要认真看报错）</span><br></pre></td></tr></table></figure></li></ol><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p><code>jupyter notebook</code><br>注意启动后命令行弹出的运行地址包括token</p><h2 id="本地访问"><a href="#本地访问" class="headerlink" title="本地访问"></a>本地访问</h2><p>第一种密码配置：localhost:8888<br>第二种密码配置：localhost:8888?token=xxxx，登陆以后可以logout，通过token设置密码，然后可以正常登录，也可以重新启动一下，若提示.py和.json密码不匹配，可以重新采取第一种密码配置，强制修改密码。</p><h2 id="远端访问"><a href="#远端访问" class="headerlink" title="远端访问"></a>远端访问</h2><p>ip:8888<br>记得去控制台安全组实例把端口开放</p><p>到此结束</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于如何利用Jupyter-Notebook搭建网页编程&quot;&gt;&lt;a href=&quot;#关于如何利用Jupyter-Notebook搭建网页编程&quot; class=&quot;headerlink&quot; title=&quot;关于如何利用Jupyter Notebook搭建网页编程&quot;&gt;&lt;/a&gt;关于如何利用Jupyter Notebook搭建网页编程&lt;/h1&gt;&lt;h2 id=&quot;展示&quot;&gt;&lt;a href=&quot;#展示&quot; class=&quot;headerlink&quot; title=&quot;展示&quot;&gt;&lt;/a&gt;展示&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/60f54fb95132923bf82d6ab0.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;安装jupyter&quot;&gt;&lt;a href=&quot;#安装jupyter&quot; class=&quot;headerlink&quot; title=&quot;安装jupyter&quot;&gt;&lt;/a&gt;安装jupyter&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install jupyter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 安装失败的可以考虑换阿里源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 修改.&amp;#x2F;pip&amp;#x2F;pip.ini 为&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[global]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;index-url &amp;#x3D; https:&amp;#x2F;&amp;#x2F;mirrors.aliyun.com&amp;#x2F;pypi&amp;#x2F;simple&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[install]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;trusted-host &amp;#x3D; mirrors.aliyun.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;配置&quot;&gt;&lt;a href=&quot;#配置&quot; class=&quot;headerlink&quot; title=&quot;配置&quot;&gt;&lt;/a&gt;配置&lt;/h2&gt;&lt;p&gt;&lt;code&gt;jupyter notebook --generate-config&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一种密码配置&lt;br&gt;&lt;code&gt;jupyter notebook password&lt;/code&gt;&lt;br&gt;确认密码后得到密文，复制。&lt;br&gt;在.py文件末尾填上如下几句&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.password &amp;#x3D; u&amp;#39;这里填写密文&amp;#39;       # 刚才复制的那个密文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.open_browser &amp;#x3D; False       # 禁止自动打开浏览器  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.port &amp;#x3D;8888                         #随便指定一个端口，默认就是8888，也可以不写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.certfile &amp;#x3D; u&amp;#39;c:&amp;#x2F;&amp;#x2F;xxx&amp;#x2F;&amp;#x2F;xxx&amp;#39;   # 根目录，一定要写转义符（我就是错在这里，要认真看报错）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;第二种密码配置&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; IPython&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IPython.lib.passwd()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
得到密文，修改.py文件&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.password &amp;#x3D; u&amp;#39;这里填写密文&amp;#39;       # 刚才复制的那个密文&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.open_browser &amp;#x3D; False       # 禁止自动打开浏览器  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.port &amp;#x3D;8888                         #随便指定一个端口，默认就是8888，也可以不写&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c.NotebookApp.certfile &amp;#x3D; u&amp;#39;c:&amp;#x2F;&amp;#x2F;xxx&amp;#x2F;&amp;#x2F;xxx&amp;#39;   # 根目录，一定要写转义符（我就是错在这里，要认真看报错）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h2&gt;&lt;p&gt;&lt;code&gt;jupyter notebook&lt;/code&gt;&lt;br&gt;注意启动后命令行弹出的运行地址包括token&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Jupyter" scheme="https://asea.fun/tags/Jupyter/"/>
    
  </entry>
  
  <entry>
    <title>学习通《软件技术基础》ppt</title>
    <link href="https://asea.fun/post/71475d58.html"/>
    <id>https://asea.fun/post/71475d58.html</id>
    <published>2021-06-09T12:06:17.000Z</published>
    <updated>2021-06-10T12:31:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="点击获取"><a href="#点击获取" class="headerlink" title="点击获取"></a><a href="http://dt2.8tupian.com/1/21378a1b500.pg3">点击获取</a></h1><p>请在点击后的界面内操作</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;点击获取&quot;&gt;&lt;a href=&quot;#点击获取&quot; class=&quot;headerlink&quot; title=&quot;点击获取&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://dt2.8tupian.com/1/21378a1b500.pg3&quot;&gt;点击获取&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;请在点击后的界面内操作&lt;/p&gt;

    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="sources" scheme="https://asea.fun/tags/sources/"/>
    
  </entry>
  
  <entry>
    <title>you-get支持哪些网站下载</title>
    <link href="https://asea.fun/post/cabfd42a.html"/>
    <id>https://asea.fun/post/cabfd42a.html</id>
    <published>2021-06-02T11:31:54.000Z</published>
    <updated>2021-06-02T11:34:26.000Z</updated>
    
    <content type="html"><![CDATA[<article class="baidu_pl">        <div id="article_content" class="article_content clearfix">        <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css">                <div id="content_views" class="htmledit_views">                    <h2><a name="t0"></a>You-get支持网站</h2> <div class="table-box"><table><thead><tr><th>网站</th><th>URL</th><th>视频?</th><th>图像?</th><th>音频?</th></tr></thead><tbody><tr><td><strong>YouTube</strong></td><td><a href="https://www.youtube.com/">https://www.youtube.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>Twitter</strong></td><td><a href="https://twitter.com/">https://twitter.com/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td>VK</td><td><a href="http://vk.com/">http://vk.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Vine</td><td><a href="https://vine.co/">https://vine.co/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Vimeo</td><td><a href="https://vimeo.com/">https://vimeo.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Vidto</td><td><a href="http://vidto.me/">http://vidto.me/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Veoh</td><td><a href="http://www.veoh.com/">http://www.veoh.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>Tumblr</strong></td><td><a href="https://www.tumblr.com/">https://www.tumblr.com/</a></td><td>✓</td><td>✓</td><td>✓</td></tr><tr><td>TED</td><td><a href="http://www.ted.com/">http://www.ted.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>SoundCloud</td><td><a href="https://soundcloud.com/">https://soundcloud.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>Pinterest</td><td><a href="https://www.pinterest.com/">https://www.pinterest.com/</a></td><td>&nbsp;</td><td>✓</td><td>&nbsp;</td></tr><tr><td>MusicPlayOn</td><td><a href="http://en.musicplayon.com/">http://en.musicplayon.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>MTV81</td><td><a href="http://www.mtv81.com/">http://www.mtv81.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Mixcloud</td><td><a href="https://www.mixcloud.com/">https://www.mixcloud.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>Metacafe</td><td><a href="http://www.metacafe.com/">http://www.metacafe.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Magisto</td><td><a href="http://www.magisto.com/">http://www.magisto.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Khan Academy</td><td><a href="https://www.khanacademy.org/">https://www.khanacademy.org/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>JPopsuki TV</td><td><a href="http://www.jpopsuki.tv/">http://www.jpopsuki.tv/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Internet Archive</td><td><a href="https://archive.org/">https://archive.org/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>Instagram</strong></td><td><a href="https://instagram.com/">https://instagram.com/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td>Heavy Music Archive</td><td><a href="http://www.heavy-music.ru/">http://www.heavy-music.ru/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td><strong>Google+</strong></td><td><a href="https://plus.google.com/">https://plus.google.com/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td>Freesound</td><td><a href="http://www.freesound.org/">http://www.freesound.org/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>Flickr</td><td><a href="https://www.flickr.com/">https://www.flickr.com/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td>Facebook</td><td><a href="https://www.facebook.com/">https://www.facebook.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>eHow</td><td><a href="http://www.ehow.com/">http://www.ehow.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Dailymotion</td><td><a href="http://www.dailymotion.com/">http://www.dailymotion.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>CBS</td><td><a href="http://www.cbs.com/">http://www.cbs.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Bandcamp</td><td><a href="http://bandcamp.com/">http://bandcamp.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>AliveThai</td><td><a href="http://alive.in.th/">http://alive.in.th/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>interest.me</td><td><a href="http://ch.interest.me/tvn">http://ch.interest.me/tvn</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>755<br> ナナゴーゴー</strong></td><td><a href="http://7gogo.jp/">http://7gogo.jp/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td><strong>niconico<br> ニコニコ動画</strong></td><td><a href="http://www.nicovideo.jp/">http://www.nicovideo.jp/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>163<br> 网易视频<br> 网易云音乐</strong></td><td><a href="http://v.163.com/">http://v.163.com/</a><br><a href="http://music.163.com/">http://music.163.com/</a></td><td>✓</td><td>&nbsp;</td><td>✓</td></tr><tr><td>56网</td><td><a href="http://www.56.com/">http://www.56.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>AcFun</strong></td><td><a href="http://www.acfun.tv/">http://www.acfun.tv/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>Baidu<br> 百度贴吧</strong></td><td><a href="http://tieba.baidu.com/">http://tieba.baidu.com/</a></td><td>✓</td><td>✓</td><td>&nbsp;</td></tr><tr><td>爆米花网</td><td><a href="http://www.baomihua.com/">http://www.baomihua.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>bilibili<br> 哔哩哔哩</strong></td><td><a href="http://www.bilibili.com/">http://www.bilibili.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Dilidili</td><td><a href="http://www.dilidili.com/">http://www.dilidili.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>豆瓣</td><td><a href="http://www.douban.com/">http://www.douban.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>斗鱼</td><td><a href="http://www.douyutv.com/">http://www.douyutv.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>凤凰视频</td><td><a href="http://v.ifeng.com/">http://v.ifeng.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>风行网</td><td><a href="http://www.fun.tv/">http://www.fun.tv/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>iQIYI<br> 爱奇艺</td><td><a href="http://www.iqiyi.com/">http://www.iqiyi.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>激动网</td><td><a href="http://www.joy.cn/">http://www.joy.cn/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>酷6网</td><td><a href="http://www.ku6.com/">http://www.ku6.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>酷狗音乐</td><td><a href="http://www.kugou.com/">http://www.kugou.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>酷我音乐</td><td><a href="http://www.kuwo.cn/">http://www.kuwo.cn/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>乐视网</td><td><a href="http://www.letv.com/">http://www.letv.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>荔枝FM</td><td><a href="http://www.lizhi.fm/">http://www.lizhi.fm/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>秒拍</td><td><a href="http://www.miaopai.com/">http://www.miaopai.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>MioMio弹幕网</td><td><a href="http://www.miomio.tv/">http://www.miomio.tv/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>痞客邦</td><td><a href="https://www.pixnet.net/">https://www.pixnet.net/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>PPTV聚力</td><td><a href="http://www.pptv.com/">http://www.pptv.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>齐鲁网</td><td><a href="http://v.iqilu.com/">http://v.iqilu.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>QQ<br> 腾讯视频</td><td><a href="http://v.qq.com/">http://v.qq.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>阡陌视频</td><td><a href="http://qianmo.com/">http://qianmo.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Sina<br> 新浪视频<br> 微博秒拍视频</td><td><a href="http://video.sina.com.cn/">http://video.sina.com.cn/</a><br><a href="http://video.weibo.com/">http://video.weibo.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>Sohu<br> 搜狐视频</td><td><a href="http://tv.sohu.com/">http://tv.sohu.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>天天动听</td><td><a href="http://www.dongting.com/">http://www.dongting.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td><strong>Tudou<br> 土豆</strong></td><td><a href="http://www.tudou.com/">http://www.tudou.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>虾米</td><td><a href="http://www.xiami.com/">http://www.xiami.com/</a></td><td>&nbsp;</td><td>&nbsp;</td><td>✓</td></tr><tr><td>阳光卫视</td><td><a href="http://www.isuntv.com/">http://www.isuntv.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>音悦Tai</strong></td><td><a href="http://www.yinyuetai.com/">http://www.yinyuetai.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td><strong>Youku<br> 优酷</strong></td><td><a href="http://www.youku.com/">http://www.youku.com/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>战旗TV</td><td><a href="http://www.zhanqi.tv/lives">http://www.zhanqi.tv/lives</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>央视网</td><td><a href="http://www.cntv.cn/">http://www.cntv.cn/</a></td><td>✓</td><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table></div><p>对于不在列表的网站，通用解析器将寻找并下载感兴趣之内容.</p>                </div><div data-report-view="{&quot;mod&quot;:&quot;1585297308_001&quot;,&quot;dest&quot;:&quot;https://blog.csdn.net/qq_39377696/article/details/86529857&quot;,&quot;extend1&quot;:&quot;pc&quot;,&quot;ab&quot;:&quot;new&quot;}"><div></div></div>        </div>    </article>]]></content>
    
    <summary type="html">
    
      &lt;article class=&quot;baidu_pl&quot;&gt;
        &lt;div id=&quot;article_content&quot; class=&quot;article_content clearfix&quot;&gt;
        &lt;link rel=&quot;stylesheet&quot; href=&quot;https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-b5506197d8.css&quot;&gt;
                &lt;div id=&quot;content_views&quot; class=&quot;htmledit_views&quot;&gt;
                    &lt;h2&gt;&lt;a name=&quot;t0&quot;&gt;&lt;/a&gt;You-get支持网站&lt;/h2&gt; 
&lt;div class=&quot;table-box&quot;&gt;&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;网站&lt;/th&gt;&lt;th&gt;URL&lt;/th&gt;&lt;th&gt;视频?&lt;/th&gt;&lt;th&gt;图像?&lt;/th&gt;&lt;th&gt;音频?&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;YouTube&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.youtube.com/&quot;&gt;https://www.youtube.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Twitter&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://twitter.com/&quot;&gt;https://twitter.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;VK&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://vk.com/&quot;&gt;http://vk.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Vine&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://vine.co/&quot;&gt;https://vine.co/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Vimeo&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://vimeo.com/&quot;&gt;https://vimeo.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Vidto&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://vidto.me/&quot;&gt;http://vidto.me/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Veoh&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.veoh.com/&quot;&gt;http://www.veoh.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Tumblr&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.tumblr.com/&quot;&gt;https://www.tumblr.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;TED&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.ted.com/&quot;&gt;http://www.ted.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;SoundCloud&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://soundcloud.com/&quot;&gt;https://soundcloud.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Pinterest&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.pinterest.com/&quot;&gt;https://www.pinterest.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MusicPlayOn&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://en.musicplayon.com/&quot;&gt;http://en.musicplayon.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MTV81&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.mtv81.com/&quot;&gt;http://www.mtv81.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Mixcloud&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.mixcloud.com/&quot;&gt;https://www.mixcloud.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Metacafe&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.metacafe.com/&quot;&gt;http://www.metacafe.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Magisto&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.magisto.com/&quot;&gt;http://www.magisto.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Khan Academy&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.khanacademy.org/&quot;&gt;https://www.khanacademy.org/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;JPopsuki TV&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.jpopsuki.tv/&quot;&gt;http://www.jpopsuki.tv/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Internet Archive&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://archive.org/&quot;&gt;https://archive.org/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Instagram&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://instagram.com/&quot;&gt;https://instagram.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Heavy Music Archive&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.heavy-music.ru/&quot;&gt;http://www.heavy-music.ru/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Google+&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://plus.google.com/&quot;&gt;https://plus.google.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Freesound&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.freesound.org/&quot;&gt;http://www.freesound.org/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Flickr&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.flickr.com/&quot;&gt;https://www.flickr.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Facebook&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.facebook.com/&quot;&gt;https://www.facebook.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;eHow&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.ehow.com/&quot;&gt;http://www.ehow.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dailymotion&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.dailymotion.com/&quot;&gt;http://www.dailymotion.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;CBS&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.cbs.com/&quot;&gt;http://www.cbs.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Bandcamp&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://bandcamp.com/&quot;&gt;http://bandcamp.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;AliveThai&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://alive.in.th/&quot;&gt;http://alive.in.th/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;interest.me&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://ch.interest.me/tvn&quot;&gt;http://ch.interest.me/tvn&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;755&lt;br&gt; ナナゴーゴー&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://7gogo.jp/&quot;&gt;http://7gogo.jp/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;niconico&lt;br&gt; ニコニコ動画&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.nicovideo.jp/&quot;&gt;http://www.nicovideo.jp/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;163&lt;br&gt; 网易视频&lt;br&gt; 网易云音乐&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://v.163.com/&quot;&gt;http://v.163.com/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://music.163.com/&quot;&gt;http://music.163.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;56网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.56.com/&quot;&gt;http://www.56.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;AcFun&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.acfun.tv/&quot;&gt;http://www.acfun.tv/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Baidu&lt;br&gt; 百度贴吧&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://tieba.baidu.com/&quot;&gt;http://tieba.baidu.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;爆米花网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.baomihua.com/&quot;&gt;http://www.baomihua.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;bilibili&lt;br&gt; 哔哩哔哩&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.bilibili.com/&quot;&gt;http://www.bilibili.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Dilidili&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.dilidili.com/&quot;&gt;http://www.dilidili.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;豆瓣&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.douban.com/&quot;&gt;http://www.douban.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;斗鱼&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.douyutv.com/&quot;&gt;http://www.douyutv.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;凤凰视频&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://v.ifeng.com/&quot;&gt;http://v.ifeng.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;风行网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.fun.tv/&quot;&gt;http://www.fun.tv/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;iQIYI&lt;br&gt; 爱奇艺&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.iqiyi.com/&quot;&gt;http://www.iqiyi.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;激动网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.joy.cn/&quot;&gt;http://www.joy.cn/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;酷6网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.ku6.com/&quot;&gt;http://www.ku6.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;酷狗音乐&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.kugou.com/&quot;&gt;http://www.kugou.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;酷我音乐&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.kuwo.cn/&quot;&gt;http://www.kuwo.cn/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;乐视网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.letv.com/&quot;&gt;http://www.letv.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;荔枝FM&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.lizhi.fm/&quot;&gt;http://www.lizhi.fm/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;秒拍&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.miaopai.com/&quot;&gt;http://www.miaopai.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;MioMio弹幕网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.miomio.tv/&quot;&gt;http://www.miomio.tv/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;痞客邦&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;https://www.pixnet.net/&quot;&gt;https://www.pixnet.net/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;PPTV聚力&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.pptv.com/&quot;&gt;http://www.pptv.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;齐鲁网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://v.iqilu.com/&quot;&gt;http://v.iqilu.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;QQ&lt;br&gt; 腾讯视频&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://v.qq.com/&quot;&gt;http://v.qq.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;阡陌视频&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://qianmo.com/&quot;&gt;http://qianmo.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Sina&lt;br&gt; 新浪视频&lt;br&gt; 微博秒拍视频&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://video.sina.com.cn/&quot;&gt;http://video.sina.com.cn/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://video.weibo.com/&quot;&gt;http://video.weibo.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Sohu&lt;br&gt; 搜狐视频&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://tv.sohu.com/&quot;&gt;http://tv.sohu.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;天天动听&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.dongting.com/&quot;&gt;http://www.dongting.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Tudou&lt;br&gt; 土豆&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.tudou.com/&quot;&gt;http://www.tudou.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;虾米&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.xiami.com/&quot;&gt;http://www.xiami.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;阳光卫视&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.isuntv.com/&quot;&gt;http://www.isuntv.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;音悦Tai&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.yinyuetai.com/&quot;&gt;http://www.yinyuetai.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Youku&lt;br&gt; 优酷&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.youku.com/&quot;&gt;http://www.youku.com/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;战旗TV&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.zhanqi.tv/lives&quot;&gt;http://www.zhanqi.tv/lives&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;央视网&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://www.cntv.cn/&quot;&gt;http://www.cntv.cn/&lt;/a&gt;&lt;/td&gt;&lt;td&gt;✓&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;
&lt;p&gt;对于不在列表的网站，通用解析器将寻找并下载感兴趣之内容.&lt;/p&gt;
                &lt;/div&gt;&lt;div data-report-view=&quot;{&amp;quot;mod&amp;quot;:&amp;quot;1585297308_001&amp;quot;,&amp;quot;dest&amp;quot;:&amp;quot;https://blog.csdn.net/qq_39377696/article/details/86529857&amp;quot;,&amp;quot;extend1&amp;quot;:&amp;quot;pc&amp;quot;,&amp;quot;ab&amp;quot;:&amp;quot;new&amp;quot;}&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/article&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="you-get" scheme="https://asea.fun/tags/you-get/"/>
    
  </entry>
  
  <entry>
    <title>关于高考的一些思考（文素课小作业）</title>
    <link href="https://asea.fun/post/29ec6806.html"/>
    <id>https://asea.fun/post/29ec6806.html</id>
    <published>2021-05-26T13:43:53.000Z</published>
    <updated>2021-05-26T13:46:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于高考的一些思考"><a href="#关于高考的一些思考" class="headerlink" title="关于高考的一些思考"></a>关于高考的一些思考</h1><p>大二了已经，距离我的高考已经过去几近两年了。前段时间偶然翻到我在19年6月8号晚上写的小文章，方才想起当时的我俨然是一个喜欢去写东西记录感受的人。看了那篇文章什么感受呢，里面一些细节我还历历在目，但是宏观的情愫我已经体味不到了，这种感觉就像是你长大后就忘记怎么长大似的，仿佛本来是这么大。<br>那节诗歌与人生，莫名其妙地变成了一节讨论高考的课，老师以及同学都举出了不少的例子，这让我想起来我高三那段时间发生的公交坠江事件，以及各地发生的跳楼等等事件。这类事件很多，而且无一例外让我对生死感到敬畏。高中在学校能接受的信息十分有限，仅仅能从各家杂志和老师口中甚至是试卷上获取时事信息，我记得当时喜欢看《作文素材》和《看天下》之类的杂志，其实本质是什么呢，我对这个世界了解的太少了，就像信息时代还未发展起来的时候人们大都去看报和听收音机一样。我想说的是，到现在，近来的一年中，当然也发生了很多事情，我也通过各方渠道了解过很多，但无一例外，我都提不起兴趣来，我很少去深入了解那些新闻，不知道这起事故的来龙去脉，更不用提各种反转。我厌恶极了当今的各种报道，他们像一群狗一样争先恐后疯抢食物（新闻头条便是他们的粮食），不要说什么价值观导向，且看各家官方媒体都不辨是非把各种错误消息信手拈来，让舆论里面的人们经历心情的大起大落，多让人心躁。写下这些的时候，很不幸，袁隆平老先生走了，走之前却还闹了场造谣的风波，让我痛心疾首。</p><p>总而言之，现在的我，对各种新闻已经没有任何兴趣了，我不想再花费心思在它上面。</p><p>说这些是干什么的呢，因为那节课不少同学举的例子我都闻所未闻或是只是道听途说了些皮毛。我完全不敢相信他们的报道是否真实，这使我对他们的言语存疑。</p><p>说回高考，无非就是“公平！公平！还是TMD公平！”。<br>公平这件事情很容易上升到哲学层次，或者简单来说很容易成为辩题，大多都是各执己见、众说纷纭、难分伯仲最后莫衷一是。大多数人不都是自私的吗，口中的公平虚伪极了，这些人想问题只考虑到于己有利的方面。我记得有同学说到四川怎么样怎么样，我大河南每年百万考生都还没说话。居然还有人在这里提到内卷，其实我深知这些词语代表的意思。但是我觉的应该从另一种角度来考虑：大家所说的内卷不过就是所有人都做了多余的劳动，而最后得到的收益却没有增加，所有人都站起来看电影，所有人都玩命学习，最后能看见电影的还是那么多人，能考上大学的还是那么多人。于是他们开始呼吁反内卷、内卷革命。这让我哭笑不得，再本质一点，当你考虑内卷的收益的时候，你就已经狭隘了，因为你没有考虑到整体的收益，内卷得到是什么？是所有人对知识的理解都加固了，整个社会的人才知识水平提高了。换做公司，整个公司的生产力也提高了不是吗？也就是说，内卷最终造成的是上层收益增加。<br>今天还看到一个有意思的话题，说是审美是个复杂的东西，它包括了很多权力结构因素在里面，简单举个例子就是你有什么资格认为你的审美更高级？由于各家说法很多，这里不赘述。其实用这种想法去思考内卷，不也正是如此，有太多结构化的东西在里面。然而在当今社会，这种结构是必要的，所以这种现象是无法根除的，它渗透在任何地方。往大了说，也正是无处不在的内卷才推动着人类社会发展。</p><p>试想，所有人都能不用劳动，靠着大自然的恩赐过上幸福的生活，这不守恒了吧！</p><p>说到这里肯定还有人要说了，不是说我们不应该努力，而是应该最大效率的去让每个人的劳动收益最大化，我们应该去寻找更好的解决方式，而不是一味的内卷。我只想说，只要有资源就有竞争，只要竞争存在，内卷就不会缺席。<br>再说回高考，我认为急需改善的一点是，让同学们学什么、怎么学，或者更好是去考虑如何让这活生生的年轻人健健康康长大，而不是去考虑如何改变他们的竞争结构。前者比后者重要一万倍，然而又有多少人在思考前者。</p><p>以上。</p><p>另外最近看杨宁文学理论课上瘾，强推！</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于高考的一些思考&quot;&gt;&lt;a href=&quot;#关于高考的一些思考&quot; class=&quot;headerlink&quot; title=&quot;关于高考的一些思考&quot;&gt;&lt;/a&gt;关于高考的一些思考&lt;/h1&gt;&lt;p&gt;大二了已经，距离我的高考已经过去几近两年了。前段时间偶然翻到我在19年6月8号晚上写的小文章，方才想起当时的我俨然是一个喜欢去写东西记录感受的人。看了那篇文章什么感受呢，里面一些细节我还历历在目，但是宏观的情愫我已经体味不到了，这种感觉就像是你长大后就忘记怎么长大似的，仿佛本来是这么大。&lt;br&gt;那节诗歌与人生，莫名其妙地变成了一节讨论高考的课，老师以及同学都举出了不少的例子，这让我想起来我高三那段时间发生的公交坠江事件，以及各地发生的跳楼等等事件。这类事件很多，而且无一例外让我对生死感到敬畏。高中在学校能接受的信息十分有限，仅仅能从各家杂志和老师口中甚至是试卷上获取时事信息，我记得当时喜欢看《作文素材》和《看天下》之类的杂志，其实本质是什么呢，我对这个世界了解的太少了，就像信息时代还未发展起来的时候人们大都去看报和听收音机一样。我想说的是，到现在，近来的一年中，当然也发生了很多事情，我也通过各方渠道了解过很多，但无一例外，我都提不起兴趣来，我很少去深入了解那些新闻，不知道这起事故的来龙去脉，更不用提各种反转。我厌恶极了当今的各种报道，他们像一群狗一样争先恐后疯抢食物（新闻头条便是他们的粮食），不要说什么价值观导向，且看各家官方媒体都不辨是非把各种错误消息信手拈来，让舆论里面的人们经历心情的大起大落，多让人心躁。写下这些的时候，很不幸，袁隆平老先生走了，走之前却还闹了场造谣的风波，让我痛心疾首。&lt;/p&gt;
&lt;p&gt;总而言之，现在的我，对各种新闻已经没有任何兴趣了，我不想再花费心思在它上面。&lt;/p&gt;
&lt;p&gt;说这些是干什么的呢，因为那节课不少同学举的例子我都闻所未闻或是只是道听途说了些皮毛。我完全不敢相信他们的报道是否真实，这使我对他们的言语存疑。&lt;/p&gt;
&lt;p&gt;说回高考，无非就是“公平！公平！还是TMD公平！”。&lt;br&gt;公平这件事情很容易上升到哲学层次，或者简单来说很容易成为辩题，大多都是各执己见、众说纷纭、难分伯仲最后莫衷一是。大多数人不都是自私的吗，口中的公平虚伪极了，这些人想问题只考虑到于己有利的方面。我记得有同学说到四川怎么样怎么样，我大河南每年百万考生都还没说话。居然还有人在这里提到内卷，其实我深知这些词语代表的意思。但是我觉的应该从另一种角度来考虑：大家所说的内卷不过就是所有人都做了多余的劳动，而最后得到的收益却没有增加，所有人都站起来看电影，所有人都玩命学习，最后能看见电影的还是那么多人，能考上大学的还是那么多人。于是他们开始呼吁反内卷、内卷革命。这让我哭笑不得，再本质一点，当你考虑内卷的收益的时候，你就已经狭隘了，因为你没有考虑到整体的收益，内卷得到是什么？是所有人对知识的理解都加固了，整个社会的人才知识水平提高了。换做公司，整个公司的生产力也提高了不是吗？也就是说，内卷最终造成的是上层收益增加。&lt;br&gt;今天还看到一个有意思的话题，说是审美是个复杂的东西，它包括了很多权力结构因素在里面，简单举个例子就是你有什么资格认为你的审美更高级？由于各家说法很多，这里不赘述。其实用这种想法去思考内卷，不也正是如此，有太多结构化的东西在里面。然而在当今社会，这种结构是必要的，所以这种现象是无法根除的，它渗透在任何地方。往大了说，也正是无处不在的内卷才推动着人类社会发展。&lt;/p&gt;
&lt;p&gt;试想，所有人都能不用劳动，靠着大自然的恩赐过上幸福的生活，这不守恒了吧！&lt;/p&gt;
&lt;p&gt;说到这里肯定还有人要说了，不是说我们不应该努力，而是应该最大效率的去让每个人的劳动收益最大化，我们应该去寻找更好的解决方式，而不是一味的内卷。我只想说，只要有资源就有竞争，只要竞争存在，内卷就不会缺席。&lt;br&gt;再说回高考，我认为急需改善的一点是，让同学们学什么、怎么学，或者更好是去考虑如何让这活生生的年轻人健健康康长大，而不是去考虑如何改变他们的竞争结构。前者比后者重要一万倍，然而又有多少人在思考前者。&lt;/p&gt;
&lt;p&gt;以上。&lt;/p&gt;
&lt;p&gt;另外最近看杨宁文学理论课上瘾，强推！&lt;/p&gt;

    
    </summary>
    
    
      <category term="文学" scheme="https://asea.fun/categories/%E6%96%87%E5%AD%A6/"/>
    
    
      <category term="literature" scheme="https://asea.fun/tags/literature/"/>
    
  </entry>
  
  <entry>
    <title>转专业面试小结</title>
    <link href="https://asea.fun/post/4d5a8c9b.html"/>
    <id>https://asea.fun/post/4d5a8c9b.html</id>
    <published>2021-05-18T05:47:26.000Z</published>
    <updated>2021-05-18T06:07:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天经历了第一次转专业面试"><a href="#今天经历了第一次转专业面试" class="headerlink" title="今天经历了第一次转专业面试"></a>今天经历了第一次转专业面试</h1><p>我提前一个小时到了地点，最近紧张的不行，生怕我说话太多了又条理不清晰。在机房等待叫号，很快就到我了。<br>进门不小心还绊了一跤（太憨了。。。）<br>随后我开始滔滔不绝，我还是没控制住，说完才觉得说的实在太多了！！而且又乱又紧张！<br>绩点排名只在卓越班排实在太难了，大佬都在卓班:(<br>C语言当时真的是挺好玩的，然而实在是大一懵懂没有好好学<br>其实不只C语言，大多数课程都没深入好好学，可能兴趣真的不在那吧…<br>大二做了这么多东西花了不少时间，但在面前的大佬们眼里恐怕啥也不是吧（毕竟都是些小东西）<br>老师提到solidworks还真的提醒了我，关于这个软件我想到的什么，当时说的好像啥也不是<br>但其实很简单，我觉得实现这个软件真的需要一个很庞大的体系…<br>不管是团队组织、代码之间的耦合还是什么都很艰难</p><p>完了完了，我考了二级证书我还没说，总共我就没什么证书，哭了<br>虽然这证书也没啥含金量<br>算了，自己表现…只能给个勉强及格<br>希望各位大佬高抬贵手！！<br>表现欠佳实属抱歉！！！</p><p>祈祷…</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;今天经历了第一次转专业面试&quot;&gt;&lt;a href=&quot;#今天经历了第一次转专业面试&quot; class=&quot;headerlink&quot; title=&quot;今天经历了第一次转专业面试&quot;&gt;&lt;/a&gt;今天经历了第一次转专业面试&lt;/h1&gt;&lt;p&gt;我提前一个小时到了地点，最近紧张的不行，生怕我说话太多了又条理不清晰。在机房等待叫号，很快就到我了。&lt;br&gt;进门不小心还绊了一跤（太憨了。。。）&lt;br&gt;随后我开始滔滔不绝，我还是没控制住，说完才觉得说的实在太多了！！而且又乱又紧张！&lt;br&gt;绩点排名只在卓越班排实在太难了，大佬都在卓班:(&lt;br&gt;C语言当时真的是挺好玩的，然而实在是大一懵懂没有好好学&lt;br&gt;其实不只C语言，大多数课程都没深入好好学，可能兴趣真的不在那吧…&lt;br&gt;大二做了这么多东西花了不少时间，但在面前的大佬们眼里恐怕啥也不是吧（毕竟都是些小东西）&lt;br&gt;老师提到solidworks还真的提醒了我，关于这个软件我想到的什么，当时说的好像啥也不是&lt;br&gt;但其实很简单，我觉得实现这个软件真的需要一个很庞大的体系…&lt;br&gt;不管是团队组织、代码之间的耦合还是什么都很艰难&lt;/p&gt;
&lt;p&gt;完了完了，我考了二级证书我还没说，总共我就没什么证书，哭了&lt;br&gt;虽然这证书也没啥含金量&lt;br&gt;算了，自己表现…只能给个勉强及格&lt;br&gt;希望各位大佬高抬贵手！！&lt;br&gt;表现欠佳实属抱歉！！！&lt;/p&gt;
&lt;p&gt;祈祷…&lt;/p&gt;

    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
      <category term="interview" scheme="https://asea.fun/tags/interview/"/>
    
  </entry>
  
  <entry>
    <title>关于vercel私有域名无法访问</title>
    <link href="https://asea.fun/post/3548e590.html"/>
    <id>https://asea.fun/post/3548e590.html</id>
    <published>2021-05-17T14:21:28.000Z</published>
    <updated>2021-05-17T14:56:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记录一下deploy在vercel上的项目忽然无法访问的问题"><a href="#记录一下deploy在vercel上的项目忽然无法访问的问题" class="headerlink" title="记录一下deploy在vercel上的项目忽然无法访问的问题"></a>记录一下deploy在vercel上的项目忽然无法访问的问题</h1><p>这几天没打开，今天偶然打开发现我的个人主页无法访问了（只是私有域名无法访问，但是vercel提供的域名毫无问题，怪哉！），看了半天控制台的域名解析没问题，又到vercel后台查了半天，实在是不行。<br>最后想起来会不会是被墙了，于是科学上网尝试了一下，居然真的成功了。<br>然而我还是不知道该怎么解决，四处询问未果。<br>最后我想会不会是因为github的这个仓库挺久没更新了，于是稍稍修改了一下html文件push上去，嘿嘿，然后就可以访问了，具体原因不清楚，至少可以进去了！！<br>由于问题来的莫名其妙，解决的也莫名其妙，不用再多说什么了。<br>另外，明天加油！（紧张ingngg)</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;记录一下deploy在vercel上的项目忽然无法访问的问题&quot;&gt;&lt;a href=&quot;#记录一下deploy在vercel上的项目忽然无法访问的问题&quot; class=&quot;headerlink&quot; title=&quot;记录一下deploy在vercel上的项目忽然无法访问的问题&quot;&gt;&lt;/a&gt;记录一下deploy在vercel上的项目忽然无法访问的问题&lt;/h1&gt;&lt;p&gt;这几天没打开，今天偶然打开发现我的个人主页无法访问了（只是私有域名无法访问，但是vercel提供的域名毫无问题，怪哉！），看了半天控制台的域名解析没问题，又到vercel后台查了半天，实在是不行。&lt;br&gt;最后想起来会不会是被墙了，于是科学上网尝试了一下，居然真的成功了。&lt;br&gt;然而我还是不知道该怎么解决，四处询问未果。&lt;br&gt;最后我想会不会是因为github的这个仓库挺久没更新了，于是稍稍修改了一下html文件push上去，嘿嘿，然后就可以访问了，具体原因不清楚，至少可以进去了！！&lt;br&gt;由于问题来的莫名其妙，解决的也莫名其妙，不用再多说什么了。&lt;br&gt;另外，明天加油！（紧张ingngg)&lt;/p&gt;

    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="github" scheme="https://asea.fun/tags/github/"/>
    
      <category term="vercel" scheme="https://asea.fun/tags/vercel/"/>
    
      <category term="domain" scheme="https://asea.fun/tags/domain/"/>
    
  </entry>
  
  <entry>
    <title>关于部署机器人到linux的一些记录</title>
    <link href="https://asea.fun/post/b3542778.html"/>
    <id>https://asea.fun/post/b3542778.html</id>
    <published>2021-05-11T07:45:01.000Z</published>
    <updated>2021-05-11T08:02:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一下是我踩的坑（不完全记录）"><a href="#一下是我踩的坑（不完全记录）" class="headerlink" title="一下是我踩的坑（不完全记录）"></a>一下是我踩的坑（不完全记录）</h1><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><ol><li>从阿里云控制台直接登录（更换系统的时候可以直接选择设置好root和pw）</li><li>putty登录（我没怎么用，阿里云的网页登录居然很不错！待会再说）<h2 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h2></li><li>利用软件<code>winscp</code>，此处感谢zjy的帮助！！</li><li>不过用貌似有时候winscp和putty会断掉，可以自行百度一下怎么长时间保持连接…<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install openjdk-8-jre-headless</span><br></pre></td></tr></table></figure>安装完之后<code>java -version</code>可以查看版本<h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><blockquote><p>应该是有预装python的，输入<code>python</code>可以检测，<code>exit()</code>退出<br>更新版本</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$sudo apt-get update</span><br><span class="line">$sudo apt-get install python3.8</span><br></pre></td></tr></table></figure></li></ol><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><blockquote><p>由于需要同时运行多个程序，具体可以参考<a href="https://www.jb51.net/article/165417.htm">在Linux中查看及终止正在运行的后台程序方法</a><br>但是，我看了一会觉得好麻烦！这时，我发现了阿里云远程连接的网页端居然可以多开terminal，还有各种布局，太奈斯了！<br>于是直接两个terminal搭好环境，运行<code>bot.py</code>哈哈哈，不行！缺少module（意料之中）…</p></blockquote><h3 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h3><p>我发现居然没有<code>pip</code>，那就装<br><code>sudo apt install python3-pip</code><br>重新运行<code>bot.py</code>，然后看着报错一个一个模块装，最后成功！<br>下面我要去搞我的<code>selenium</code>了，这又是个大坑…</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一下是我踩的坑（不完全记录）&quot;&gt;&lt;a href=&quot;#一下是我踩的坑（不完全记录）&quot; class=&quot;headerlink&quot; title=&quot;一下是我踩的坑（不完全记录）&quot;&gt;&lt;/a&gt;一下是我踩的坑（不完全记录）&lt;/h1&gt;&lt;h2 id=&quot;登录&quot;&gt;&lt;a href=&quot;#登录&quot; class=&quot;headerlink&quot; title=&quot;登录&quot;&gt;&lt;/a&gt;登录&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;从阿里云控制台直接登录（更换系统的时候可以直接选择设置好root和pw）&lt;/li&gt;
&lt;li&gt;putty登录（我没怎么用，阿里云的网页登录居然很不错！待会再说）&lt;h2 id=&quot;文件传输&quot;&gt;&lt;a href=&quot;#文件传输&quot; class=&quot;headerlink&quot; title=&quot;文件传输&quot;&gt;&lt;/a&gt;文件传输&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;利用软件&lt;code&gt;winscp&lt;/code&gt;，此处感谢zjy的帮助！！&lt;/li&gt;
&lt;li&gt;不过用貌似有时候winscp和putty会断掉，可以自行百度一下怎么长时间保持连接…&lt;h2 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h2&gt;&lt;h3 id=&quot;Java&quot;&gt;&lt;a href=&quot;#Java&quot; class=&quot;headerlink&quot; title=&quot;Java&quot;&gt;&lt;/a&gt;Java&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install openjdk-8-jre-headless&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
安装完之后&lt;code&gt;java -version&lt;/code&gt;可以查看版本&lt;h3 id=&quot;python&quot;&gt;&lt;a href=&quot;#python&quot; class=&quot;headerlink&quot; title=&quot;python&quot;&gt;&lt;/a&gt;python&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;应该是有预装python的，输入&lt;code&gt;python&lt;/code&gt;可以检测，&lt;code&gt;exit()&lt;/code&gt;退出&lt;br&gt;更新版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$sudo apt-get install python3.8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;运行&quot;&gt;&lt;a href=&quot;#运行&quot; class=&quot;headerlink&quot; title=&quot;运行&quot;&gt;&lt;/a&gt;运行&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;由于需要同时运行多个程序，具体可以参考&lt;a href=&quot;https://www.jb51.net/article/165417.htm&quot;&gt;在Linux中查看及终止正在运行的后台程序方法&lt;/a&gt;&lt;br&gt;但是，我看了一会觉得好麻烦！这时，我发现了阿里云远程连接的网页端居然可以多开terminal，还有各种布局，太奈斯了！&lt;br&gt;于是直接两个terminal搭好环境，运行&lt;code&gt;bot.py&lt;/code&gt;哈哈哈，不行！缺少module（意料之中）…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安装库&quot;&gt;&lt;a href=&quot;#安装库&quot; class=&quot;headerlink&quot; title=&quot;安装库&quot;&gt;&lt;/a&gt;安装库&lt;/h3&gt;&lt;p&gt;我发现居然没有&lt;code&gt;pip&lt;/code&gt;，那就装&lt;br&gt;&lt;code&gt;sudo apt install python3-pip&lt;/code&gt;&lt;br&gt;重新运行&lt;code&gt;bot.py&lt;/code&gt;，然后看着报错一个一个模块装，最后成功！&lt;br&gt;下面我要去搞我的&lt;code&gt;selenium&lt;/code&gt;了，这又是个大坑…&lt;/p&gt;

    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="linux" scheme="https://asea.fun/tags/linux/"/>
    
      <category term="robot" scheme="https://asea.fun/tags/robot/"/>
    
  </entry>
  
  <entry>
    <title>部署robot+selenium的坑</title>
    <link href="https://asea.fun/post/90946297.html"/>
    <id>https://asea.fun/post/90946297.html</id>
    <published>2021-05-08T12:46:25.000Z</published>
    <updated>2021-05-09T16:27:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记录一下部署robot-selenium的坑"><a href="#记录一下部署robot-selenium的坑" class="headerlink" title="记录一下部署robot+selenium的坑"></a>记录一下部署robot+selenium的坑</h1><ol><li><code>no module ... cv2.cv2</code><br><strong>SOLUTION</strong>: <code>pip uninstall opencv-python``pip install opencv-python</code></li><li><code>...tensorflow</code><br><strong>SOLUTION</strong>: <code>pip uninstall tensorflow``pip install tensorflow</code><blockquote><p>其余相关问题例如<code>numpy</code>等都可以通过重装模块解决。</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;记录一下部署robot-selenium的坑&quot;&gt;&lt;a href=&quot;#记录一下部署robot-selenium的坑&quot; class=&quot;headerlink&quot; title=&quot;记录一下部署robot+selenium的坑&quot;&gt;&lt;/a&gt;记录一下部署robot+selenium的坑&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;no module ... cv2.cv2&lt;/code&gt;&lt;br&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;: &lt;code&gt;pip uninstall opencv-python``pip install opencv-python&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;...tensorflow&lt;/code&gt;&lt;br&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;: &lt;code&gt;pip uninstall tensorflow``pip install tensorflow&lt;/code&gt;&lt;blockquote&gt;
&lt;p&gt;其余相关问题例如&lt;code&gt;numpy&lt;/code&gt;等都可以通过重装模块解决。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;

    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="robot" scheme="https://asea.fun/tags/robot/"/>
    
      <category term="selenium" scheme="https://asea.fun/tags/selenium/"/>
    
      <category term="muggle_ocr" scheme="https://asea.fun/tags/muggle-ocr/"/>
    
      <category term="cv2" scheme="https://asea.fun/tags/cv2/"/>
    
  </entry>
  
  <entry>
    <title>mirai+Graia编写聊天机器人</title>
    <link href="https://asea.fun/post/a5130995.html"/>
    <id>https://asea.fun/post/a5130995.html</id>
    <published>2021-05-07T13:55:05.000Z</published>
    <updated>2021-05-07T14:09:06.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文作者： YOOZIKI<br> 本文链接： <a href="https://yooziki.github.io/2020/08/297095/">https://yooziki.github.io/2020/08/297095/</a></p></blockquote><h2 id="Python版本：py37"><a href="#Python版本：py37" class="headerlink" title="Python版本：py37"></a>Python版本：py37</h2><p>安装相关模块，<a href="https://github.com/GraiaProject/Application">源码在这里</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install graia-application-mirai</span><br><span class="line">pip install graia-broadcast --upgrade</span><br><span class="line">pip install singledispatchmethod</span><br></pre></td></tr></table></figure><p>添加选择器子模块</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip install graia-component-selector</span><br></pre></td></tr></table></figure><h2 id="mirai环境配置"><a href="#mirai环境配置" class="headerlink" title="mirai环境配置"></a>mirai环境配置</h2><h3 id="自定义方式-推荐"><a href="#自定义方式-推荐" class="headerlink" title="自定义方式(推荐)"></a>自定义方式(推荐)</h3><p>在<a href="https://github.com/project-mirai/mirai-repo">mirai仓库中</a>的<code>shadow</code>下找到对应的包体并下载</p><blockquote><p>如果出现无法下载的情况下载文件时将<a href="https://github.com替换成http://github-proxy.yobot.win即可">https://github.com替换成http://github-proxy.yobot.win即可</a></p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;tmp</span><br><span class="line">wget -N -O shadowsocks.tar.gz http:&#x2F;&#x2F;github-proxy.yobot.win&#x2F;heweiye&#x2F;Merlin_Shadowsocks&#x2F;master&#x2F;shadowsocks_3.8.0.tar.gz</span><br><span class="line">tar -zxvf &#x2F;tmp&#x2F;shadowsocks.tar.gz</span><br><span class="line">chmod +x &#x2F;tmp&#x2F;shadowsocks&#x2F;install.sh</span><br><span class="line">sh &#x2F;tmp&#x2F;shadowsocks&#x2F;install.sh</span><br></pre></td></tr></table></figure><p>经测试的可用版本:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">console &#x3D; &quot;mirai-console-1.0-M4-dev-3.jar&quot;</span><br><span class="line">pure &#x3D; &quot;mirai-console-pure-1.0-M4-dev-3.jar&quot;</span><br><span class="line">qqandroid &#x3D; &quot;mirai-core-qqandroid-1.2.3.jar&quot;</span><br><span class="line">mirai-api-http &#x3D; &quot;mirai-api-http-v1.8.2.jar&quot;</span><br><span class="line">java &#x3D; &quot;jdk8u265-b01&quot;</span><br></pre></td></tr></table></figure><p>使用简易的python启动器即可启动，首次启动后会创建一系列文件夹，使用<code>stop</code>命令正常停止，将<code>mirai-api-http</code>放到<code>plugins</code>下，再次启动plugins会自动生成配置文件存放在<code>config\MiraiAPIHTTP</code>下，使用文本方式打开后可以修改其中的一些配置，完成后再次用<code>stop</code>命令正常停止，之后使用：<code>login user passwd</code>登录即可</p><p>强行停止mirai会造成<code>mirai-api-http</code>没有结束的问题，如果出现请在任务管理器中关闭<code>OpenJDK Platform binary</code>进程</p><blockquote><p>建议只修改autuKey增加安全性，其它改动可能会造成Graia无法连接</p></blockquote><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python3</span><br><span class="line">#-*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line">from os import system, path, makedirs, listdir</span><br><span class="line"></span><br><span class="line">content &#x3D; &quot;.&#x2F;content&quot;</span><br><span class="line"></span><br><span class="line">console &#x3D; &quot;mirai-console-1.0-M4-dev-3.jar&quot;</span><br><span class="line">pure &#x3D; &quot;mirai-console-pure-1.0-M4-dev-3.jar&quot;</span><br><span class="line">qqandroid &#x3D; &quot;mirai-core-qqandroid-1.2.3.jar&quot;</span><br><span class="line">jar_name &#x3D; &#123;console, pure, qqandroid&#125;</span><br><span class="line"></span><br><span class="line">def init(content, jar_name):</span><br><span class="line">    print(&quot;初始化中...&quot;)</span><br><span class="line">    if not path.exists(content):</span><br><span class="line">        makedirs(content)</span><br><span class="line">        raise ValueError(f&quot;请在 &#123;content&#125; 文件夹中放入 &#123;console&#125;, &#123;pure&#125;, &#123;qqandroid&#125; 可在 &#39;https:&#x2F;&#x2F;github.com&#x2F;project-mirai&#x2F;mirai-repo&#39; 处下载&quot;)</span><br><span class="line"></span><br><span class="line">    c &#x3D; set()</span><br><span class="line">    for i in listdir(content):</span><br><span class="line">        if i in (console, pure, qqandroid):</span><br><span class="line">            c.add(i)</span><br><span class="line"></span><br><span class="line">    if len(c) &lt; 3:</span><br><span class="line">        raise ValueError(&quot;目录 &#123;content&#125; 中缺少↓ \n&#123;data&#125;\n可在 &#39;https:&#x2F;&#x2F;github.com&#x2F;project-mirai&#x2F;mirai-repo&#39; 处下载&quot;.format(</span><br><span class="line">            content&#x3D;content,</span><br><span class="line">            data&#x3D;&#39;, &#39;.join(jar_name - c)</span><br><span class="line">        ))</span><br><span class="line">    print(&quot;开始启动 mirai-console ...&quot;)</span><br><span class="line"></span><br><span class="line">def run(content, JClass):</span><br><span class="line">    try:</span><br><span class="line">        system(f&quot;java -cp &#123;content&#125;&#x2F;* &#123;JClass&#125;&quot;)</span><br><span class="line">    except KeyboardInterrupt:</span><br><span class="line">        print(&quot;手动关闭 mirai...&quot;)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:</span><br><span class="line">    init(content, jar_name)</span><br><span class="line">    run(content, &#39;&quot;net.mamoe.mirai.console.pure.MiraiConsolePureLoader&quot;&#39;)</span><br></pre></td></tr></table></figure><h3 id="mirua方式（一键懒人包）"><a href="#mirua方式（一键懒人包）" class="headerlink" title="mirua方式（一键懒人包）"></a>mirua方式（一键懒人包）</h3><p>可以在<a href="https://github.com/ieew/mirua">这里获得</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git colne https:&#x2F;&#x2F;github.com&#x2F;ieew&#x2F;mirua</span><br></pre></td></tr></table></figure><h3 id="miraiOK方式"><a href="#miraiOK方式" class="headerlink" title="miraiOK方式"></a>miraiOK方式</h3><p>首先找到<a href="https://github.com/LXY1226/MiraiOK">miraiOK仓库</a>或者使用<a href="https://github.com/yooziki/MiraiOK">我的fork仓库</a>并且根据说明文件下载可执行程序到miraoOK目录下</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;LXY1226&#x2F;MiraiOK</span><br></pre></td></tr></table></figure><p>执行对应的可执行文件，等待第一次执行结束</p><blockquote><p>为了保证程序的正确性，第一次执行结束后，请创建一个<strong>.nonupdate</strong>文件禁用更新功能，或者可以试试更新一次会不会出问题</p></blockquote><p>对应的mirai相关jar包可以在<a href="https://github.com/project-mirai/mirai-repo">这里查看</a></p><p>执行第一次之后，在miraiOK的目录下会有一个<code>plugins</code>文件夹，将<code>mirai-api-http-version.jar</code>包放到这里，插件<a href="https://github.com/project-mirai/mirai-api-http">源码</a></p><blockquote><p>如果miraiOK给到的./content/中mirai-core版本为1.0一下，则只能使用1.7版本的mirai-api-http</p></blockquote><p>为了保证py程序的正确运行，再次运行可执行文件</p><p>然后回到<code>plugins</code>文件夹下，新生成了一个文件夹，里面有一个yml配置文件，使用txt方式打开即可。(如果没有生成文件夹，则手动创建<code>./MiraiAPIHTTP/setting.yml</code>)</p><p>写入</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##该配置为分段配置，对所有会话有效</span><br><span class="line"></span><br><span class="line">#Graia只能是0.0.0.0</span><br><span class="line">主机: “ 0.0.0.0 ”</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">端口: 8080</span><br><span class="line"></span><br><span class="line">#Graia需要手动指定，并且和py中保持一致</span><br><span class="line">authKey: 123456780</span><br><span class="line"></span><br><span class="line">#任选，缓存大小，预设4096.缓存过小会导致引用回复和撤回消息失败</span><br><span class="line">cacheSize: 4096</span><br><span class="line"></span><br><span class="line">#任选，是否开启websocket，更改关闭，建议通过会话范围的配置设置</span><br><span class="line">enableWebsocket: true</span><br><span class="line"></span><br><span class="line">#任选，配置CORS跨域，交替为*，即允许所有，可以不做更改</span><br><span class="line">域名cors:</span><br><span class="line">  - &#39; * &#39;</span><br></pre></td></tr></table></figure><p>如果希望每次都自动登录，可以在miraiOK更目录下的<code>config.txt</code>中根据模板提示写入内容</p><h1 id="程序框架"><a href="#程序框架" class="headerlink" title="程序框架"></a>程序框架</h1><p>可以从<a href="https://graiaproject.github.io/Application/#/README">这里查看</a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 所有事件监听都在entry中可以找到</span><br><span class="line">from graia.application.entry import (</span><br><span class="line">    GraiaMiraiApplication, Session,</span><br><span class="line">    MessageChain,Group,Friend,Member,MemberInfo,</span><br><span class="line">    Plain,Image,AtAll,At,Face</span><br><span class="line">)</span><br><span class="line">from graia.application.entry import (</span><br><span class="line">    BotMuteEvent,BotGroupPermissionChangeEvent</span><br><span class="line">)</span><br><span class="line">from graia.broadcast import Broadcast</span><br><span class="line">#from graia.template import Template     # 模板功能</span><br><span class="line">#from graia.component import Components  # 检索器</span><br><span class="line"></span><br><span class="line">import asyncio</span><br><span class="line">from pathlib import Path</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 监听</span><br><span class="line">loop &#x3D; asyncio.get_event_loop()</span><br><span class="line"></span><br><span class="line">bcc &#x3D; Broadcast(loop&#x3D;loop)</span><br><span class="line">app &#x3D; GraiaMiraiApplication(</span><br><span class="line">    broadcast&#x3D;bcc,</span><br><span class="line">    connect_info&#x3D;Session(</span><br><span class="line">        host&#x3D;&quot;http:&#x2F;&#x2F;localhost:8080&quot;,  # 填入 httpapi 服务运行的地址，如果根据我的配置的话可以不做修改</span><br><span class="line">        authKey&#x3D;&quot;1234567890&quot;,  # 填入 authKey</span><br><span class="line">        account&#x3D;1111111,  # 你的机器人的 qq 号</span><br><span class="line">        websocket&#x3D;True  # Graia 已经可以根据所配置的消息接收的方式来保证消息接收部分的正常运作.</span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>其中的<code>bcc</code>是一个广播，会将从miraiOK获得的信息在程序内广播传递。</p><p><code>app</code>是一个像mirai框架传递信息的通道</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 写入监听事件handler</span><br><span class="line">@bcc.receiver(&quot;FriendMessage&quot;)</span><br><span class="line">async def friend_message_listener(app: GraiaMiraiApplication, friend: Friend):</span><br><span class="line">    await app.sendFriendMessage(friend, MessageChain.create([</span><br><span class="line">        Plain(&quot;谢谢, 非常感谢你对我们服务的满意.&quot;)</span><br><span class="line">    ]))</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 程序固定尾</span><br><span class="line">app.launch_blocking()</span><br></pre></td></tr></table></figure><h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><h2 id="MessageChain"><a href="#MessageChain" class="headerlink" title="MessageChain"></a>MessageChain</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from graia.application.message.chain import MessageChain</span><br></pre></td></tr></table></figure><p>用于处理消息的数据结构，包含一个有序列表</p><ul><li>MessageChain.asDisplay()<br>得到字符串形式的消息表示，返回字符串</li><li>MessageChain.<strong>root</strong><br>返回消息链列表</li><li>MessageChain.<strong>doc</strong><br>返回消息链的API文档说明</li><li>MessageChain.<strong>module</strong><br>返回消息链的模块绝对引用</li><li>MessageChain.create(&lt;list/tuple&gt;)<br>创建一个消息链结构，其中list/tuple可以包含能够获取的类型元素，返回创建的消息链</li><li>MessageChain.isImmutable()<br>判断消息链是否为可变，可变返回<code>True</code>，不可变返回<code>False</code>，默认接受的消息为不可变</li><li>MessageChain.asMutable()<br>将消息链转换为可变的，返回可变的消息链</li><li>MessageChain.isSendable()<br>检查消息链是否可以被正确发送，可发送返回<code>True</code>，不可发送返回<code>False</code></li><li>MessageChain.asSendable()<br>将消息链转换为可以发送的新消息链，返回可能可以正确发送的消息链</li><li>MessageChain.has(T)<br>消息链中是否存在某种消息元素，亦可使用<strong>T in MessageChain</strong><br>如果有则返回<code>True</code>否则返回<code>False</code></li><li>MessageChain.get(T)<br>取出消息链中某种消息元素，以列表方式返回<br>亦可以使用<strong>MessageChain[T]</strong></li><li>MessageChain.join(*MessageChains)<br>将多个MessageChain按顺序拼合“<br>返回拼合后的消息链</li><li>MessageChain.plusWith(*MessageChain)<br>方法将在现有的基础上将另一消息链拼接到原来实例的尾部, 并生成, 返回新的实例; 该方法不改变原有和传入的实例.</li><li>MessageChain.plus(*MessageChain)<br>方法将在现有的基础上将另一消息链拼接到原来实例的尾部; 该方法更改了原有的实例, 并要求 <code>isMutable</code> 方法返回 <code>True</code> 才可以执行.</li><li>MessageChain.asSerializationString()<br>将消息链对象转为以 “Mirai 码” 表示特殊对象的字符串<br>返回字符串</li><li>MessageChain.fromSerializationString(string)<br>将以 “Mirai 码” 表示特殊对象的字符串解析为消息链, 不过可能不完整<br>返回消息链，不可变</li><li>MessageChain.asMerged()<br>把相邻的Plain元素合并为一个Plain元素</li><li>MessageChain.subchain(slice)<br>切片操作<br>类似list切片方式<br>返回切片后的MessageChain</li><li>MessageChain.exclude(T)<br>将消息链中某种元素排除<br>返回新的消息链</li><li>MessageChain.include(T)<br>只保留消息链中某种元素<br>返回新消息链</li></ul><h2 id="Elements"><a href="#Elements" class="headerlink" title="Elements"></a>Elements</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import graia.application.message.elements.internal as Elements</span><br></pre></td></tr></table></figure><ul><li><p>Elements.Plain(string)<br>实例化一个Plain元素，用于承载消息中的文字</p></li><li><p>Elements.Source<br>表示消息在一个特定聊天区域内的唯一标识，收到的消息链中存在，只能够获取</p></li><li><p>Elements.Quote(id,groupID,senderID,targetID,origin)<br>表示消息中回复功能，<br>id:回复的消息在群内的唯一标识，通过Elements.Source得到<br>groupID:群号<br>senderID:原消息发送人<br>targetID:群号<br>oringin:发送的消息链</p><blockquote><p>消息链中应该有：原消息链的<strong><strong>root</strong>列表, At(type=‘At’,target=qq号,display=’@谁谁谁(群内id)’), Plain(’ ‘),Plain(“内容”)</strong></p></blockquote></li><li><p><a href="http://elements.at/">Elements.At</a>(id)<br>表示@某人</p></li><li><p>Elements.AtAll()<br>管理员有效，@全体成员</p></li><li><p>Elements.Face(id)<br>表示一个表现，QQ内置的表情，id是表情的id</p></li><li><p>Elements.ImageType(Enum)<br>Friend = “Friend”<br>Group = “Group”<br>Temp = “Temp”<br>Unknown = “Unknow”<br>是一个类型的定义，不需要直接调用</p></li><li><p>Elements.Image()<br>imageID:是一个16进制字符串<br>url:链接位置<br>path<br>type:图片属于哪里(ImageType定义)<br>[关于Image的方法](# Image)</p></li><li><p>Elements.FlashImage(Image)<br>发送闪照，需要先通过Image方法创建一个Image对象<br>亦可以直接<code>Image.asFlash()</code></p></li><li><p>Elements.Xml(str)<br>xml消息</p></li><li><p>Elements.Json(str)</p></li><li><p>Elements.App(str)<br>app消息</p></li><li><p>Elements.PokeMethods(Enum)<br>是一个类型定义，不需要直接调用<br>Poke = “Poke”<br>ShowLove = “ShowLove”<br>Like =“Like”<br>Heartbroken=“Heartbroken”<br>SixSixSix=“SixSixSix”<br>FangDaZhao = “FangDaZhao”</p></li><li><p>Elements.Poke(PokeMethods)</p></li></ul><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from graia.application.message.elements.internal import Image</span><br></pre></td></tr></table></figure><p>[返回到Elements](# Elements)</p><ul><li>Image.fromLoacalFile(filepath)<br>从本地获取一张图片<br>返回ShadowElement，包含了一个asFlash方法，可以作为闪照发送<code>Image.fromLocalFile(path).asFlash()</code></li><li>Image.fromUnsafePath(filepath)<br>不检查路径安全性，让上层协议(mirai-api-http)处理图片文件</li><li>Image.fromUnsafeBytes()<br>从不保证有效性的bytes中创建一个ShadowElement，并且上传，同样包含一个asFlash方法<br>不推荐，安全性低</li><li>Image.fromNetworkAddress(url)<br>从不保证有效性的网络位置中创建一个ShadowElement，在发送的时候从url获得图片并且上传<br>可能抛出任何形式的网络错误<br>可以使用asFlash方法</li><li>Image.fromUnsafeAddress(url)<br>让上层协议(mirai-apii-http)处理图片文件</li><li>Image.asDisplay()<br>返回字符串”[图片]”</li><li>Image.http_to_bytes(url)<br>从远端服务器获取图片的 bytes, 注意, 你无法获取并不包含 url 属性的本元素的 bytes</li><li>Image.asFlash()<br>设为闪照发送</li><li>Image.asSerializationString()<br>将消息链对象转为以 “Mirai 码” 表示特殊对象的字符串</li></ul><h2 id="Massages"><a href="#Massages" class="headerlink" title="Massages"></a>Massages</h2><p>定义了几种消息的类型</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import graia.application.event.messages as Messages</span><br></pre></td></tr></table></figure><ul><li>FriendMessage<br>好友对话事件</li><li>GroupMessage<br>群对话事件</li><li>TempMessage<br>临时对话事件</li></ul><h2 id="Friend模块"><a href="#Friend模块" class="headerlink" title="Friend模块"></a>Friend模块</h2><p>定义了friend的几种属性,需要在监听中声明</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from graia.application.friend import Friend</span><br></pre></td></tr></table></figure><ul><li>id:qq号</li><li>nickname:昵称</li><li><code>remark:好像访问不到？？</code></li></ul><h2 id="Group模块"><a href="#Group模块" class="headerlink" title="Group模块"></a>Group模块</h2><p>定义了group的一些属性,需要在监听中声明，例如：<code>async def group_message_handler(app: GraiaMiraiApplication, message: MessageChain, group: Group,member: Member):</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import graia.application.group as Group</span><br></pre></td></tr></table></figure><h3 id="Group-Group"><a href="#Group-Group" class="headerlink" title="Group.Group"></a>Group.Group</h3><ul><li><a href="http://group.group.id/">Group.Group.id</a>:群id</li><li><a href="http://group.group.name/">Group.Group.name</a>:群名称</li><li>Group.Group.accountPerm:账号在群中的权限</li></ul><h3 id="Group-MemberPerm"><a href="#Group-MemberPerm" class="headerlink" title="Group.MemberPerm"></a>Group.MemberPerm</h3><p>作为字典枚举，并不需要主动调用</p><ul><li>.Member # 普通成员</li><li>.Administrator # 管理员</li><li>.Owner # 群主</li></ul><h3 id="Group-Member"><a href="#Group-Member" class="headerlink" title="Group.Member"></a>Group.Member</h3><p>描述用户在群组中所具备的有关状态，包括所在群组，群中昵称，所具备的权限，唯一的ID</p><ul><li>.id:说话人的QQ号</li><li>.name:说话人的群昵称</li><li>.permission:说话人的权限等级</li><li>.group:上面的Group.Group所有内容</li></ul><h3 id="Group-GroupConfig"><a href="#Group-GroupConfig" class="headerlink" title="Group.GroupConfig"></a>Group.GroupConfig</h3><p>描述群内各项功能的设置(使用方法不明)</p><ul><li>name</li><li>announcement</li><li>confessTalk</li><li>allowMemberInvite</li><li>autoApprove</li><li>anonymousChat</li></ul><h3 id="Group-MemberInfo"><a href="#Group-MemberInfo" class="headerlink" title="Group.MemberInfo"></a>Group.MemberInfo</h3><p>描述群组成员的可修改状态，修改需要权限(使用方法不明)</p><ul><li>name</li><li>specialTitle</li></ul><h2 id="GraiaMiraiApplication类"><a href="#GraiaMiraiApplication类" class="headerlink" title="GraiaMiraiApplication类"></a>GraiaMiraiApplication类</h2><p>大多数的功能都被存在这个类中</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from graia.application import GraiaMiraiApplication</span><br></pre></td></tr></table></figure><h3 id="getVersion"><a href="#getVersion" class="headerlink" title=".getVersion()"></a>.getVersion()</h3><p>返回<code>mirai-api-http</code>的版本</p><h3 id="getGroup-int"><a href="#getGroup-int" class="headerlink" title=".getGroup(int)"></a>.getGroup(int)</h3><p>返回对应群号的群组信息(为空则None)<br>id,name,accountPerm<code>print(app.getGroup(&lt;Id&gt;))</code></p><h3 id="groupList"><a href="#groupList" class="headerlink" title=".groupList()"></a>.groupList()</h3><p><code>print(await app.groupList())</code></p><h3 id="getMember-Group-int-member-int"><a href="#getMember-Group-int-member-int" class="headerlink" title=".getMember(Group int,member int)"></a>.getMember(Group int,member int)</h3><p>从已知群组和已知成员的id获得成员的信息</p><p><code>print(await app.getMember(&lt;ID&gt;,&lt;ID&gt;))</code></p><h3 id="memberList-Group-int"><a href="#memberList-Group-int" class="headerlink" title=".memberList(Group int)"></a>.memberList(Group int)</h3><p>从已知群组中获取群内所有成员的信息列表</p><h3 id="friendList"><a href="#friendList" class="headerlink" title=".friendList()"></a>.friendList()</h3><p>获取所有好友的信息列表</p><p><code>print(await app.friendList())</code></p><h3 id="getFriend-int"><a href="#getFriend-int" class="headerlink" title=".getFriend(int)"></a>.getFriend(int)</h3><p>根据好友的id获取Friend实例</p><h3 id="sendFriendMessage-Friend-MessageChain-quote"><a href="#sendFriendMessage-Friend-MessageChain-quote" class="headerlink" title=".sendFriendMessage(Friend,MessageChain[,quote])"></a>.sendFriendMessage(Friend,MessageChain[,quote])</h3><p>向好友发送消息,quote为回复信息断，可以选择</p><h3 id="sendGroupMessage-Group-MessageChain-quote"><a href="#sendGroupMessage-Group-MessageChain-quote" class="headerlink" title=".sendGroupMessage(Group,MessageChain[,quote])"></a>.sendGroupMessage(Group,MessageChain[,quote])</h3><p>向群组发送消息</p><h3 id="sendTempMessage-Group-ID-Member-ID-messageChain-quote"><a href="#sendTempMessage-Group-ID-Member-ID-messageChain-quote" class="headerlink" title=".sendTempMessage(Group/ID,Member/ID,messageChain[,quote])"></a>.sendTempMessage(Group/ID,Member/ID,messageChain[,quote])</h3><p>向群内成员发起临时会话</p><h3 id="revokeMessage-target"><a href="#revokeMessage-target" class="headerlink" title=".revokeMessage(target)"></a>.revokeMessage(target)</h3><p>撤回消息(2min以内)</p><p>target (Union[Source, BotMessage, int]): 特定信息的 <code>messageId</code>, 可以是 <code>Source</code> 实例, <code>BotMessage</code> 实例或者是单纯的 int 整数.</p><h3 id="messageFromId-source-Source-int"><a href="#messageFromId-source-Source-int" class="headerlink" title=".messageFromId(source[Source, int])"></a>.messageFromId(source[Source, int])</h3><p>尝试从已知的 <code>messageId</code> 获取缓存中的消息</p><h3 id="muteAll-group-amp-unmuteAll-group"><a href="#muteAll-group-amp-unmuteAll-group" class="headerlink" title=".muteAll(group)&amp;.unmuteAll(group)"></a>.muteAll(group)&amp;.unmuteAll(group)</h3><p>全员禁言</p><h3 id="mute-group-member-time-、unmute-group-membder"><a href="#mute-group-member-time-、unmute-group-membder" class="headerlink" title=".mute(group,member,time)、unmute(group,membder)"></a>.mute(group,member,time)、unmute(group,membder)</h3><p>禁言指定群友</p><p>time指禁言时长</p><h3 id="kick-group-membder"><a href="#kick-group-membder" class="headerlink" title=".kick(group,membder)"></a>.kick(group,membder)</h3><p>群内踢掉某人</p><h3 id="quit-group"><a href="#quit-group" class="headerlink" title=".quit(group)"></a>.quit(group)</h3><p>退群</p><h2 id="Event模块"><a href="#Event模块" class="headerlink" title="Event模块"></a>Event模块</h2><p>通过Graia.application.entry可以导入MiraiApiHttp支持的所有事件类型</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from graia.application.entry import (</span><br><span class="line">   *</span><br><span class="line">)</span><br><span class="line">@bcc.receiver(&quot;xxxEvent&quot;)</span><br><span class="line">async def function(event:xxxEvent):</span><br><span class="line">    print(&quot;EventHappened&quot;)</span><br><span class="line">    event.&lt;可选获得参数&#x2F;方法&gt;</span><br></pre></td></tr></table></figure><h3 id="BotOnlineEvent"><a href="#BotOnlineEvent" class="headerlink" title="BotOnlineEvent"></a>BotOnlineEvent</h3><p>当该事件发生时, 应用实例所辖账号登录成功<br>qq: int</p><h3 id="BotOfflineEventActive"><a href="#BotOfflineEventActive" class="headerlink" title="BotOfflineEventActive"></a>BotOfflineEventActive</h3><p>当该事件发生时, 应用实例所辖账号主动离线<br>qq: int</p><h3 id="BotOfflineEventForce"><a href="#BotOfflineEventForce" class="headerlink" title="BotOfflineEventForce"></a>BotOfflineEventForce</h3><p>当该事件发生时, 应用实例所辖账号被迫离线<br>qq: int</p><h3 id="BotOfflineEventDropped"><a href="#BotOfflineEventDropped" class="headerlink" title="BotOfflineEventDropped"></a>BotOfflineEventDropped</h3><p>当该事件发生时, 应用实例所辖账号与服务器的连接被服务器主动断开, 或因网络原因离线<br>qq: int</p><h3 id="BotReloginEvent"><a href="#BotReloginEvent" class="headerlink" title="BotReloginEvent"></a>BotReloginEvent</h3><p>当该事件发生时, 应用实例所辖账号正尝试重新登录<br>qq: int</p><h3 id="BotGroupPermissionChangeEvent"><a href="#BotGroupPermissionChangeEvent" class="headerlink" title="BotGroupPermissionChangeEvent"></a>BotGroupPermissionChangeEvent</h3><p>当该事件发生时, 应用实例所辖账号在一特定群组内所具有的权限发生变化<br>origin: MemberPerm<br>current: MemberPerm<br>group: Group</p><h3 id="BotMuteEvent"><a href="#BotMuteEvent" class="headerlink" title="BotMuteEvent"></a>BotMuteEvent</h3><p>当该事件发生时, 应用实例所辖账号在一特定群组内被管理员/群主禁言</p><blockquote><p>Allowed Extra Parameters(提供的额外注解支持):<br>GraiaMiraiApplication (annotation): 发布事件的应用实例<br>Member (annotation, optional = None): 执行解除禁言操作的管理员/群主, 若为 None 则为应用实例所辖账号操作<br>Group (annotation, optional = None): 发生该事件的群组</p></blockquote><p>durationSeconds: int<br>operator: Optional[Member]</p><h3 id="BotUnmuteEvent"><a href="#BotUnmuteEvent" class="headerlink" title="BotUnmuteEvent"></a>BotUnmuteEvent</h3><p>当该事件发生时, 应用实例所辖账号在一特定群组内被管理员/群主解除禁言<br>operator: Optional[Member]</p><h3 id="BotJoinGroupEvent"><a href="#BotJoinGroupEvent" class="headerlink" title="BotJoinGroupEvent"></a>BotJoinGroupEvent</h3><p>当该事件发生时, 应用实例所辖账号加入指定群组<br>group: Group</p><h3 id="BotLeaveEventActive"><a href="#BotLeaveEventActive" class="headerlink" title="BotLeaveEventActive"></a>BotLeaveEventActive</h3><p>当该事件发生时, 应用实例所辖账号主动退出了某群组.<br>group: Group</p><h3 id="BotLeaveEventKick"><a href="#BotLeaveEventKick" class="headerlink" title="BotLeaveEventKick"></a>BotLeaveEventKick</h3><p>当该事件发生时, 应用实例所辖账号被某群组的管理员/群主从该群组中删除.<br>group: Group</p><h3 id="GroupRecallEvent"><a href="#GroupRecallEvent" class="headerlink" title="GroupRecallEvent"></a>GroupRecallEvent</h3><p>当该事件发生时, 有群成员在指定群组撤回了一条消息<br>注意, 这里的群成员若具有管理员/群主权限, 则他们可以撤回其他普通群员的消息, 且不受发出时间限制<br>authorId: int<br>messageId: int<br>time: datetime<br>group: Group<br>operator: Optional[Member]</p><h3 id="FriendRecallEvent"><a href="#FriendRecallEvent" class="headerlink" title="FriendRecallEvent"></a>FriendRecallEvent</h3><p>当该事件发生时, 有一位与应用实例所辖账号为好友关系的用户撤回了一条消息<br>authorId: int<br>messageId: int<br>time: int<br>operator: int</p><h3 id="GroupNameChangeEvent"><a href="#GroupNameChangeEvent" class="headerlink" title="GroupNameChangeEvent"></a>GroupNameChangeEvent</h3><p>该事件发生时, 有一群组被修改了群名称<br>origin: str<br>current: str<br>group: Group<br>operator: Optional[Member] = None</p><h3 id="GroupEntranceAnnouncementChangeEvent"><a href="#GroupEntranceAnnouncementChangeEvent" class="headerlink" title="GroupEntranceAnnouncementChangeEvent"></a>GroupEntranceAnnouncementChangeEvent</h3><p>该事件发生时, 有一群组被修改了入群公告<br>origin: str<br>current: str<br>group: Group<br>operator: Optional[Member]</p><h3 id="GroupMuteAllEvent"><a href="#GroupMuteAllEvent" class="headerlink" title="GroupMuteAllEvent"></a>GroupMuteAllEvent</h3><p>该事件发生时, 有一群组开启了全体禁言<br>origin: bool<br>current: bool<br>group: Group<br>operator: Optional[Member]</p><h3 id="GroupAllowAnonymousChatEvent"><a href="#GroupAllowAnonymousChatEvent" class="headerlink" title="GroupAllowAnonymousChatEvent"></a>GroupAllowAnonymousChatEvent</h3><p>该事件发生时, 有一群组修改了有关匿名聊天的相关设定<br>origin: bool<br>current: bool<br>group: Group<br>operator: Optional[Member]</p><h3 id="GroupAllowConfessTalkEvent"><a href="#GroupAllowConfessTalkEvent" class="headerlink" title="GroupAllowConfessTalkEvent"></a>GroupAllowConfessTalkEvent</h3><p>该事件发生时, 有一群组修改了有关坦白说的相关设定<br>origin: bool<br>current: bool<br>group: Group<br>isByBot: bool</p><h3 id="GroupAllowMemberInviteEvent"><a href="#GroupAllowMemberInviteEvent" class="headerlink" title="GroupAllowMemberInviteEvent"></a>GroupAllowMemberInviteEvent</h3><p>该事件发生时, 有一群组修改了有关是否允许已有成员邀请其他用户加入群组的相关设定<br>origin: bool<br>current: bool<br>group: Group<br>operator: Optional[Member]</p><h3 id="MemberJoinEvent"><a href="#MemberJoinEvent" class="headerlink" title="MemberJoinEvent"></a>MemberJoinEvent</h3><p>该事件发生时, 有一新成员加入了一特定群组<br>member: Member</p><h3 id="MemberLeaveEventKick"><a href="#MemberLeaveEventKick" class="headerlink" title="MemberLeaveEventKick"></a>MemberLeaveEventKick</h3><p>该事件发生时, 有一群组成员被管理员/群主从群组中删除, 当 <code>operator</code> 为 <code>None</code> 时, 执行者为应用实例所辖账号.<br>type = “MemberLeaveEventKick”<br>member: Member<br>operator: Optional[Member]</p><h3 id="MemberLeaveEventQuit"><a href="#MemberLeaveEventQuit" class="headerlink" title="MemberLeaveEventQuit"></a>MemberLeaveEventQuit</h3><p>该事件发生时, 有一群组成员主动退出群组.<br>member: Member</p><h3 id="MemberCardChangeEvent"><a href="#MemberCardChangeEvent" class="headerlink" title="MemberCardChangeEvent"></a>MemberCardChangeEvent</h3><p>该事件发生时, 有一群组成员的群名片被更改, 执行者可能是管理员/群主, 该成员自己, 也可能是应用实例所辖账号(这时, <code>operator</code> 为 <code>None</code>).<br>origin: str<br>current: str<br>member: Member<br>operator: Optional[Member]</p><h3 id="MemberSpecialTitleChangeEvent"><a href="#MemberSpecialTitleChangeEvent" class="headerlink" title="MemberSpecialTitleChangeEvent"></a>MemberSpecialTitleChangeEvent</h3><p>该事件发生时, 有一群组成员的群头衔被更改, 执行者只可能是群组的群主.<br>origin: str<br>current: str<br>member: Member</p><h3 id="MemberPermissionChangeEvent"><a href="#MemberPermissionChangeEvent" class="headerlink" title="MemberPermissionChangeEvent"></a>MemberPermissionChangeEvent</h3><p>该事件发生时, 有一群组成员的权限被更改/调整, 执行者只可能是群组的群主.<br>origin: str<br>current: str<br>member: Member</p><h3 id="MemberMuteEvent"><a href="#MemberMuteEvent" class="headerlink" title="MemberMuteEvent"></a>MemberMuteEvent</h3><p>该事件发生时, 有一群组成员被管理员/群组禁言, 当 <code>operator</code> 为 <code>None</code> 时为应用实例所辖账号操作.<br>durationSeconds: int<br>member: Member<br>operator: Optional[Member]</p><h3 id="MemberUnmuteEvent"><a href="#MemberUnmuteEvent" class="headerlink" title="MemberUnmuteEvent"></a>MemberUnmuteEvent</h3><p>该事件发生时, 有一群组成员被管理员/群组解除禁言, 当 <code>operator</code> 为 <code>None</code> 时为应用实例所辖账号操作.<br>member: Member<br>operator: Optional[Member]</p><h3 id="NewFriendRequestEvent"><a href="#NewFriendRequestEvent" class="headerlink" title="NewFriendRequestEvent"></a>NewFriendRequestEvent</h3><p>当该事件发生时, 有一用户向机器人提起好友请求.</p><blockquote><p>该事件的处理需要你获取原始事件实例.</p></blockquote><ol><li>读取该事件的基础信息:</li></ol><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">event.supplicant: int # 发起加好友请求的用户的 ID</span><br><span class="line">event.sourceGroup: Optional[int] # 对方可能是从某个群发起对账号的请求的, mirai 可以解析对方从哪个群发起的请求.</span><br><span class="line">event.nickname: str # 对方的昵称</span><br><span class="line">event.message: str # 对方发起请求时填写的描述</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">同意请求: &#96;await event.accept()&#96;, 具体查看该方法所附带的说明.</span><br><span class="line">拒绝请求: &#96;await event.reject()&#96;, 具体查看该方法所附带的说明.</span><br><span class="line">拒绝并不再接受来自对方的请求: &#96;await event.rejectAndBlock()&#96;, 具体查看该方法所附带的说明.</span><br></pre></td></tr></table></figure><p>requestId: int = Field(…, alias=“eventId”)<br>supplicant: int = Field(…, alias=“fromId”) # 即请求方 QQ<br>sourceGroup: Optional[int] = Field(…, alias=“groupId”)<br>nickname: str = Field(…, alias=“nick”)<br>message: str</p><h3 id="accept-message-str-””"><a href="#accept-message-str-””" class="headerlink" title="accept(message:str=””)"></a>accept(message:str=””)</h3><p>同意对方的加好友请求.<br>message (str, optional): 附带给对方的消息. 默认为 “”.</p><h3 id="reject-message-str-“”"><a href="#reject-message-str-“”" class="headerlink" title="reject(message: str = “”)"></a>reject(message: str = “”)</h3><p>拒绝对方的加好友请求.<br>message (str, optional): 附带给对方的消息. 默认为 “”.</p><h3 id="rejectAndBlock-message-str-“”"><a href="#rejectAndBlock-message-str-“”" class="headerlink" title="rejectAndBlock(message: str = “”)"></a>rejectAndBlock(message: str = “”)</h3><p>拒绝对方的加好友请求, 并不再接受来自对方的加好友请求.<br>message (str, optional): 附带给对方的消息. 默认为 “”.</p><h3 id="MemberJoinRequestEvent"><a href="#MemberJoinRequestEvent" class="headerlink" title="MemberJoinRequestEvent"></a>MemberJoinRequestEvent</h3><p>当该事件发生时, 有一用户向机器人作为管理员/群主的群组申请加入群组.</p><blockquote><p>该事件的处理需要你获取原始事件实例.</p></blockquote><ol><li>读取该事件的基础信息:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">5event.supplicant: int # 申请加入群组的用户的 ID</span><br><span class="line">event.groupId: Optional[int] # 对方试图加入的群组的 ID</span><br><span class="line">event.groupName: str # 对方试图加入的群组的名称</span><br><span class="line">event.nickname: str # 对方的昵称</span><br><span class="line">event.message: str # 对方发起请求时填写的描述</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">同意请求: &#96;await event.accept()&#96;, 具体查看该方法所附带的说明.</span><br><span class="line">拒绝请求: &#96;await event.reject()&#96;, 具体查看该方法所附带的说明.</span><br><span class="line">忽略请求: &#96;await event.ignore()&#96;, 具体查看该方法所附带的说明.</span><br><span class="line">拒绝并不再接受来自对方的请求: &#96;await event.rejectAndBlock()&#96;, 具体查看该方法所附带的说明.</span><br><span class="line">忽略并不再接受来自对方的请求: &#96;await event.ignoreAndBlock()&#96;, 具体查看该方法所附带的说明.</span><br></pre></td></tr></table></figure></li></ol><p>requestId: int = Field(…, alias=“eventId”)<br>supplicant: int = Field(…, alias=“fromId”) # 即请求方 QQ<br>groupId: Optional[int] = Field(…, alias=“groupId”)<br>groupName: str = Field(…, alias=“groupName”)<br>nickname: str = Field(…, alias=“nick”)<br>message: str</p><h3 id="accept-message-str-“”"><a href="#accept-message-str-“”" class="headerlink" title="accept(message: str = “”)"></a>accept(message: str = “”)</h3><p>同意对方加入群组.<br>message (str, optional): 附带给对方的消息. 默认为 “”.</p><h3 id="reject-message-str-“”-1"><a href="#reject-message-str-“”-1" class="headerlink" title="reject(message: str = “”)"></a>reject(message: str = “”)</h3><p>拒绝对方加入群组.<br>message (str, optional): 附带给对方的消息. 默认为 “”.</p><h3 id="ignore-self-message-str-“”"><a href="#ignore-self-message-str-“”" class="headerlink" title="ignore(self, message: str = “”)"></a>ignore(self, message: str = “”)</h3><p>忽略对方加入群组的请求.<br>message (str, optional): 附带给对方的消息. 默认为 “”.</p><h3 id="rejectAndBlock-self-message-str-“”"><a href="#rejectAndBlock-self-message-str-“”" class="headerlink" title="rejectAndBlock(self, message: str = “”)"></a>rejectAndBlock(self, message: str = “”)</h3><p>拒绝对方加入群组的请求, 并不再接受来自对方加入群组的请求<br>message (str, optional): 附带给对方的消息. 默认为 “”.</p><h3 id="BotInvitedJoinGroupRequestEvent"><a href="#BotInvitedJoinGroupRequestEvent" class="headerlink" title="BotInvitedJoinGroupRequestEvent"></a>BotInvitedJoinGroupRequestEvent</h3><p>当该事件发生时, 应用实例所辖账号接受到来自某个账号的邀请加入某个群组的请求.</p><blockquote><p>该事件的处理需要你获取原始事件实例.</p></blockquote><ol><li>读取该事件的基础信息:<figure class="highlight plain"><figcaption><span>int # 邀请所辖账号加入群组的用户的 ID</span></figcaption><table><tr><td class="code"><pre><span class="line">event.groupId: Optional[int] # 对方邀请所辖账号加入的群组的 ID</span><br><span class="line">event.groupName: str # 对方邀请所辖账号加入的群组的名称</span><br><span class="line">event.nickname: str # 对方的昵称</span><br><span class="line">event.message: str # 对方发起请求时填写的描述</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">同意请求: &#96;await event.accept()&#96;, 具体查看该方法所附带的说明.</span><br><span class="line">拒绝请求: &#96;await event.reject()&#96;, 具体查看该方法所附带的说明.</span><br></pre></td></tr></table></figure></li></ol><p>requestId: int = Field(…, alias=“eventId”)<br>supplicant: int = Field(…, alias=“fromId”) # 即请求方 QQ<br>groupId: Optional[int] = Field(…, alias=“groupId”)<br>groupName: str = Field(…, alias=“groupName”)<br>nickname: str = Field(…, alias=“nick”)<br>message: str</p><h3 id="accept-message-str-“”-1"><a href="#accept-message-str-“”-1" class="headerlink" title="accept(message: str = “”)"></a>accept(message: str = “”)</h3><p>同意对方加入群组.<br>message (str, optional): 附带给对方的消息. 默认为 “”.</p><h3 id="reject-message-str-“”-2"><a href="#reject-message-str-“”-2" class="headerlink" title="reject(message: str = “”)"></a>reject(message: str = “”)</h3><p>拒绝对方加入群组.<br>message (str, optional): 附带给对方的消息. 默认为 “”.</p><h2 id="GraiaScheduler模块"><a href="#GraiaScheduler模块" class="headerlink" title="GraiaScheduler模块"></a>GraiaScheduler模块</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from graia.scheduler import (</span><br><span class="line">    timers,</span><br><span class="line">)</span><br><span class="line">import graia.scheduler as scheduler</span><br><span class="line">loop &#x3D; asyncio.get_event_loop()</span><br><span class="line">bcc &#x3D; Broadcast(loop&#x3D;loop)</span><br><span class="line">app &#x3D; GraiaMiraiApplication(</span><br><span class="line">    ...</span><br><span class="line">)</span><br><span class="line">sche &#x3D; scheduler.GraiaScheduler(loop&#x3D;loop,broadcast&#x3D;bcc)</span><br><span class="line"></span><br><span class="line">....</span><br><span class="line">@sche.schedule(timers.every_custom_seconds(60))</span><br><span class="line">async def test():</span><br><span class="line">    print(&quot;60s一次&quot;)</span><br><span class="line">....</span><br></pre></td></tr></table></figure><blockquote><p>timers为一些常用的Scheduler时间设置</p></blockquote><p>对于<code>timers</code>中自造方法，使用<code>croniter</code>模块</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from datetime import datetime, timedelta</span><br><span class="line">from croniter import croniter</span><br><span class="line"></span><br><span class="line">def every(**kwargs):</span><br><span class="line">    while True:</span><br><span class="line">        yield datetime.now() + timedelta(**kwargs)</span><br><span class="line"></span><br><span class="line">def func(n):</span><br><span class="line">    &quot;&quot;&quot;每时间执行一次&quot;&quot;&quot;</span><br><span class="line">    yield from every(seconds&#x3D;n)</span><br><span class="line">    #yield from every(hours&#x3D;n)</span><br><span class="line">    #yield from every(minutes&#x3D;n)</span><br><span class="line"></span><br><span class="line">def crontabify(pattern: str):</span><br><span class="line">    &quot;&quot;&quot;使用类似 crontab 的方式生成计时器</span><br><span class="line"></span><br><span class="line">    Args:</span><br><span class="line">        pattern (str): crontab 的设置, 具体请合理使用搜索引擎</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    base_datetime &#x3D; datetime.now()</span><br><span class="line">    crontab_iter &#x3D; croniter(pattern, base_datetime)</span><br><span class="line">    while True:</span><br><span class="line">        yield crontab_iter.get_next(datetime)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文作者： YOOZIKI&lt;br&gt; 本文链接： &lt;a href=&quot;https://yooziki.github.io/2020/08/297095/&quot;&gt;https://yooziki.github.io/2020/08/297095/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Python版本：py37&quot;&gt;&lt;a href=&quot;#Python版本：py37&quot; class=&quot;headerlink&quot; title=&quot;Python版本：py37&quot;&gt;&lt;/a&gt;Python版本：py37&lt;/h2&gt;&lt;p&gt;安装相关模块，&lt;a href=&quot;https://github.com/GraiaProject/Application&quot;&gt;源码在这里&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install graia-application-mirai&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip install graia-broadcast --upgrade&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pip install singledispatchmethod&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;添加选择器子模块&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install graia-component-selector&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&quot;mirai环境配置&quot;&gt;&lt;a href=&quot;#mirai环境配置&quot; class=&quot;headerlink&quot; title=&quot;mirai环境配置&quot;&gt;&lt;/a&gt;mirai环境配置&lt;/h2&gt;&lt;h3 id=&quot;自定义方式-推荐&quot;&gt;&lt;a href=&quot;#自定义方式-推荐&quot; class=&quot;headerlink&quot; title=&quot;自定义方式(推荐)&quot;&gt;&lt;/a&gt;自定义方式(推荐)&lt;/h3&gt;&lt;p&gt;在&lt;a href=&quot;https://github.com/project-mirai/mirai-repo&quot;&gt;mirai仓库中&lt;/a&gt;的&lt;code&gt;shadow&lt;/code&gt;下找到对应的包体并下载&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果出现无法下载的情况下载文件时将&lt;a href=&quot;https://github.com替换成http://github-proxy.yobot.win即可&quot;&gt;https://github.com替换成http://github-proxy.yobot.win即可&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="robot" scheme="https://asea.fun/tags/robot/"/>
    
      <category term="mirai" scheme="https://asea.fun/tags/mirai/"/>
    
      <category term="Graia" scheme="https://asea.fun/tags/Graia/"/>
    
  </entry>
  
  <entry>
    <title>小小总结</title>
    <link href="https://asea.fun/post/427de4be.html"/>
    <id>https://asea.fun/post/427de4be.html</id>
    <published>2021-05-06T15:49:34.000Z</published>
    <updated>2021-05-09T16:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目前涉猎内容"><a href="#目前涉猎内容" class="headerlink" title="目前涉猎内容"></a>目前涉猎内容</h1><blockquote><p>简单记录一下自己目前所了解到的知识</p></blockquote><ol><li>hexo个人博客</li><li>cocoscreater开发的小游戏</li><li>前端三剑客入门</li><li>计算机二级证书</li><li>python做的几个桌面应用<ol><li>百度网盘链接提取器</li><li>文件批量处理工具</li></ol></li><li>学习通作业提醒、博客更新提醒</li><li>基于mirai和graia的qq机器人（集成包括作业提醒的功能）</li><li>微信小程序（起步）</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目前涉猎内容&quot;&gt;&lt;a href=&quot;#目前涉猎内容&quot; class=&quot;headerlink&quot; title=&quot;目前涉猎内容&quot;&gt;&lt;/a&gt;目前涉猎内容&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;简单记录一下自己目前所了解到的知识&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;hexo个人博客&lt;/li&gt;
&lt;li&gt;cocoscreater开发的小游戏&lt;/li&gt;
&lt;li&gt;前端三剑客入门&lt;/li&gt;
&lt;li&gt;计算机二级证书&lt;/li&gt;
&lt;li&gt;python做的几个桌面应用&lt;ol&gt;
&lt;li&gt;百度网盘链接提取器&lt;/li&gt;
&lt;li&gt;文件批量处理工具&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;学习通作业提醒、博客更新提醒&lt;/li&gt;
&lt;li&gt;基于mirai和graia的qq机器人（集成包括作业提醒的功能）&lt;/li&gt;
&lt;li&gt;微信小程序（起步）&lt;/li&gt;
&lt;/ol&gt;

    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="summary" scheme="https://asea.fun/tags/summary/"/>
    
  </entry>
  
  <entry>
    <title>Github进不去解决方法</title>
    <link href="https://asea.fun/post/3345821.html"/>
    <id>https://asea.fun/post/3345821.html</id>
    <published>2021-05-06T13:23:47.000Z</published>
    <updated>2021-05-06T13:25:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Github进不去解决方法"><a href="#Github进不去解决方法" class="headerlink" title="Github进不去解决方法"></a>Github进不去解决方法</h1><p>按以下方法修改hosts文件，注意hosts文件只有在管理员权限下才可以修改，hosts文件所在目录为:</p><p><code>C:\Windows\System32\drivers\etc\hosts</code>，注意修改右下角显示所有文件才可以看到。</p><p>用<a href="https://www.ipaddress.com/ip-lookup">此网站</a>查找<code>github.com</code>和<code>github.global.ssl.fastly.net</code>对应的ip，然后添加hosts文件以下内容：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">github.com的ip    github.com</span><br><span class="line"></span><br><span class="line">github.global.ssl.fastly.net的ip    github.global.ssl.fastly.net</span><br></pre></td></tr></table></figure><p> 注意添加的ip要是你自己本机查到的，用网上其他人查到的可能不管用</p><p>————————————————</p><p>版权声明：本文为CSDN博主「w͏l͏j͏」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</p><p><a href="https://blog.csdn.net/qq_40624026/article/details/107704677">原文链接</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Github进不去解决方法&quot;&gt;&lt;a href=&quot;#Github进不去解决方法&quot; class=&quot;headerlink&quot; title=&quot;Github进不去解决方法&quot;&gt;&lt;/a&gt;Github进不去解决方法&lt;/h1&gt;&lt;p&gt;按以下方法修改hosts文件，注意hosts文件只有在管理员权限下才可以修改，hosts文件所在目录为:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt;，注意修改右下角显示所有文件才可以看到。&lt;/p&gt;
&lt;p&gt;用&lt;a href=&quot;https://www.ipaddress.com/ip-lookup&quot;&gt;此网站&lt;/a&gt;查找&lt;code&gt;github.com&lt;/code&gt;和&lt;code&gt;github.global.ssl.fastly.net&lt;/code&gt;对应的ip，然后添加hosts文件以下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;github.com的ip    github.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;github.global.ssl.fastly.net的ip    github.global.ssl.fastly.net&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt; 注意添加的ip要是你自己本机查到的，用网上其他人查到的可能不管用&lt;/p&gt;
&lt;p&gt;————————————————&lt;/p&gt;
&lt;p&gt;版权声明：本文为CSDN博主「w͏l͏j͏」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_40624026/article/details/107704677&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="技术" scheme="https://asea.fun/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="github" scheme="https://asea.fun/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>数据结构学习笔记</title>
    <link href="https://asea.fun/post/31bf2518.html"/>
    <id>https://asea.fun/post/31bf2518.html</id>
    <published>2021-05-05T14:54:39.000Z</published>
    <updated>2021-05-05T15:32:51.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据结构学习笔记"><a href="#数据结构学习笔记" class="headerlink" title="数据结构学习笔记"></a>数据结构学习笔记</h1><h2 id="认识数据"><a href="#认识数据" class="headerlink" title="认识数据"></a>认识数据</h2><ul><li>数据</li><li>数据对象（<em>同一类数据元素的集合</em>）</li><li>数据元素（<em>研究的最小的一个整体</em>）</li><li>数据项（<em>数据元素的最小构成单位</em>）</li></ul><h2 id="数据结构分类"><a href="#数据结构分类" class="headerlink" title="数据结构分类"></a>数据结构分类</h2><ol><li>数据结构主要研究其<strong>逻辑结构</strong>、<strong>物理结构</strong>、及其<strong>运算</strong>。</li><li>逻辑结构<ol><li>划分一<ul><li>线性结构（<em>有且仅有一个开始和一个终端结点，并且所有结点都最多只有一个直接前趋和一个直接后继。</em>）<ul><li>线性表</li><li>栈</li><li>队列</li><li>串</li></ul></li><li>非线性结构（<em>一个结点可能有多个直接前趋和直接后继</em>）<ul><li>树</li><li>图</li></ul></li></ul></li><li>划分二<ul><li>集合结构（<em>结构中的数据元素之间除了同属于一个集合的关系外，无任何其它关系。</em>）</li><li>线性结构（<em>结构中的数据元素之间存在着一对一的线性关系。</em>）</li><li>树形结构（<em>结构中的数据元素之间存在着一对多的层次关系。</em>）</li><li>图/网状结构 （<em>结构中的数据元素之间存在着多对多的任意关系。</em>）</li></ul></li></ol></li><li>存储结构<ol><li>顺序存储结构（<em>用一组连续的存储单鹂依次存储数据元素，数据元素之间的逻辑关系由元素的存储位置来表示。*</em>C语言中用数组来实现顺序存储结构***）</li><li>链式存储结构（<em>用一组任意的存储单元存储数据元素，数据元素之间的逻辑关系用指针来表示。*</em>C中用指针来实现链式存储结构***）</li><li><em>索引存储结构</em></li><li><em>散列存储结构</em></li></ol></li></ol><h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数据结构学习笔记&quot;&gt;&lt;a href=&quot;#数据结构学习笔记&quot; class=&quot;headerlink&quot; title=&quot;数据结构学习笔记&quot;&gt;&lt;/a&gt;数据结构学习笔记&lt;/h1&gt;&lt;h2 id=&quot;认识数据&quot;&gt;&lt;a href=&quot;#认识数据&quot; class=&quot;headerlink&quot; title=&quot;认识数据&quot;&gt;&lt;/a&gt;认识数据&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;数据&lt;/li&gt;
&lt;li&gt;数据对象（&lt;em&gt;同一类数据元素的集合&lt;/em&gt;）&lt;/li&gt;
&lt;li&gt;数据元素（&lt;em&gt;研究的最小的一个整体&lt;/em&gt;）&lt;/li&gt;
&lt;li&gt;数据项（&lt;em&gt;数据元素的最小构成单位&lt;/em&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;数据结构分类&quot;&gt;&lt;a href=&quot;#数据结构分类&quot; class=&quot;headerlink&quot; title=&quot;数据结构分类&quot;&gt;&lt;/a&gt;数据结构分类&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;数据结构主要研究其&lt;strong&gt;逻辑结构&lt;/strong&gt;、&lt;strong&gt;物理结构&lt;/strong&gt;、及其&lt;strong&gt;运算&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;逻辑结构&lt;ol&gt;
&lt;li&gt;划分一&lt;ul&gt;
&lt;li&gt;线性结构（&lt;em&gt;有且仅有一个开始和一个终端结点，并且所有结点都最多只有一个直接前趋和一个直接后继。&lt;/em&gt;）&lt;ul&gt;
&lt;li&gt;线性表&lt;/li&gt;
&lt;li&gt;栈&lt;/li&gt;
&lt;li&gt;队列&lt;/li&gt;
&lt;li&gt;串&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;非线性结构（&lt;em&gt;一个结点可能有多个直接前趋和直接后继&lt;/em&gt;）&lt;ul&gt;
&lt;li&gt;树&lt;/li&gt;
&lt;li&gt;图&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;划分二&lt;ul&gt;
&lt;li&gt;集合结构（&lt;em&gt;结构中的数据元素之间除了同属于一个集合的关系外，无任何其它关系。&lt;/em&gt;）&lt;/li&gt;
&lt;li&gt;线性结构（&lt;em&gt;结构中的数据元素之间存在着一对一的线性关系。&lt;/em&gt;）&lt;/li&gt;
&lt;li&gt;树形结构（&lt;em&gt;结构中的数据元素之间存在着一对多的层次关系。&lt;/em&gt;）&lt;/li&gt;
&lt;li&gt;图/网状结构 （&lt;em&gt;结构中的数据元素之间存在着多对多的任意关系。&lt;/em&gt;）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;存储结构&lt;ol&gt;
&lt;li&gt;顺序存储结构（&lt;em&gt;用一组连续的存储单鹂依次存储数据元素，数据元素之间的逻辑关系由元素的存储位置来表示。*&lt;/em&gt;C语言中用数组来实现顺序存储结构***）&lt;/li&gt;
&lt;li&gt;链式存储结构（&lt;em&gt;用一组任意的存储单元存储数据元素，数据元素之间的逻辑关系用指针来表示。*&lt;/em&gt;C中用指针来实现链式存储结构***）&lt;/li&gt;
&lt;li&gt;&lt;em&gt;索引存储结构&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;散列存储结构&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;/h2&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="https://asea.fun/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="数据结构" scheme="https://asea.fun/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>水漫二十</title>
    <link href="https://asea.fun/post/42a48ee3.html"/>
    <id>https://asea.fun/post/42a48ee3.html</id>
    <published>2021-04-28T16:31:04.000Z</published>
    <updated>2021-04-28T16:31:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在生日过后记录些"><a href="#在生日过后记录些" class="headerlink" title="在生日过后记录些"></a>在生日过后记录些</h2><p>前两天忽然想起来《毕业缺海》那篇文章，于是又翻出来看了看，其中大概有一成的东西读来仿佛不属于我了，我知道这个比例会越来越大，但相较于其他篇算性能不错了。一晃而过，毕业到现在，还有一个多月便两年了，刚好是我从一个环境到另一个环境所需要的适应的时间。再多一年就会成为心里永远的壁垒了。<br>农历生日过了十几年了，今年单独抽出来过了阳历生日，410总比317好听些，但是317实在太令人熟悉了，条件反射般的让我激灵。2021年的317，算是我主观意义上真正二十了，这一天极为平淡，上午两大节课，电工技术和机械原理都是再前半段集中注意力了，后面逐渐跑神，就再也没能回过来。下午互换性还算勉强抵抗困意，软件技术还是一如往常。这些事情不重要，所以只需要一笔带过。真正想要记录的有一些，例如：阿弥在我生日这天直播，我把qq飞车打上了星耀，买的拖鞋到了，会用浴花起沫洗头，会在vscode使用qq插件，我妈早上给我了500，奶奶在七点多就给我打了个电话（我到晚上才回过去），我爸发的红包里我和我妈抢到的竟然一模一样（这毕竟是我们母子二人的节日），作业基本搞定，两天后要出去玩一下，衣服洗好，床单更换，枕套更换，我对家的理解慢慢改善，家庭关系愈发融洽（我悟出来的解决方法就是像对待朋友一样对待他们）……<br>最近仿佛是在好起来。<br>仿佛我在阳历生日许下的心愿已经完成一二。<br>那这次生日许个什么愿呢，愿望是不能说出来的，但毕竟我写这些东西的时候，已经二十了，所以还是可以说的对吧？<br>所以，我真的希望，现阶段，转专业可以成功吧，之后便是投入计算机的努力（这是最好的结果，尽管可能性不是很大）。</p><p>再说点关于生日的吧，现在除了家人（大鹅也是家人）基本没人会跟我说生日快乐了。可能会有些失落，是不可控的那种失落。我想起来那个up过二十的时候录vlog了，还是很喜欢那样直抒胸臆的措辞和神态的，至少我做不出来，我还是很喜欢看别人快乐。<br>为什么说水漫二十呢，第一是有点上火喝了很多水；第二是水有时候很平静，就像这次的生日；第三是毕业缺海那篇，到现在我也没见到海；第四是过去稀里糊涂，二十算是上岸了吧。<br>太晚了，就不多写了。<br><strong>anyway，goonigh~</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在生日过后记录些&quot;&gt;&lt;a href=&quot;#在生日过后记录些&quot; class=&quot;headerlink&quot; title=&quot;在生日过后记录些&quot;&gt;&lt;/a&gt;在生日过后记录些&lt;/h2&gt;&lt;p&gt;前两天忽然想起来《毕业缺海》那篇文章，于是又翻出来看了看，其中大概有一成的东西读来仿佛不属于我了，我知道这个比例会越来越大，但相较于其他篇算性能不错了。一晃而过，毕业到现在，还有一个多月便两年了，刚好是我从一个环境到另一个环境所需要的适应的时间。再多一年就会成为心里永远的壁垒了。&lt;br&gt;农历生日过了十几年了，今年单独抽出来过了阳历生日，410总比317好听些，但是317实在太令人熟悉了，条件反射般的让我激灵。2021年的317，算是我主观意义上真正二十了，这一天极为平淡，上午两大节课，电工技术和机械原理都是再前半段集中注意力了，后面逐渐跑神，就再也没能回过来。下午互换性还算勉强抵抗困意，软件技术还是一如往常。这些事情不重要，所以只需要一笔带过。真正想要记录的有一些，例如：阿弥在我生日这天直播，我把qq飞车打上了星耀，买的拖鞋到了，会用浴花起沫洗头，会在vscode使用qq插件，我妈早上给我了500，奶奶在七点多就给我打了个电话（我到晚上才回过去），我爸发的红包里我和我妈抢到的竟然一模一样（这毕竟是我们母子二人的节日），作业基本搞定，两天后要出去玩一下，衣服洗好，床单更换，枕套更换，我对家的理解慢慢改善，家庭关系愈发融洽（我悟出来的解决方法就是像对待朋友一样对待他们）……&lt;br&gt;最近仿佛是在好起来。&lt;br&gt;仿佛我在阳历生日许下的心愿已经完成一二。&lt;br&gt;那这次生日许个什么愿呢，愿望是不能说出来的，但毕竟我写这些东西的时候，已经二十了，所以还是可以说的对吧？&lt;br&gt;所以，我真的希望，现阶段，转专业可以成功吧，之后便是投入计算机的努力（这是最好的结果，尽管可能性不是很大）。&lt;/p&gt;
&lt;p&gt;再说点关于生日的吧，现在除了家人（大鹅也是家人）基本没人会跟我说生日快乐了。可能会有些失落，是不可控的那种失落。我想起来那个up过二十的时候录vlog了，还是很喜欢那样直抒胸臆的措辞和神态的，至少我做不出来，我还是很喜欢看别人快乐。&lt;br&gt;为什么说水漫二十呢，第一是有点上火喝了很多水；第二是水有时候很平静，就像这次的生日；第三是毕业缺海那篇，到现在我也没见到海；第四是过去稀里糊涂，二十算是上岸了吧。&lt;br&gt;太晚了，就不多写了。&lt;br&gt;&lt;strong&gt;anyway，goonigh~&lt;/strong&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="日常" scheme="https://asea.fun/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="life" scheme="https://asea.fun/tags/life/"/>
    
      <category term="birthday" scheme="https://asea.fun/tags/birthday/"/>
    
  </entry>
  
</feed>
